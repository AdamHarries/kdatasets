{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__16233, const global float* restrict v__16234, const global float* restrict v__16235, const global float* restrict v__16236, float v__16237, float v__16238, global float* v__16255, global float* v__16245, local float* v__16250, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__16241; \n  float v__16246; \n  float v__2938; \n  /* Private Memory */\n  float v__16243_0;\n  \n  for (int v_wg_id_16225 = get_group_id(0); v_wg_id_16225 < v_MHeight_2; v_wg_id_16225 = (v_wg_id_16225 + get_num_groups(0))) {\n    for (int v_l_id_16226 = get_local_id(0); v_l_id_16226 < v_MWidthC_1; v_l_id_16226 = (v_l_id_16226 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_16227 = 0; v_i_16227 < 128; v_i_16227 = (1 + v_i_16227)) {\n        float v_tmp_16320 = 0.0f; \n        v__16241 = v_tmp_16320; \n        int v_index_16321 = v__16233[(v_l_id_16226 + (128 * v_MWidthC_1 * v_wg_id_16225) + (v_MWidthC_1 * v_i_16227))]; \n        if (v_index_16321 < 0) {\n          v__16243_0 = v__16241; \n        } else {\n          if (v_index_16321 >= v_VLength_3) {\n            v__16243_0 = v__16241; \n          } else {\n            v__16243_0 = v__16235[v_index_16321]; \n          }\n        }\n        v__16245[(v_i_16227 + (128 * v_MWidthC_1 * v_wg_id_16225) + (128 * v_l_id_16226))] = mult(v__16243_0, v__16234[(v_l_id_16226 + (128 * v_MWidthC_1 * v_wg_id_16225) + (v_MWidthC_1 * v_i_16227))]); \n      }\n      /* end map_seq */\n      float v_tmp_16322 = 0.0f; \n      v__16246 = v_tmp_16322; \n      /* reduce_seq */\n      for (int v_i_16228 = 0; v_i_16228 < 128; v_i_16228 = (1 + v_i_16228)) {\n        v__16246 = add(v__16246, v__16245[(v_i_16228 + (128 * v_MWidthC_1 * v_wg_id_16225) + (128 * v_l_id_16226))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_16229 = 0; \n        v__16250[v_l_id_16226] = id(v__16246); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_16230 = get_local_id(0); \n      float v_tmp_16325 = 0.0f; \n      v__2938 = v_tmp_16325; \n      /* reduce_seq */\n      for (int v_i_16231 = 0; v_i_16231 < v_MWidthC_1; v_i_16231 = (1 + v_i_16231)) {\n        v__2938 = add(v__2938, v__16250[(v_i_16231 + (v_MWidthC_1 * v_l_id_16230))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_16232 = 0; \n        v__16255[v_wg_id_16225] = doubleMultiplyAdd(v__2938, v__16237, v__16236[v_wg_id_16225], v__16238); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__16233",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__16234",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__16235",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__16236",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__16237",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__16238",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__16255",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  } ],
  "outputArg" : {
    "variable" : "v__16245",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  },
  "tempLocals" : [ {
    "variable" : "v__16250",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}