{
  "name" : "swrg-slcl-fdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__22731, const global float* restrict v__22732, const global float* restrict v__22733, const global float* restrict v__22734, float v__22735, float v__22736, global float* v__22749, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__22739; \n  float v__22741; \n  /* Private Memory */\n  float v__22743_0;\n  \n  float v__22745_0;\n  \n  for (int v_wg_id_22727 = get_group_id(0); v_wg_id_22727 < ((v_MHeight_2)/(512)); v_wg_id_22727 = (v_wg_id_22727 + get_num_groups(0))) {\n    for (int v_l_id_22728 = get_local_id(0); v_l_id_22728 < 512; v_l_id_22728 = (v_l_id_22728 + get_local_size(0))) {\n      float v_tmp_22791 = 0.0f; \n      v__22739 = v_tmp_22791; \n      /* reduce_seq */\n      for (int v_i_22729 = 0; v_i_22729 < v_MWidthC_1; v_i_22729 = (1 + v_i_22729)) {\n        float v_tmp_22792 = 0.0f; \n        v__22741 = v_tmp_22792; \n        int v_index_22793 = v__22731[(v_i_22729 + (512 * v_MWidthC_1 * v_wg_id_22727) + (v_MWidthC_1 * v_l_id_22728))]; \n        if (v_index_22793 < 0) {\n          v__22743_0 = v__22741; \n        } else {\n          if (v_index_22793 >= v_VLength_3) {\n            v__22743_0 = v__22741; \n          } else {\n            v__22743_0 = v__22733[v_index_22793]; \n          }\n        }\n        v__22745_0 = mult(v__22743_0, v__22732[(v_i_22729 + (512 * v_MWidthC_1 * v_wg_id_22727) + (v_MWidthC_1 * v_l_id_22728))]); \n        v__22739 = add(v__22745_0, v__22739); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22730 = 0; \n        v__22749[(v_l_id_22728 + (512 * v_wg_id_22727))] = doubleMultiplyAdd(v__22739, v__22735, v__22734[(v_l_id_22728 + (512 * v_wg_id_22727))], v__22736); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__22731",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22732",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22733",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__22734",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__22735",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__22736",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__22749",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}