{
  "name" : "swrg-slcl-sdp-chunk-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__39951, const global int* restrict v__39952, const global int* restrict v__39953, const global int* restrict v__39954, int v__39955, int v__39956, global int* v__39969, global int* v__39963, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__39959; \n  int v__39964; \n  /* Private Memory */\n  int v__39961_0;\n  \n  for (int v_wg_id_39946 = get_group_id(0); v_wg_id_39946 < ((v_MHeight_2)/(32)); v_wg_id_39946 = (v_wg_id_39946 + get_num_groups(0))) {\n    for (int v_l_id_39947 = get_local_id(0); v_l_id_39947 < 32; v_l_id_39947 = (v_l_id_39947 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_39948 = 0; v_i_39948 < v_MWidthC_1; v_i_39948 = (1 + v_i_39948)) {\n        int v_tmp_40013 = 0; \n        v__39959 = v_tmp_40013; \n        int v_index_40014 = v__39951[(v_i_39948 + (32 * v_MWidthC_1 * v_wg_id_39946) + (v_MWidthC_1 * v_l_id_39947))]; \n        if (v_index_40014 < 0) {\n          v__39961_0 = v__39959; \n        } else {\n          if (v_index_40014 >= v_VLength_3) {\n            v__39961_0 = v__39959; \n          } else {\n            v__39961_0 = v__39953[v_index_40014]; \n          }\n        }\n        v__39963[(-1 + v_MWidthC_1 + (32 * v_MWidthC_1 * v_wg_id_39946) + (-1 * v_i_39948) + (v_MWidthC_1 * v_l_id_39947))] = bool_and(v__39961_0, v__39952[(v_i_39948 + (32 * v_MWidthC_1 * v_wg_id_39946) + (v_MWidthC_1 * v_l_id_39947))]); \n      }\n      /* end map_seq */\n      int v_tmp_40015 = 0; \n      v__39964 = v_tmp_40015; \n      /* reduce_seq */\n      for (int v_i_39949 = 0; v_i_39949 < v_MWidthC_1; v_i_39949 = (1 + v_i_39949)) {\n        v__39964 = bool_or(v__39964, v__39963[(v_i_39949 + (32 * v_MWidthC_1 * v_wg_id_39946) + (v_MWidthC_1 * v_l_id_39947))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_39950 = 0; \n        v__39969[(v_l_id_39947 + (32 * v_wg_id_39946))] = doubleAndOr(v__39964, v__39955, v__39954[(v_l_id_39947 + (32 * v_wg_id_39946))], v__39956); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__39951",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__39952",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__39953",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__39954",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__39955",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__39956",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__39963",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__39969",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}