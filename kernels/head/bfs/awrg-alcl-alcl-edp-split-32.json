{
  "name" : "awrg-alcl-alcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__43187, const global int* restrict v__43188, const global int* restrict v__43189, const global int* restrict v__43190, int v__43191, int v__43192, global int* v__43212, global int* v__43194, local int* v__43207, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__43196; \n  int v__43198; \n  int v__33230; \n  /* Private Memory */\n  int v__43200_0;\n  \n  int v__43202_0;\n  \n  int v__43206_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3208 = v__43194; \n    local int v_w_id_43180; \n    if (get_local_id(0) == 0) {\n      v_w_id_43180 = atomic_inc(v_work_idx_3208); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_43180 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3206; \n        v_work_idx_3206 = 0; \n        int v_l_id_43181 = atomic_inc(&(v_work_idx_3206)); \n        while((v_l_id_43181 < v_MWidthC_1)){\n          int v_tmp_43266 = 0; \n          v__43196 = v_tmp_43266; \n          /* reduce_while_seq */\n          for (int v_i_43182 = 0; v_i_43182 < 32; v_i_43182 = (1 + v_i_43182)) {\n            v__43206_0 = check(v__43196, v__43187[(v_l_id_43181 + (32 * v_MWidthC_1 * v_w_id_43180) + (v_MWidthC_1 * v_i_43182))]); \n            if (v__43206_0) {\n            } else {\n              break;\n            }\n            int v_tmp_43267 = 0; \n            v__43198 = v_tmp_43267; \n            int v_index_43268 = v__43187[(v_l_id_43181 + (32 * v_MWidthC_1 * v_w_id_43180) + (v_MWidthC_1 * v_i_43182))]; \n            if (v_index_43268 < 0) {\n              v__43200_0 = v__43198; \n            } else {\n              if (v_index_43268 >= v_VLength_3) {\n                v__43200_0 = v__43198; \n              } else {\n                v__43200_0 = v__43189[v_index_43268]; \n              }\n            }\n            v__43202_0 = bool_and(v__43200_0, v__43188[(v_l_id_43181 + (32 * v_MWidthC_1 * v_w_id_43180) + (v_MWidthC_1 * v_i_43182))]); \n            v__43196 = bool_or(v__43202_0, v__43196); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43183 = 0; \n            v__43207[v_l_id_43181] = id(v__43196); \n          }\n          /* end map_seq */\n          v_l_id_43181 = atomic_inc(&(v_work_idx_3206)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3201; \n        v_work_idx_3201 = 0; \n        int v_l_id_43184 = atomic_inc(&(v_work_idx_3201)); \n        while((v_l_id_43184 < 1)){\n          int v_tmp_43271 = 0; \n          v__33230 = v_tmp_43271; \n          /* reduce_seq */\n          for (int v_i_43185 = 0; v_i_43185 < v_MWidthC_1; v_i_43185 = (1 + v_i_43185)) {\n            v__33230 = bool_or(v__33230, v__43207[(v_i_43185 + (v_MWidthC_1 * v_l_id_43184))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43186 = 0; \n            v__43212[v_w_id_43180] = doubleAndOr(v__33230, v__43191, v__43190[v_w_id_43180], v__43192); \n          }\n          /* end map_seq */\n          v_l_id_43184 = atomic_inc(&(v_work_idx_3201)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_43180 = atomic_inc(v_work_idx_3208); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__43187",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43188",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43189",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__43190",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__43191",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__43192",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__43194",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__43212",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__43207",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}