{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__46848, const global int* restrict v__46849, const global int* restrict v__46850, const global int* restrict v__46851, int v__46852, int v__46853, global int* v__46870, global int* v__46860, local int* v__46865, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46856; \n  int v__46861; \n  int v__33230; \n  /* Private Memory */\n  int v__46858_0;\n  \n  for (int v_wg_id_46840 = get_group_id(0); v_wg_id_46840 < v_MHeight_2; v_wg_id_46840 = (v_wg_id_46840 + get_num_groups(0))) {\n    for (int v_l_id_46841 = get_local_id(0); v_l_id_46841 < v_MWidthC_1; v_l_id_46841 = (v_l_id_46841 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_46842 = 0; v_i_46842 < 128; v_i_46842 = (1 + v_i_46842)) {\n        int v_tmp_46935 = 0; \n        v__46856 = v_tmp_46935; \n        int v_index_46936 = v__46848[(v_l_id_46841 + (128 * v_MWidthC_1 * v_wg_id_46840) + (v_MWidthC_1 * v_i_46842))]; \n        if (v_index_46936 < 0) {\n          v__46858_0 = v__46856; \n        } else {\n          if (v_index_46936 >= v_VLength_3) {\n            v__46858_0 = v__46856; \n          } else {\n            v__46858_0 = v__46850[v_index_46936]; \n          }\n        }\n        v__46860[(127 + (128 * v_MWidthC_1 * v_wg_id_46840) + (-1 * v_i_46842) + (128 * v_l_id_46841))] = bool_and(v__46858_0, v__46849[(v_l_id_46841 + (128 * v_MWidthC_1 * v_wg_id_46840) + (v_MWidthC_1 * v_i_46842))]); \n      }\n      /* end map_seq */\n      int v_tmp_46937 = 0; \n      v__46861 = v_tmp_46937; \n      /* reduce_seq */\n      for (int v_i_46843 = 0; v_i_46843 < 128; v_i_46843 = (1 + v_i_46843)) {\n        v__46861 = bool_or(v__46861, v__46860[(v_i_46843 + (128 * v_MWidthC_1 * v_wg_id_46840) + (128 * v_l_id_46841))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46844 = 0; \n        v__46865[v_l_id_46841] = id(v__46861); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_46845 = get_local_id(0); \n      int v_tmp_46940 = 0; \n      v__33230 = v_tmp_46940; \n      /* reduce_seq */\n      for (int v_i_46846 = 0; v_i_46846 < v_MWidthC_1; v_i_46846 = (1 + v_i_46846)) {\n        v__33230 = bool_or(v__33230, v__46865[(v_i_46846 + (v_MWidthC_1 * v_l_id_46845))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46847 = 0; \n        v__46870[v_wg_id_46840] = doubleAndOr(v__33230, v__46852, v__46851[v_wg_id_46840], v__46853); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__46848",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46849",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46850",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46851",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46852",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46853",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__46860",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__46870",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__46865",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}