{
  "name" : "awrg-alcl-alcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__43001, const global int* restrict v__43002, const global int* restrict v__43003, const global int* restrict v__43004, int v__43005, int v__43006, global int* v__43024, global int* v__43014, global int* v__43008, local int* v__43019, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__43010; \n  int v__43015; \n  int v__33230; \n  /* Private Memory */\n  int v__43012_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3186 = v__43008; \n    local int v_w_id_42993; \n    if (get_local_id(0) == 0) {\n      v_w_id_42993 = atomic_inc(v_work_idx_3186); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42993 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3184; \n        v_work_idx_3184 = 0; \n        int v_l_id_42994 = atomic_inc(&(v_work_idx_3184)); \n        while((v_l_id_42994 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_42995 = 0; v_i_42995 < 32; v_i_42995 = (1 + v_i_42995)) {\n            int v_tmp_43075 = 0; \n            v__43010 = v_tmp_43075; \n            int v_index_43076 = v__43001[(v_l_id_42994 + (32 * v_MWidthC_1 * v_w_id_42993) + (v_MWidthC_1 * v_i_42995))]; \n            if (v_index_43076 < 0) {\n              v__43012_0 = v__43010; \n            } else {\n              if (v_index_43076 >= v_VLength_3) {\n                v__43012_0 = v__43010; \n              } else {\n                v__43012_0 = v__43003[v_index_43076]; \n              }\n            }\n            v__43014[(31 + (32 * v_MWidthC_1 * v_w_id_42993) + (-1 * v_i_42995) + (32 * v_l_id_42994))] = bool_and(v__43012_0, v__43002[(v_l_id_42994 + (32 * v_MWidthC_1 * v_w_id_42993) + (v_MWidthC_1 * v_i_42995))]); \n          }\n          /* end map_seq */\n          int v_tmp_43077 = 0; \n          v__43015 = v_tmp_43077; \n          /* reduce_seq */\n          for (int v_i_42996 = 0; v_i_42996 < 32; v_i_42996 = (1 + v_i_42996)) {\n            v__43015 = bool_or(v__43015, v__43014[(v_i_42996 + (32 * v_MWidthC_1 * v_w_id_42993) + (32 * v_l_id_42994))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_42997 = 0; \n            v__43019[v_l_id_42994] = id(v__43015); \n          }\n          /* end map_seq */\n          v_l_id_42994 = atomic_inc(&(v_work_idx_3184)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3178; \n        v_work_idx_3178 = 0; \n        int v_l_id_42998 = atomic_inc(&(v_work_idx_3178)); \n        while((v_l_id_42998 < 1)){\n          int v_tmp_43080 = 0; \n          v__33230 = v_tmp_43080; \n          /* reduce_seq */\n          for (int v_i_42999 = 0; v_i_42999 < v_MWidthC_1; v_i_42999 = (1 + v_i_42999)) {\n            v__33230 = bool_or(v__33230, v__43019[(v_i_42999 + (v_MWidthC_1 * v_l_id_42998))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43000 = 0; \n            v__43024[v_w_id_42993] = doubleAndOr(v__33230, v__43005, v__43004[v_w_id_42993], v__43006); \n          }\n          /* end map_seq */\n          v_l_id_42998 = atomic_inc(&(v_work_idx_3178)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42993 = atomic_inc(v_work_idx_3186); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__43001",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43002",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43003",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__43004",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__43005",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__43006",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__43014",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43008",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__43024",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__43019",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}