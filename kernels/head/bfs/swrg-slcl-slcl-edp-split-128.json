{
  "name" : "swrg-slcl-slcl-edp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__47060, const global int* restrict v__47061, const global int* restrict v__47062, const global int* restrict v__47063, int v__47064, int v__47065, global int* v__47084, local int* v__47079, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__47068; \n  int v__47070; \n  int v__33230; \n  /* Private Memory */\n  int v__47072_0;\n  \n  int v__47074_0;\n  \n  int v__47078_0;\n  \n  for (int v_wg_id_47053 = get_group_id(0); v_wg_id_47053 < v_MHeight_2; v_wg_id_47053 = (v_wg_id_47053 + get_num_groups(0))) {\n    for (int v_l_id_47054 = get_local_id(0); v_l_id_47054 < v_MWidthC_1; v_l_id_47054 = (v_l_id_47054 + get_local_size(0))) {\n      int v_tmp_47152 = 0; \n      v__47068 = v_tmp_47152; \n      /* reduce_while_seq */\n      for (int v_i_47055 = 0; v_i_47055 < 128; v_i_47055 = (1 + v_i_47055)) {\n        v__47078_0 = check(v__47068, v__47060[(v_l_id_47054 + (128 * v_MWidthC_1 * v_wg_id_47053) + (v_MWidthC_1 * v_i_47055))]); \n        if (v__47078_0) {\n        } else {\n          break;\n        }\n        int v_tmp_47153 = 0; \n        v__47070 = v_tmp_47153; \n        int v_index_47154 = v__47060[(v_l_id_47054 + (128 * v_MWidthC_1 * v_wg_id_47053) + (v_MWidthC_1 * v_i_47055))]; \n        if (v_index_47154 < 0) {\n          v__47072_0 = v__47070; \n        } else {\n          if (v_index_47154 >= v_VLength_3) {\n            v__47072_0 = v__47070; \n          } else {\n            v__47072_0 = v__47062[v_index_47154]; \n          }\n        }\n        v__47074_0 = bool_and(v__47072_0, v__47061[(v_l_id_47054 + (128 * v_MWidthC_1 * v_wg_id_47053) + (v_MWidthC_1 * v_i_47055))]); \n        v__47068 = bool_or(v__47074_0, v__47068); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_47056 = 0; \n        v__47079[v_l_id_47054] = id(v__47068); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_47057 = get_local_id(0); \n      int v_tmp_47157 = 0; \n      v__33230 = v_tmp_47157; \n      /* reduce_seq */\n      for (int v_i_47058 = 0; v_i_47058 < v_MWidthC_1; v_i_47058 = (1 + v_i_47058)) {\n        v__33230 = bool_or(v__33230, v__47079[(v_i_47058 + (v_MWidthC_1 * v_l_id_47057))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_47059 = 0; \n        v__47084[v_wg_id_47053] = doubleAndOr(v__33230, v__47064, v__47063[v_wg_id_47053], v__47065); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__47060",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__47061",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__47062",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__47063",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__47064",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__47065",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__47084",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__47079",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}