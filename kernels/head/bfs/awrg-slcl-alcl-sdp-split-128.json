{
  "name" : "awrg-slcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__48841, const global int* restrict v__48842, const global int* restrict v__48843, const global int* restrict v__48844, int v__48845, int v__48846, global int* v__48864, global int* v__48854, global int* v__48848, local int* v__48859, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__48850; \n  int v__48855; \n  int v__33230; \n  /* Private Memory */\n  int v__48852_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3725 = v__48848; \n    local int v_w_id_48833; \n    if (get_local_id(0) == 0) {\n      v_w_id_48833 = atomic_inc(v_work_idx_3725); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_48833 < v_MHeight_2)){\n      for (int v_l_id_48834 = get_local_id(0); v_l_id_48834 < v_MWidthC_1; v_l_id_48834 = (v_l_id_48834 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_48835 = 0; v_i_48835 < 128; v_i_48835 = (1 + v_i_48835)) {\n          int v_tmp_48923 = 0; \n          v__48850 = v_tmp_48923; \n          int v_index_48924 = v__48841[(v_l_id_48834 + (128 * v_MWidthC_1 * v_w_id_48833) + (v_MWidthC_1 * v_i_48835))]; \n          if (v_index_48924 < 0) {\n            v__48852_0 = v__48850; \n          } else {\n            if (v_index_48924 >= v_VLength_3) {\n              v__48852_0 = v__48850; \n            } else {\n              v__48852_0 = v__48843[v_index_48924]; \n            }\n          }\n          v__48854[(127 + (128 * v_MWidthC_1 * v_w_id_48833) + (-1 * v_i_48835) + (128 * v_l_id_48834))] = bool_and(v__48852_0, v__48842[(v_l_id_48834 + (128 * v_MWidthC_1 * v_w_id_48833) + (v_MWidthC_1 * v_i_48835))]); \n        }\n        /* end map_seq */\n        int v_tmp_48925 = 0; \n        v__48855 = v_tmp_48925; \n        /* reduce_seq */\n        for (int v_i_48836 = 0; v_i_48836 < 128; v_i_48836 = (1 + v_i_48836)) {\n          v__48855 = bool_or(v__48855, v__48854[(v_i_48836 + (128 * v_MWidthC_1 * v_w_id_48833) + (128 * v_l_id_48834))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_48837 = 0; \n          v__48859[v_l_id_48834] = id(v__48855); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3718; \n        v_work_idx_3718 = 0; \n        int v_l_id_48838 = atomic_inc(&(v_work_idx_3718)); \n        while((v_l_id_48838 < 1)){\n          int v_tmp_48928 = 0; \n          v__33230 = v_tmp_48928; \n          /* reduce_seq */\n          for (int v_i_48839 = 0; v_i_48839 < v_MWidthC_1; v_i_48839 = (1 + v_i_48839)) {\n            v__33230 = bool_or(v__33230, v__48859[(v_i_48839 + (v_MWidthC_1 * v_l_id_48838))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_48840 = 0; \n            v__48864[v_w_id_48833] = doubleAndOr(v__33230, v__48845, v__48844[v_w_id_48833], v__48846); \n          }\n          /* end map_seq */\n          v_l_id_48838 = atomic_inc(&(v_work_idx_3718)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_48833 = atomic_inc(v_work_idx_3725); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__48841",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__48842",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__48843",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__48844",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__48845",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__48846",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__48854",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__48848",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__48864",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__48859",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}