{
  "name" : "awrg-alcl-alcl-fdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__39762, const global int* restrict v__39763, const global int* restrict v__39764, const global int* restrict v__39765, int v__39766, int v__39767, global int* v__39785, global int* v__39769, local int* v__39780, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__39771; \n  int v__39773; \n  int v__33230; \n  /* Private Memory */\n  int v__39775_0;\n  \n  int v__39777_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_2885 = v__39769; \n    local int v_w_id_39755; \n    if (get_local_id(0) == 0) {\n      v_w_id_39755 = atomic_inc(v_work_idx_2885); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_39755 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_2883; \n        v_work_idx_2883 = 0; \n        int v_l_id_39756 = atomic_inc(&(v_work_idx_2883)); \n        while((v_l_id_39756 < v_MWidthC_1)){\n          int v_tmp_39836 = 0; \n          v__39771 = v_tmp_39836; \n          /* reduce_seq */\n          for (int v_i_39757 = 0; v_i_39757 < 16; v_i_39757 = (1 + v_i_39757)) {\n            int v_tmp_39837 = 0; \n            v__39773 = v_tmp_39837; \n            int v_index_39838 = v__39762[(v_l_id_39756 + (16 * v_MWidthC_1 * v_w_id_39755) + (v_MWidthC_1 * v_i_39757))]; \n            if (v_index_39838 < 0) {\n              v__39775_0 = v__39773; \n            } else {\n              if (v_index_39838 >= v_VLength_3) {\n                v__39775_0 = v__39773; \n              } else {\n                v__39775_0 = v__39764[v_index_39838]; \n              }\n            }\n            v__39777_0 = bool_and(v__39775_0, v__39763[(v_l_id_39756 + (16 * v_MWidthC_1 * v_w_id_39755) + (v_MWidthC_1 * v_i_39757))]); \n            v__39771 = bool_or(v__39777_0, v__39771); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_39758 = 0; \n            v__39780[v_l_id_39756] = id(v__39771); \n          }\n          /* end map_seq */\n          v_l_id_39756 = atomic_inc(&(v_work_idx_2883)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_2878; \n        v_work_idx_2878 = 0; \n        int v_l_id_39759 = atomic_inc(&(v_work_idx_2878)); \n        while((v_l_id_39759 < 1)){\n          int v_tmp_39841 = 0; \n          v__33230 = v_tmp_39841; \n          /* reduce_seq */\n          for (int v_i_39760 = 0; v_i_39760 < v_MWidthC_1; v_i_39760 = (1 + v_i_39760)) {\n            v__33230 = bool_or(v__33230, v__39780[(v_i_39760 + (v_MWidthC_1 * v_l_id_39759))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_39761 = 0; \n            v__39785[v_w_id_39755] = doubleAndOr(v__33230, v__39766, v__39765[v_w_id_39755], v__39767); \n          }\n          /* end map_seq */\n          v_l_id_39759 = atomic_inc(&(v_work_idx_2878)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_39755 = atomic_inc(v_work_idx_2885); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__39762",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__39763",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__39764",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__39765",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__39766",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__39767",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__39769",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__39785",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__39780",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}