{
  "name" : "swrg-slcl-fdp-chunk-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__43358, const global int* restrict v__43359, const global int* restrict v__43360, const global int* restrict v__43361, int v__43362, int v__43363, global int* v__43376, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__43366; \n  int v__43368; \n  /* Private Memory */\n  int v__43370_0;\n  \n  int v__43372_0;\n  \n  for (int v_wg_id_43354 = get_group_id(0); v_wg_id_43354 < ((v_MHeight_2)/(64)); v_wg_id_43354 = (v_wg_id_43354 + get_num_groups(0))) {\n    for (int v_l_id_43355 = get_local_id(0); v_l_id_43355 < 64; v_l_id_43355 = (v_l_id_43355 + get_local_size(0))) {\n      int v_tmp_43418 = 0; \n      v__43366 = v_tmp_43418; \n      /* reduce_seq */\n      for (int v_i_43356 = 0; v_i_43356 < v_MWidthC_1; v_i_43356 = (1 + v_i_43356)) {\n        int v_tmp_43419 = 0; \n        v__43368 = v_tmp_43419; \n        int v_index_43420 = v__43358[(v_i_43356 + (64 * v_MWidthC_1 * v_wg_id_43354) + (v_MWidthC_1 * v_l_id_43355))]; \n        if (v_index_43420 < 0) {\n          v__43370_0 = v__43368; \n        } else {\n          if (v_index_43420 >= v_VLength_3) {\n            v__43370_0 = v__43368; \n          } else {\n            v__43370_0 = v__43360[v_index_43420]; \n          }\n        }\n        v__43372_0 = bool_and(v__43370_0, v__43359[(v_i_43356 + (64 * v_MWidthC_1 * v_wg_id_43354) + (v_MWidthC_1 * v_l_id_43355))]); \n        v__43366 = bool_or(v__43372_0, v__43366); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_43357 = 0; \n        v__43376[(v_l_id_43355 + (64 * v_wg_id_43354))] = doubleAndOr(v__43366, v__43362, v__43361[(v_l_id_43355 + (64 * v_wg_id_43354))], v__43363); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "64",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__43358",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43359",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43360",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__43361",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__43362",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__43363",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__43376",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}