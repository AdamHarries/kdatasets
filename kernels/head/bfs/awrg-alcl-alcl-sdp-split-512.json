{
  "name" : "awrg-alcl-alcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56329, const global int* restrict v__56330, const global int* restrict v__56331, const global int* restrict v__56332, int v__56333, int v__56334, global int* v__56352, global int* v__56342, global int* v__56336, local int* v__56347, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__56338; \n  int v__56343; \n  int v__33230; \n  /* Private Memory */\n  int v__56340_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4434 = v__56336; \n    local int v_w_id_56321; \n    if (get_local_id(0) == 0) {\n      v_w_id_56321 = atomic_inc(v_work_idx_4434); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_56321 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4432; \n        v_work_idx_4432 = 0; \n        int v_l_id_56322 = atomic_inc(&(v_work_idx_4432)); \n        while((v_l_id_56322 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_56323 = 0; v_i_56323 < 512; v_i_56323 = (1 + v_i_56323)) {\n            int v_tmp_56403 = 0; \n            v__56338 = v_tmp_56403; \n            int v_index_56404 = v__56329[(v_l_id_56322 + (512 * v_MWidthC_1 * v_w_id_56321) + (v_MWidthC_1 * v_i_56323))]; \n            if (v_index_56404 < 0) {\n              v__56340_0 = v__56338; \n            } else {\n              if (v_index_56404 >= v_VLength_3) {\n                v__56340_0 = v__56338; \n              } else {\n                v__56340_0 = v__56331[v_index_56404]; \n              }\n            }\n            v__56342[(511 + (512 * v_MWidthC_1 * v_w_id_56321) + (-1 * v_i_56323) + (512 * v_l_id_56322))] = bool_and(v__56340_0, v__56330[(v_l_id_56322 + (512 * v_MWidthC_1 * v_w_id_56321) + (v_MWidthC_1 * v_i_56323))]); \n          }\n          /* end map_seq */\n          int v_tmp_56405 = 0; \n          v__56343 = v_tmp_56405; \n          /* reduce_seq */\n          for (int v_i_56324 = 0; v_i_56324 < 512; v_i_56324 = (1 + v_i_56324)) {\n            v__56343 = bool_or(v__56343, v__56342[(v_i_56324 + (512 * v_MWidthC_1 * v_w_id_56321) + (512 * v_l_id_56322))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56325 = 0; \n            v__56347[v_l_id_56322] = id(v__56343); \n          }\n          /* end map_seq */\n          v_l_id_56322 = atomic_inc(&(v_work_idx_4432)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4426; \n        v_work_idx_4426 = 0; \n        int v_l_id_56326 = atomic_inc(&(v_work_idx_4426)); \n        while((v_l_id_56326 < 1)){\n          int v_tmp_56408 = 0; \n          v__33230 = v_tmp_56408; \n          /* reduce_seq */\n          for (int v_i_56327 = 0; v_i_56327 < v_MWidthC_1; v_i_56327 = (1 + v_i_56327)) {\n            v__33230 = bool_or(v__33230, v__56347[(v_i_56327 + (v_MWidthC_1 * v_l_id_56326))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56328 = 0; \n            v__56352[v_w_id_56321] = doubleAndOr(v__33230, v__56333, v__56332[v_w_id_56321], v__56334); \n          }\n          /* end map_seq */\n          v_l_id_56326 = atomic_inc(&(v_work_idx_4426)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_56321 = atomic_inc(v_work_idx_4434); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__56329",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56330",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56331",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56332",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56333",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56334",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56342",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56336",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__56352",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__56347",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}