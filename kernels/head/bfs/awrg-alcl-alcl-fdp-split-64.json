{
  "name" : "awrg-alcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__46426, const global int* restrict v__46427, const global int* restrict v__46428, const global int* restrict v__46429, int v__46430, int v__46431, global int* v__46449, global int* v__46433, local int* v__46444, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46435; \n  int v__46437; \n  int v__33230; \n  /* Private Memory */\n  int v__46439_0;\n  \n  int v__46441_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3509 = v__46433; \n    local int v_w_id_46419; \n    if (get_local_id(0) == 0) {\n      v_w_id_46419 = atomic_inc(v_work_idx_3509); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_46419 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3507; \n        v_work_idx_3507 = 0; \n        int v_l_id_46420 = atomic_inc(&(v_work_idx_3507)); \n        while((v_l_id_46420 < v_MWidthC_1)){\n          int v_tmp_46500 = 0; \n          v__46435 = v_tmp_46500; \n          /* reduce_seq */\n          for (int v_i_46421 = 0; v_i_46421 < 64; v_i_46421 = (1 + v_i_46421)) {\n            int v_tmp_46501 = 0; \n            v__46437 = v_tmp_46501; \n            int v_index_46502 = v__46426[(v_l_id_46420 + (64 * v_MWidthC_1 * v_w_id_46419) + (v_MWidthC_1 * v_i_46421))]; \n            if (v_index_46502 < 0) {\n              v__46439_0 = v__46437; \n            } else {\n              if (v_index_46502 >= v_VLength_3) {\n                v__46439_0 = v__46437; \n              } else {\n                v__46439_0 = v__46428[v_index_46502]; \n              }\n            }\n            v__46441_0 = bool_and(v__46439_0, v__46427[(v_l_id_46420 + (64 * v_MWidthC_1 * v_w_id_46419) + (v_MWidthC_1 * v_i_46421))]); \n            v__46435 = bool_or(v__46441_0, v__46435); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_46422 = 0; \n            v__46444[v_l_id_46420] = id(v__46435); \n          }\n          /* end map_seq */\n          v_l_id_46420 = atomic_inc(&(v_work_idx_3507)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3502; \n        v_work_idx_3502 = 0; \n        int v_l_id_46423 = atomic_inc(&(v_work_idx_3502)); \n        while((v_l_id_46423 < 1)){\n          int v_tmp_46505 = 0; \n          v__33230 = v_tmp_46505; \n          /* reduce_seq */\n          for (int v_i_46424 = 0; v_i_46424 < v_MWidthC_1; v_i_46424 = (1 + v_i_46424)) {\n            v__33230 = bool_or(v__33230, v__46444[(v_i_46424 + (v_MWidthC_1 * v_l_id_46423))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_46425 = 0; \n            v__46449[v_w_id_46419] = doubleAndOr(v__33230, v__46430, v__46429[v_w_id_46419], v__46431); \n          }\n          /* end map_seq */\n          v_l_id_46423 = atomic_inc(&(v_work_idx_3502)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_46419 = atomic_inc(v_work_idx_3509); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__46426",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46427",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46428",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46429",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46430",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46431",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__46433",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__46449",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__46444",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}