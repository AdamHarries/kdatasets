{
  "name" : "swrg-alcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint int_min(int a, int b){\n  \n{\n int result = min(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint int_max(int a, int b){\n  \n{\n int result = max(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint id(int x){\n  { return x; }\n}\nint doubleMinMax(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n //int min1 = (dpRes < alpha) ? dpRes : alpha;\n //int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n int min1 = min(dpRes, alpha);\n int min2 = min(rowIdxPair2, beta);\n int result = max(min1, min2);\n\n //printf(\"Input: dpres: %d, alpha: %d, yvecelem: %d, beta: %d, min1: %d, min2: %d, result: %d\\n\", dpRes, alpha, rowIdxPair2, beta, min1, min2, result);\n\n return result;\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__154802, const global int* restrict v__154803, const global int* restrict v__154804, const global int* restrict v__154805, int v__154806, int v__154807, global int* v__154824, global int* v__154814, local int* v__154819, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__154810; \n  int v__154815; \n  int v__136518; \n  /* Private Memory */\n  int v__154812_0;\n  \n  for (int v_wg_id_154794 = get_group_id(0); v_wg_id_154794 < v_MHeight_2; v_wg_id_154794 = (v_wg_id_154794 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_12664; \n      v_work_idx_12664 = 0; \n      int v_l_id_154795 = atomic_inc(&(v_work_idx_12664)); \n      while((v_l_id_154795 < v_MWidthC_1)){\n        /* map_seq */\n        for (int v_i_154796 = 0; v_i_154796 < 128; v_i_154796 = (1 + v_i_154796)) {\n          int v_tmp_154877 = -2147483648; \n          v__154810 = v_tmp_154877; \n          int v_index_154878 = v__154802[(v_l_id_154795 + (128 * v_MWidthC_1 * v_wg_id_154794) + (v_MWidthC_1 * v_i_154796))]; \n          if (v_index_154878 < 0) {\n            v__154812_0 = v__154810; \n          } else {\n            if (v_index_154878 >= v_VLength_3) {\n              v__154812_0 = v__154810; \n            } else {\n              v__154812_0 = v__154804[v_index_154878]; \n            }\n          }\n          v__154814[(127 + (128 * v_MWidthC_1 * v_wg_id_154794) + (-1 * v_i_154796) + (128 * v_l_id_154795))] = int_min(v__154812_0, v__154803[(v_l_id_154795 + (128 * v_MWidthC_1 * v_wg_id_154794) + (v_MWidthC_1 * v_i_154796))]); \n        }\n        /* end map_seq */\n        int v_tmp_154879 = -2147483648; \n        v__154815 = v_tmp_154879; \n        /* reduce_seq */\n        for (int v_i_154797 = 0; v_i_154797 < 128; v_i_154797 = (1 + v_i_154797)) {\n          v__154815 = int_max(v__154815, v__154814[(v_i_154797 + (128 * v_MWidthC_1 * v_wg_id_154794) + (128 * v_l_id_154795))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_154798 = 0; \n          v__154819[v_l_id_154795] = id(v__154815); \n        }\n        /* end map_seq */\n        v_l_id_154795 = atomic_inc(&(v_work_idx_12664)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_12658; \n      v_work_idx_12658 = 0; \n      int v_l_id_154799 = atomic_inc(&(v_work_idx_12658)); \n      while((v_l_id_154799 < 1)){\n        int v_tmp_154882 = -2147483648; \n        v__136518 = v_tmp_154882; \n        /* reduce_seq */\n        for (int v_i_154800 = 0; v_i_154800 < v_MWidthC_1; v_i_154800 = (1 + v_i_154800)) {\n          v__136518 = int_max(v__136518, v__154819[(v_i_154800 + (v_MWidthC_1 * v_l_id_154799))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_154801 = 0; \n          v__154824[v_wg_id_154794] = doubleMinMax(v__136518, v__154806, v__154805[v_wg_id_154794], v__154807); \n        }\n        /* end map_seq */\n        v_l_id_154799 = atomic_inc(&(v_work_idx_12658)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__154802",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__154803",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__154804",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__154805",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__154806",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__154807",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__154814",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__154824",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__154819",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}