{
  "name" : "swrg-alcl-sdp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint int_min(int a, int b){\n  \n{\n int result = min(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint int_max(int a, int b){\n  \n{\n int result = max(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint doubleMinMax(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n //int min1 = (dpRes < alpha) ? dpRes : alpha;\n //int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n int min1 = min(dpRes, alpha);\n int min2 = min(rowIdxPair2, beta);\n int result = max(min1, min2);\n\n //printf(\"Input: dpres: %d, alpha: %d, yvecelem: %d, beta: %d, min1: %d, min2: %d, result: %d\\n\", dpRes, alpha, rowIdxPair2, beta, min1, min2, result);\n\n return result;\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__158294, const global int* restrict v__158295, const global int* restrict v__158296, const global int* restrict v__158297, int v__158298, int v__158299, global int* v__158312, global int* v__158306, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__158302; \n  int v__158307; \n  /* Private Memory */\n  int v__158304_0;\n  \n  for (int v_wg_id_158289 = get_group_id(0); v_wg_id_158289 < ((v_MHeight_2)/(256)); v_wg_id_158289 = (v_wg_id_158289 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_12979; \n      v_work_idx_12979 = 0; \n      int v_l_id_158290 = atomic_inc(&(v_work_idx_12979)); \n      while((v_l_id_158290 < 256)){\n        /* map_seq */\n        for (int v_i_158291 = 0; v_i_158291 < v_MWidthC_1; v_i_158291 = (1 + v_i_158291)) {\n          int v_tmp_158352 = -2147483648; \n          v__158302 = v_tmp_158352; \n          int v_index_158353 = v__158294[(v_i_158291 + (256 * v_MWidthC_1 * v_wg_id_158289) + (v_MWidthC_1 * v_l_id_158290))]; \n          if (v_index_158353 < 0) {\n            v__158304_0 = v__158302; \n          } else {\n            if (v_index_158353 >= v_VLength_3) {\n              v__158304_0 = v__158302; \n            } else {\n              v__158304_0 = v__158296[v_index_158353]; \n            }\n          }\n          v__158306[(-1 + v_MWidthC_1 + (256 * v_MWidthC_1 * v_wg_id_158289) + (-1 * v_i_158291) + (v_MWidthC_1 * v_l_id_158290))] = int_min(v__158304_0, v__158295[(v_i_158291 + (256 * v_MWidthC_1 * v_wg_id_158289) + (v_MWidthC_1 * v_l_id_158290))]); \n        }\n        /* end map_seq */\n        int v_tmp_158354 = -2147483648; \n        v__158307 = v_tmp_158354; \n        /* reduce_seq */\n        for (int v_i_158292 = 0; v_i_158292 < v_MWidthC_1; v_i_158292 = (1 + v_i_158292)) {\n          v__158307 = int_max(v__158307, v__158306[(v_i_158292 + (256 * v_MWidthC_1 * v_wg_id_158289) + (v_MWidthC_1 * v_l_id_158290))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_158293 = 0; \n          v__158312[(v_l_id_158290 + (256 * v_wg_id_158289))] = doubleMinMax(v__158307, v__158298, v__158297[(v_l_id_158290 + (256 * v_wg_id_158289))], v__158299); \n        }\n        /* end map_seq */\n        v_l_id_158290 = atomic_inc(&(v_work_idx_12979)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "alcl",
    "chunkSize" : "256",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__158294",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__158295",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__158296",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__158297",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__158298",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__158299",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__158306",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__158312",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}