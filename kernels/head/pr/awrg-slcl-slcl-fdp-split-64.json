{
  "name" : "awrg-slcl-slcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__92985, const global float* restrict v__92986, const global float* restrict v__92987, const global float* restrict v__92988, float v__92989, float v__92990, global float* v__93008, global int* v__92992, local float* v__93003, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__92994; \n  float v__92996; \n  float v__80917; \n  /* Private Memory */\n  float v__92998_0;\n  \n  float v__93000_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_7847 = v__92992; \n    local int v_w_id_92978; \n    if (get_local_id(0) == 0) {\n      v_w_id_92978 = atomic_inc(v_work_idx_7847); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_92978 < v_MHeight_2)){\n      for (int v_l_id_92979 = get_local_id(0); v_l_id_92979 < v_MWidthC_1; v_l_id_92979 = (v_l_id_92979 + get_local_size(0))) {\n        float v_tmp_93071 = 0.0f; \n        v__92994 = v_tmp_93071; \n        /* reduce_seq */\n        for (int v_i_92980 = 0; v_i_92980 < 64; v_i_92980 = (1 + v_i_92980)) {\n          float v_tmp_93072 = 0.0f; \n          v__92996 = v_tmp_93072; \n          int v_index_93073 = v__92985[(v_l_id_92979 + (64 * v_MWidthC_1 * v_w_id_92978) + (v_MWidthC_1 * v_i_92980))]; \n          if (v_index_93073 < 0) {\n            v__92998_0 = v__92996; \n          } else {\n            if (v_index_93073 >= v_VLength_3) {\n              v__92998_0 = v__92996; \n            } else {\n              v__92998_0 = v__92987[v_index_93073]; \n            }\n          }\n          v__93000_0 = mult(v__92998_0, v__92986[(v_l_id_92979 + (64 * v_MWidthC_1 * v_w_id_92978) + (v_MWidthC_1 * v_i_92980))]); \n          v__92994 = add(v__93000_0, v__92994); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92981 = 0; \n          v__93003[v_l_id_92979] = id(v__92994); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* iteration count is exactly 1 or less, no loop emitted */\n      if (get_local_id(0) < 1) {\n        int v_l_id_92982 = get_local_id(0); \n        float v_tmp_93076 = 0.0f; \n        v__80917 = v_tmp_93076; \n        /* reduce_seq */\n        for (int v_i_92983 = 0; v_i_92983 < v_MWidthC_1; v_i_92983 = (1 + v_i_92983)) {\n          v__80917 = add(v__80917, v__93003[(v_i_92983 + (v_MWidthC_1 * v_l_id_92982))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92984 = 0; \n          v__93008[v_w_id_92978] = doubleMultiplyAdd(v__80917, v__92989, v__92988[v_w_id_92978], v__92990); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_92978 = atomic_inc(v_work_idx_7847); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__92985",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92986",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92987",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__92988",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__92989",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__92990",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__92992",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__93008",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__93003",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}