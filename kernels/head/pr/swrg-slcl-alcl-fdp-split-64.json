{
  "name" : "swrg-slcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__91634, const global float* restrict v__91635, const global float* restrict v__91636, const global float* restrict v__91637, float v__91638, float v__91639, global float* v__91656, local float* v__91651, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__91642; \n  float v__91644; \n  float v__80917; \n  /* Private Memory */\n  float v__91646_0;\n  \n  float v__91648_0;\n  \n  for (int v_wg_id_91627 = get_group_id(0); v_wg_id_91627 < v_MHeight_2; v_wg_id_91627 = (v_wg_id_91627 + get_num_groups(0))) {\n    for (int v_l_id_91628 = get_local_id(0); v_l_id_91628 < v_MWidthC_1; v_l_id_91628 = (v_l_id_91628 + get_local_size(0))) {\n      float v_tmp_91717 = 0.0f; \n      v__91642 = v_tmp_91717; \n      /* reduce_seq */\n      for (int v_i_91629 = 0; v_i_91629 < 64; v_i_91629 = (1 + v_i_91629)) {\n        float v_tmp_91718 = 0.0f; \n        v__91644 = v_tmp_91718; \n        int v_index_91719 = v__91634[(v_l_id_91628 + (64 * v_MWidthC_1 * v_wg_id_91627) + (v_MWidthC_1 * v_i_91629))]; \n        if (v_index_91719 < 0) {\n          v__91646_0 = v__91644; \n        } else {\n          if (v_index_91719 >= v_VLength_3) {\n            v__91646_0 = v__91644; \n          } else {\n            v__91646_0 = v__91636[v_index_91719]; \n          }\n        }\n        v__91648_0 = mult(v__91646_0, v__91635[(v_l_id_91628 + (64 * v_MWidthC_1 * v_wg_id_91627) + (v_MWidthC_1 * v_i_91629))]); \n        v__91642 = add(v__91648_0, v__91642); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91630 = 0; \n        v__91651[v_l_id_91628] = id(v__91642); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7717; \n      v_work_idx_7717 = 0; \n      int v_l_id_91631 = atomic_inc(&(v_work_idx_7717)); \n      while((v_l_id_91631 < 1)){\n        float v_tmp_91722 = 0.0f; \n        v__80917 = v_tmp_91722; \n        /* reduce_seq */\n        for (int v_i_91632 = 0; v_i_91632 < v_MWidthC_1; v_i_91632 = (1 + v_i_91632)) {\n          v__80917 = add(v__80917, v__91651[(v_i_91632 + (v_MWidthC_1 * v_l_id_91631))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_91633 = 0; \n          v__91656[v_wg_id_91627] = doubleMultiplyAdd(v__80917, v__91638, v__91637[v_wg_id_91627], v__91639); \n        }\n        /* end map_seq */\n        v_l_id_91631 = atomic_inc(&(v_work_idx_7717)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__91634",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91635",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91636",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__91637",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__91638",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__91639",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__91656",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__91651",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}