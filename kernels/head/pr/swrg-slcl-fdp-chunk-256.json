{
  "name" : "swrg-slcl-fdp-chunk-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__97714, const global float* restrict v__97715, const global float* restrict v__97716, const global float* restrict v__97717, float v__97718, float v__97719, global float* v__97732, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__97722; \n  float v__97724; \n  /* Private Memory */\n  float v__97726_0;\n  \n  float v__97728_0;\n  \n  for (int v_wg_id_97710 = get_group_id(0); v_wg_id_97710 < ((v_MHeight_2)/(256)); v_wg_id_97710 = (v_wg_id_97710 + get_num_groups(0))) {\n    for (int v_l_id_97711 = get_local_id(0); v_l_id_97711 < 256; v_l_id_97711 = (v_l_id_97711 + get_local_size(0))) {\n      float v_tmp_97774 = 0.0f; \n      v__97722 = v_tmp_97774; \n      /* reduce_seq */\n      for (int v_i_97712 = 0; v_i_97712 < v_MWidthC_1; v_i_97712 = (1 + v_i_97712)) {\n        float v_tmp_97775 = 0.0f; \n        v__97724 = v_tmp_97775; \n        int v_index_97776 = v__97714[(v_i_97712 + (256 * v_MWidthC_1 * v_wg_id_97710) + (v_MWidthC_1 * v_l_id_97711))]; \n        if (v_index_97776 < 0) {\n          v__97726_0 = v__97724; \n        } else {\n          if (v_index_97776 >= v_VLength_3) {\n            v__97726_0 = v__97724; \n          } else {\n            v__97726_0 = v__97716[v_index_97776]; \n          }\n        }\n        v__97728_0 = mult(v__97726_0, v__97715[(v_i_97712 + (256 * v_MWidthC_1 * v_wg_id_97710) + (v_MWidthC_1 * v_l_id_97711))]); \n        v__97722 = add(v__97728_0, v__97722); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97713 = 0; \n        v__97732[(v_l_id_97711 + (256 * v_wg_id_97710))] = doubleMultiplyAdd(v__97722, v__97718, v__97717[(v_l_id_97711 + (256 * v_wg_id_97710))], v__97719); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__97714",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97715",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97716",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__97717",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__97718",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__97719",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__97732",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}