{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__97872, const global float* restrict v__97873, const global float* restrict v__97874, const global float* restrict v__97875, float v__97876, float v__97877, global float* v__97894, global float* v__97884, local float* v__97889, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__97880; \n  float v__97885; \n  float v__80917; \n  /* Private Memory */\n  float v__97882_0;\n  \n  for (int v_wg_id_97864 = get_group_id(0); v_wg_id_97864 < v_MHeight_2; v_wg_id_97864 = (v_wg_id_97864 + get_num_groups(0))) {\n    for (int v_l_id_97865 = get_local_id(0); v_l_id_97865 < v_MWidthC_1; v_l_id_97865 = (v_l_id_97865 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_97866 = 0; v_i_97866 < 256; v_i_97866 = (1 + v_i_97866)) {\n        float v_tmp_97959 = 0.0f; \n        v__97880 = v_tmp_97959; \n        int v_index_97960 = v__97872[(v_l_id_97865 + (256 * v_MWidthC_1 * v_wg_id_97864) + (v_MWidthC_1 * v_i_97866))]; \n        if (v_index_97960 < 0) {\n          v__97882_0 = v__97880; \n        } else {\n          if (v_index_97960 >= v_VLength_3) {\n            v__97882_0 = v__97880; \n          } else {\n            v__97882_0 = v__97874[v_index_97960]; \n          }\n        }\n        v__97884[(255 + (256 * v_MWidthC_1 * v_wg_id_97864) + (-1 * v_i_97866) + (256 * v_l_id_97865))] = mult(v__97882_0, v__97873[(v_l_id_97865 + (256 * v_MWidthC_1 * v_wg_id_97864) + (v_MWidthC_1 * v_i_97866))]); \n      }\n      /* end map_seq */\n      float v_tmp_97961 = 0.0f; \n      v__97885 = v_tmp_97961; \n      /* reduce_seq */\n      for (int v_i_97867 = 0; v_i_97867 < 256; v_i_97867 = (1 + v_i_97867)) {\n        v__97885 = add(v__97885, v__97884[(v_i_97867 + (256 * v_MWidthC_1 * v_wg_id_97864) + (256 * v_l_id_97865))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97868 = 0; \n        v__97889[v_l_id_97865] = id(v__97885); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_97869 = get_local_id(0); \n      float v_tmp_97964 = 0.0f; \n      v__80917 = v_tmp_97964; \n      /* reduce_seq */\n      for (int v_i_97870 = 0; v_i_97870 < v_MWidthC_1; v_i_97870 = (1 + v_i_97870)) {\n        v__80917 = add(v__80917, v__97889[(v_i_97870 + (v_MWidthC_1 * v_l_id_97869))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97871 = 0; \n        v__97894[v_wg_id_97864] = doubleMultiplyAdd(v__80917, v__97876, v__97875[v_wg_id_97864], v__97877); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__97872",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97873",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97874",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__97875",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__97876",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__97877",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__97884",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__97894",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__97889",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}