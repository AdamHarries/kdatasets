{
  "name" : "awrg-slcl-fdp-chunk-rsa-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nfloat id(float x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__116522, const global float* restrict v__116523, const global float* restrict v__116524, const global float* restrict v__116525, float v__116526, float v__116527, global float* v__116542, global float* v__116541, global int* v__116529, int v_MHeight_2, int v_MWidthC_1){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__116530; \n  float v__116533; \n  /* Private Memory */\n  float v__116535_0;\n  \n  float v__116537_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_9217 = v__116529; \n    local int v_w_id_116517; \n    if (get_local_id(0) == 0) {\n      v_w_id_116517 = atomic_inc(v_work_idx_9217); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_116517 < ((v_MHeight_2)/(32)))){\n      for (int v_l_id_116518 = get_local_id(0); v_l_id_116518 < 32; v_l_id_116518 = (v_l_id_116518 + get_local_size(0))) {\n        float v_tmp_116578 = 0.0f; \n        v__116530 = v_tmp_116578; \n        /* reduce_seq */\n        int v_stop_116579 = min(v__116522[(1 + (v__116522[(v_l_id_116518 + (32 * v_w_id_116517))] / 4))], ((global int*)(v__116523 + (((global int*)(v__116523))[(v_l_id_116518 + (32 * v_w_id_116517))] / 4)))[1]); \n        for (int v_i_116519 = 0; v_i_116519 < v_stop_116579; v_i_116519 = (1 + v_i_116519)) {\n          float v_tmp_116587 = 0.0f; \n          v__116533 = v_tmp_116587; \n          int v_index_116589 = v__116522[(2 + v_i_116519 + (v__116522[(v_l_id_116518 + (32 * v_w_id_116517))] / 4))]; \n          if (v_index_116589 < 0) {\n            v__116535_0 = v__116533; \n          } else {\n            if (v_index_116589 >= v_MWidthC_1) {\n              v__116535_0 = v__116533; \n            } else {\n              v__116535_0 = v__116524[v_index_116589]; \n            }\n          }\n          v__116537_0 = mult(v__116523[(2 + v_i_116519 + (((global int*)(v__116523))[(v_l_id_116518 + (32 * v_w_id_116517))] / 4))], v__116535_0); \n          v__116530 = add(v__116530, v__116537_0); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_116520 = 0; \n          v__116541[(v_l_id_116518 + (32 * v_w_id_116517))] = doubleMultiplyAdd(v__116530, v__116526, v__116525[(v_l_id_116518 + (32 * v_w_id_116517))], v__116527); \n        }\n        /* end map_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_116521 = 0; \n          v__116542[(v_l_id_116518 + (32 * v_w_id_116517))] = id(v__116541[(v_l_id_116518 + (32 * v_w_id_116517))]); \n        }\n        /* end map_seq */\n      }\n      if (get_local_id(0) == 0) {\n        v_w_id_116517 = atomic_inc(v_work_idx_9217); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "chunkSize" : "32",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "arrayType" : "ragged",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__116522",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__116523",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__116524",
    "addressSpace" : "global",
    "size" : "(4*v_MWidthC_1)"
  }, {
    "variable" : "v__116525",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__116526",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__116527",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__116541",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__116529",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__116542",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC" ],
  "outputSize" : "(4*v_MHeight_2)"
}