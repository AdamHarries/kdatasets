{
  "name" : "swrg-alcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__92456, const global float* restrict v__92457, const global float* restrict v__92458, const global float* restrict v__92459, float v__92460, float v__92461, global float* v__92478, local float* v__92473, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__92464; \n  float v__92466; \n  float v__80917; \n  /* Private Memory */\n  float v__92468_0;\n  \n  float v__92470_0;\n  \n  for (int v_wg_id_92449 = get_group_id(0); v_wg_id_92449 < v_MHeight_2; v_wg_id_92449 = (v_wg_id_92449 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_7798; \n      v_work_idx_7798 = 0; \n      int v_l_id_92450 = atomic_inc(&(v_work_idx_7798)); \n      while((v_l_id_92450 < v_MWidthC_1)){\n        float v_tmp_92531 = 0.0f; \n        v__92464 = v_tmp_92531; \n        /* reduce_seq */\n        for (int v_i_92451 = 0; v_i_92451 < 64; v_i_92451 = (1 + v_i_92451)) {\n          float v_tmp_92532 = 0.0f; \n          v__92466 = v_tmp_92532; \n          int v_index_92533 = v__92456[(v_l_id_92450 + (64 * v_MWidthC_1 * v_wg_id_92449) + (v_MWidthC_1 * v_i_92451))]; \n          if (v_index_92533 < 0) {\n            v__92468_0 = v__92466; \n          } else {\n            if (v_index_92533 >= v_VLength_3) {\n              v__92468_0 = v__92466; \n            } else {\n              v__92468_0 = v__92458[v_index_92533]; \n            }\n          }\n          v__92470_0 = mult(v__92468_0, v__92457[(v_l_id_92450 + (64 * v_MWidthC_1 * v_wg_id_92449) + (v_MWidthC_1 * v_i_92451))]); \n          v__92464 = add(v__92470_0, v__92464); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92452 = 0; \n          v__92473[v_l_id_92450] = id(v__92464); \n        }\n        /* end map_seq */\n        v_l_id_92450 = atomic_inc(&(v_work_idx_7798)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7793; \n      v_work_idx_7793 = 0; \n      int v_l_id_92453 = atomic_inc(&(v_work_idx_7793)); \n      while((v_l_id_92453 < 1)){\n        float v_tmp_92536 = 0.0f; \n        v__80917 = v_tmp_92536; \n        /* reduce_seq */\n        for (int v_i_92454 = 0; v_i_92454 < v_MWidthC_1; v_i_92454 = (1 + v_i_92454)) {\n          v__80917 = add(v__80917, v__92473[(v_i_92454 + (v_MWidthC_1 * v_l_id_92453))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92455 = 0; \n          v__92478[v_wg_id_92449] = doubleMultiplyAdd(v__80917, v__92460, v__92459[v_wg_id_92449], v__92461); \n        }\n        /* end map_seq */\n        v_l_id_92453 = atomic_inc(&(v_work_idx_7793)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__92456",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92457",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92458",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__92459",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__92460",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__92461",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__92478",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__92473",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}