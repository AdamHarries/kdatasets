{
  "name" : "awrg-alcl-sdp-chunk-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__93507, const global float* restrict v__93508, const global float* restrict v__93509, const global float* restrict v__93510, float v__93511, float v__93512, global float* v__93526, global float* v__93520, global int* v__93514, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__93516; \n  float v__93521; \n  /* Private Memory */\n  float v__93518_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_7895 = v__93514; \n    local int v_w_id_93502; \n    if (get_local_id(0) == 0) {\n      v_w_id_93502 = atomic_inc(v_work_idx_7895); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_93502 < ((v_MHeight_2)/(64)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_7893; \n        v_work_idx_7893 = 0; \n        int v_l_id_93503 = atomic_inc(&(v_work_idx_7893)); \n        while((v_l_id_93503 < 64)){\n          /* map_seq */\n          for (int v_i_93504 = 0; v_i_93504 < v_MWidthC_1; v_i_93504 = (1 + v_i_93504)) {\n            float v_tmp_93565 = 0.0f; \n            v__93516 = v_tmp_93565; \n            int v_index_93566 = v__93507[(v_i_93504 + (64 * v_MWidthC_1 * v_w_id_93502) + (v_MWidthC_1 * v_l_id_93503))]; \n            if (v_index_93566 < 0) {\n              v__93518_0 = v__93516; \n            } else {\n              if (v_index_93566 >= v_VLength_3) {\n                v__93518_0 = v__93516; \n              } else {\n                v__93518_0 = v__93509[v_index_93566]; \n              }\n            }\n            v__93520[(-1 + v_MWidthC_1 + (64 * v_MWidthC_1 * v_w_id_93502) + (-1 * v_i_93504) + (v_MWidthC_1 * v_l_id_93503))] = mult(v__93518_0, v__93508[(v_i_93504 + (64 * v_MWidthC_1 * v_w_id_93502) + (v_MWidthC_1 * v_l_id_93503))]); \n          }\n          /* end map_seq */\n          float v_tmp_93567 = 0.0f; \n          v__93521 = v_tmp_93567; \n          /* reduce_seq */\n          for (int v_i_93505 = 0; v_i_93505 < v_MWidthC_1; v_i_93505 = (1 + v_i_93505)) {\n            v__93521 = add(v__93521, v__93520[(v_i_93505 + (64 * v_MWidthC_1 * v_w_id_93502) + (v_MWidthC_1 * v_l_id_93503))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_93506 = 0; \n            v__93526[(v_l_id_93503 + (64 * v_w_id_93502))] = doubleMultiplyAdd(v__93521, v__93511, v__93510[(v_l_id_93503 + (64 * v_w_id_93502))], v__93512); \n          }\n          /* end map_seq */\n          v_l_id_93503 = atomic_inc(&(v_work_idx_7893)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_93502 = atomic_inc(v_work_idx_7895); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "64",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__93507",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__93508",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__93509",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__93510",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__93511",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__93512",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__93520",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__93514",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__93526",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}