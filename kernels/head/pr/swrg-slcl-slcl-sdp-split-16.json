{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__84544, const global float* restrict v__84545, const global float* restrict v__84546, const global float* restrict v__84547, float v__84548, float v__84549, global float* v__84566, global float* v__84556, local float* v__84561, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__84552; \n  float v__84557; \n  float v__80917; \n  /* Private Memory */\n  float v__84554_0;\n  \n  for (int v_wg_id_84536 = get_group_id(0); v_wg_id_84536 < v_MHeight_2; v_wg_id_84536 = (v_wg_id_84536 + get_num_groups(0))) {\n    for (int v_l_id_84537 = get_local_id(0); v_l_id_84537 < v_MWidthC_1; v_l_id_84537 = (v_l_id_84537 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_84538 = 0; v_i_84538 < 16; v_i_84538 = (1 + v_i_84538)) {\n        float v_tmp_84631 = 0.0f; \n        v__84552 = v_tmp_84631; \n        int v_index_84632 = v__84544[(v_l_id_84537 + (16 * v_MWidthC_1 * v_wg_id_84536) + (v_MWidthC_1 * v_i_84538))]; \n        if (v_index_84632 < 0) {\n          v__84554_0 = v__84552; \n        } else {\n          if (v_index_84632 >= v_VLength_3) {\n            v__84554_0 = v__84552; \n          } else {\n            v__84554_0 = v__84546[v_index_84632]; \n          }\n        }\n        v__84556[(15 + (16 * v_MWidthC_1 * v_wg_id_84536) + (-1 * v_i_84538) + (16 * v_l_id_84537))] = mult(v__84554_0, v__84545[(v_l_id_84537 + (16 * v_MWidthC_1 * v_wg_id_84536) + (v_MWidthC_1 * v_i_84538))]); \n      }\n      /* end map_seq */\n      float v_tmp_84633 = 0.0f; \n      v__84557 = v_tmp_84633; \n      /* reduce_seq */\n      for (int v_i_84539 = 0; v_i_84539 < 16; v_i_84539 = (1 + v_i_84539)) {\n        v__84557 = add(v__84557, v__84556[(v_i_84539 + (16 * v_MWidthC_1 * v_wg_id_84536) + (16 * v_l_id_84537))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_84540 = 0; \n        v__84561[v_l_id_84537] = id(v__84557); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_84541 = get_local_id(0); \n      float v_tmp_84636 = 0.0f; \n      v__80917 = v_tmp_84636; \n      /* reduce_seq */\n      for (int v_i_84542 = 0; v_i_84542 < v_MWidthC_1; v_i_84542 = (1 + v_i_84542)) {\n        v__80917 = add(v__80917, v__84561[(v_i_84542 + (v_MWidthC_1 * v_l_id_84541))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_84543 = 0; \n        v__84566[v_wg_id_84536] = doubleMultiplyAdd(v__80917, v__84548, v__84547[v_wg_id_84536], v__84549); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__84544",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__84545",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__84546",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__84547",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__84548",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__84549",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__84556",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__84566",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__84561",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}