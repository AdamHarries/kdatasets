{
  "name" : "swrg-slcl-slcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nkernel void KERNEL(const global int* restrict v__64242, const global float* restrict v__64243, const global float* restrict v__64244, const global float* restrict v__64245, float v__64246, float v__64247, global float* v__64266, local float* v__64261, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__64250; \n  float v__64252; \n  float v__57071; \n  /* Private Memory */\n  float v__64254_0;\n  \n  float v__64256_0;\n  \n  int v__64260_0;\n  \n  for (int v_wg_id_64235 = get_group_id(0); v_wg_id_64235 < v_MHeight_2; v_wg_id_64235 = (v_wg_id_64235 + get_num_groups(0))) {\n    for (int v_l_id_64236 = get_local_id(0); v_l_id_64236 < v_MWidthC_1; v_l_id_64236 = (v_l_id_64236 + get_local_size(0))) {\n      float v_tmp_64334 = 3.4028235E38f; \n      v__64250 = v_tmp_64334; \n      /* reduce_while_seq */\n      for (int v_i_64237 = 0; v_i_64237 < 32; v_i_64237 = (1 + v_i_64237)) {\n        v__64260_0 = check(v__64250, v__64242[(v_l_id_64236 + (32 * v_MWidthC_1 * v_wg_id_64235) + (v_MWidthC_1 * v_i_64237))]); \n        if (v__64260_0) {\n        } else {\n          break;\n        }\n        float v_tmp_64335 = 3.4028235E38f; \n        v__64252 = v_tmp_64335; \n        int v_index_64336 = v__64242[(v_l_id_64236 + (32 * v_MWidthC_1 * v_wg_id_64235) + (v_MWidthC_1 * v_i_64237))]; \n        if (v_index_64336 < 0) {\n          v__64254_0 = v__64252; \n        } else {\n          if (v_index_64336 >= v_VLength_3) {\n            v__64254_0 = v__64252; \n          } else {\n            v__64254_0 = v__64244[v_index_64336]; \n          }\n        }\n        v__64256_0 = absadd(v__64254_0, v__64243[(v_l_id_64236 + (32 * v_MWidthC_1 * v_wg_id_64235) + (v_MWidthC_1 * v_i_64237))]); \n        v__64250 = clmin(v__64256_0, v__64250); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_64238 = 0; \n        v__64261[v_l_id_64236] = id(v__64250); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_64239 = get_local_id(0); \n      float v_tmp_64339 = 3.4028235E38f; \n      v__57071 = v_tmp_64339; \n      /* reduce_seq */\n      for (int v_i_64240 = 0; v_i_64240 < v_MWidthC_1; v_i_64240 = (1 + v_i_64240)) {\n        v__57071 = clmin(v__57071, v__64261[(v_i_64240 + (v_MWidthC_1 * v_l_id_64239))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_64241 = 0; \n        v__64266[v_wg_id_64235] = doubleMultiplyAdd(v__57071, v__64246, v__64245[v_wg_id_64235], v__64247); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__64242",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__64243",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__64244",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__64245",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__64246",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__64247",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__64266",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__64261",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}