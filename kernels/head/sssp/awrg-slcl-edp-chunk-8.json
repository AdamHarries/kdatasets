{
  "name" : "awrg-slcl-edp-chunk-8",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__58953, const global float* restrict v__58954, const global float* restrict v__58955, const global float* restrict v__58956, float v__58957, float v__58958, global float* v__58974, global int* v__58960, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__58961; \n  float v__58964; \n  /* Private Memory */\n  float v__58966_0;\n  \n  float v__58968_0;\n  \n  int v__58972_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4665 = v__58960; \n    local int v_w_id_58949; \n    if (get_local_id(0) == 0) {\n      v_w_id_58949 = atomic_inc(v_work_idx_4665); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_58949 < ((v_MHeight_2)/(8)))){\n      for (int v_l_id_58950 = get_local_id(0); v_l_id_58950 < 8; v_l_id_58950 = (v_l_id_58950 + get_local_size(0))) {\n        float v_tmp_59021 = 3.4028235E38f; \n        v__58961 = v_tmp_59021; \n        /* reduce_while_seq */\n        for (int v_i_58951 = 0; v_i_58951 < v_MWidthC_1; v_i_58951 = (1 + v_i_58951)) {\n          v__58972_0 = check(v__58961, v__58953[(v_i_58951 + (8 * v_MWidthC_1 * v_w_id_58949) + (v_MWidthC_1 * v_l_id_58950))]); \n          if (v__58972_0) {\n          } else {\n            break;\n          }\n          float v_tmp_59022 = 3.4028235E38f; \n          v__58964 = v_tmp_59022; \n          int v_index_59023 = v__58953[(v_i_58951 + (8 * v_MWidthC_1 * v_w_id_58949) + (v_MWidthC_1 * v_l_id_58950))]; \n          if (v_index_59023 < 0) {\n            v__58966_0 = v__58964; \n          } else {\n            if (v_index_59023 >= v_VLength_3) {\n              v__58966_0 = v__58964; \n            } else {\n              v__58966_0 = v__58955[v_index_59023]; \n            }\n          }\n          v__58968_0 = absadd(v__58966_0, v__58954[(v_i_58951 + (8 * v_MWidthC_1 * v_w_id_58949) + (v_MWidthC_1 * v_l_id_58950))]); \n          v__58961 = clmin(v__58968_0, v__58961); \n        }\n        /* end reduce_while_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_58952 = 0; \n          v__58974[(v_l_id_58950 + (8 * v_w_id_58949))] = doubleMultiplyAdd(v__58961, v__58957, v__58956[(v_l_id_58950 + (8 * v_w_id_58949))], v__58958); \n        }\n        /* end map_seq */\n      }\n      if (get_local_id(0) == 0) {\n        v_w_id_58949 = atomic_inc(v_work_idx_4665); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "slcl",
    "chunkSize" : "8",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__58953",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__58954",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__58955",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__58956",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__58957",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__58958",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__58960",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__58974",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}