{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__74026, const global float* restrict v__74027, const global float* restrict v__74028, const global float* restrict v__74029, float v__74030, float v__74031, global float* v__74048, global float* v__74038, local float* v__74043, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__74034; \n  float v__74039; \n  float v__57071; \n  /* Private Memory */\n  float v__74036_0;\n  \n  for (int v_wg_id_74018 = get_group_id(0); v_wg_id_74018 < v_MHeight_2; v_wg_id_74018 = (v_wg_id_74018 + get_num_groups(0))) {\n    for (int v_l_id_74019 = get_local_id(0); v_l_id_74019 < v_MWidthC_1; v_l_id_74019 = (v_l_id_74019 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_74020 = 0; v_i_74020 < 256; v_i_74020 = (1 + v_i_74020)) {\n        float v_tmp_74113 = 3.4028235E38f; \n        v__74034 = v_tmp_74113; \n        int v_index_74114 = v__74026[(v_l_id_74019 + (256 * v_MWidthC_1 * v_wg_id_74018) + (v_MWidthC_1 * v_i_74020))]; \n        if (v_index_74114 < 0) {\n          v__74036_0 = v__74034; \n        } else {\n          if (v_index_74114 >= v_VLength_3) {\n            v__74036_0 = v__74034; \n          } else {\n            v__74036_0 = v__74028[v_index_74114]; \n          }\n        }\n        v__74038[(255 + (256 * v_MWidthC_1 * v_wg_id_74018) + (-1 * v_i_74020) + (256 * v_l_id_74019))] = absadd(v__74036_0, v__74027[(v_l_id_74019 + (256 * v_MWidthC_1 * v_wg_id_74018) + (v_MWidthC_1 * v_i_74020))]); \n      }\n      /* end map_seq */\n      float v_tmp_74115 = 3.4028235E38f; \n      v__74039 = v_tmp_74115; \n      /* reduce_seq */\n      for (int v_i_74021 = 0; v_i_74021 < 256; v_i_74021 = (1 + v_i_74021)) {\n        v__74039 = clmin(v__74039, v__74038[(v_i_74021 + (256 * v_MWidthC_1 * v_wg_id_74018) + (256 * v_l_id_74019))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74022 = 0; \n        v__74043[v_l_id_74019] = id(v__74039); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_74023 = get_local_id(0); \n      float v_tmp_74118 = 3.4028235E38f; \n      v__57071 = v_tmp_74118; \n      /* reduce_seq */\n      for (int v_i_74024 = 0; v_i_74024 < v_MWidthC_1; v_i_74024 = (1 + v_i_74024)) {\n        v__57071 = clmin(v__57071, v__74043[(v_i_74024 + (v_MWidthC_1 * v_l_id_74023))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74025 = 0; \n        v__74048[v_wg_id_74018] = doubleMultiplyAdd(v__57071, v__74030, v__74029[v_wg_id_74018], v__74031); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__74026",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74027",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74028",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74029",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74030",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74031",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__74038",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__74048",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__74043",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}