{
  "name" : "swrg-slcl-slcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__77358, const global float* restrict v__77359, const global float* restrict v__77360, const global float* restrict v__77361, float v__77362, float v__77363, global float* v__77380, global float* v__77370, local float* v__77375, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77366; \n  float v__77371; \n  float v__57071; \n  /* Private Memory */\n  float v__77368_0;\n  \n  for (int v_wg_id_77350 = get_group_id(0); v_wg_id_77350 < v_MHeight_2; v_wg_id_77350 = (v_wg_id_77350 + get_num_groups(0))) {\n    for (int v_l_id_77351 = get_local_id(0); v_l_id_77351 < v_MWidthC_1; v_l_id_77351 = (v_l_id_77351 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_77352 = 0; v_i_77352 < 512; v_i_77352 = (1 + v_i_77352)) {\n        float v_tmp_77445 = 3.4028235E38f; \n        v__77366 = v_tmp_77445; \n        int v_index_77446 = v__77358[(v_l_id_77351 + (512 * v_MWidthC_1 * v_wg_id_77350) + (v_MWidthC_1 * v_i_77352))]; \n        if (v_index_77446 < 0) {\n          v__77368_0 = v__77366; \n        } else {\n          if (v_index_77446 >= v_VLength_3) {\n            v__77368_0 = v__77366; \n          } else {\n            v__77368_0 = v__77360[v_index_77446]; \n          }\n        }\n        v__77370[(511 + (512 * v_MWidthC_1 * v_wg_id_77350) + (-1 * v_i_77352) + (512 * v_l_id_77351))] = absadd(v__77368_0, v__77359[(v_l_id_77351 + (512 * v_MWidthC_1 * v_wg_id_77350) + (v_MWidthC_1 * v_i_77352))]); \n      }\n      /* end map_seq */\n      float v_tmp_77447 = 3.4028235E38f; \n      v__77371 = v_tmp_77447; \n      /* reduce_seq */\n      for (int v_i_77353 = 0; v_i_77353 < 512; v_i_77353 = (1 + v_i_77353)) {\n        v__77371 = clmin(v__77371, v__77370[(v_i_77353 + (512 * v_MWidthC_1 * v_wg_id_77350) + (512 * v_l_id_77351))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77354 = 0; \n        v__77375[v_l_id_77351] = id(v__77371); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_77355 = get_local_id(0); \n      float v_tmp_77450 = 3.4028235E38f; \n      v__57071 = v_tmp_77450; \n      /* reduce_seq */\n      for (int v_i_77356 = 0; v_i_77356 < v_MWidthC_1; v_i_77356 = (1 + v_i_77356)) {\n        v__57071 = clmin(v__57071, v__77375[(v_i_77356 + (v_MWidthC_1 * v_l_id_77355))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77357 = 0; \n        v__77380[v_wg_id_77350] = doubleMultiplyAdd(v__57071, v__77362, v__77361[v_wg_id_77350], v__77363); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__77358",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77359",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77360",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77361",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__77362",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77363",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__77370",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__77380",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__77375",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}