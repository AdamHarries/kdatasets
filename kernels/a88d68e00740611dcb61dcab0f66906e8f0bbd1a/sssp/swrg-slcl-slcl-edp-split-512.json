{
  "name" : "swrg-slcl-slcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nkernel void KERNEL(const global int* restrict v__77570, const global float* restrict v__77571, const global float* restrict v__77572, const global float* restrict v__77573, float v__77574, float v__77575, global float* v__77594, local float* v__77589, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77578; \n  float v__77580; \n  float v__57071; \n  /* Private Memory */\n  float v__77582_0;\n  \n  float v__77584_0;\n  \n  int v__77588_0;\n  \n  for (int v_wg_id_77563 = get_group_id(0); v_wg_id_77563 < v_MHeight_2; v_wg_id_77563 = (v_wg_id_77563 + get_num_groups(0))) {\n    for (int v_l_id_77564 = get_local_id(0); v_l_id_77564 < v_MWidthC_1; v_l_id_77564 = (v_l_id_77564 + get_local_size(0))) {\n      float v_tmp_77662 = 3.4028235E38f; \n      v__77578 = v_tmp_77662; \n      /* reduce_while_seq */\n      for (int v_i_77565 = 0; v_i_77565 < 512; v_i_77565 = (1 + v_i_77565)) {\n        v__77588_0 = check(v__77578, v__77570[(v_l_id_77564 + (512 * v_MWidthC_1 * v_wg_id_77563) + (v_MWidthC_1 * v_i_77565))]); \n        if (v__77588_0) {\n        } else {\n          break;\n        }\n        float v_tmp_77663 = 3.4028235E38f; \n        v__77580 = v_tmp_77663; \n        int v_index_77664 = v__77570[(v_l_id_77564 + (512 * v_MWidthC_1 * v_wg_id_77563) + (v_MWidthC_1 * v_i_77565))]; \n        if (v_index_77664 < 0) {\n          v__77582_0 = v__77580; \n        } else {\n          if (v_index_77664 >= v_VLength_3) {\n            v__77582_0 = v__77580; \n          } else {\n            v__77582_0 = v__77572[v_index_77664]; \n          }\n        }\n        v__77584_0 = absadd(v__77582_0, v__77571[(v_l_id_77564 + (512 * v_MWidthC_1 * v_wg_id_77563) + (v_MWidthC_1 * v_i_77565))]); \n        v__77578 = clmin(v__77584_0, v__77578); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77566 = 0; \n        v__77589[v_l_id_77564] = id(v__77578); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_77567 = get_local_id(0); \n      float v_tmp_77667 = 3.4028235E38f; \n      v__57071 = v_tmp_77667; \n      /* reduce_seq */\n      for (int v_i_77568 = 0; v_i_77568 < v_MWidthC_1; v_i_77568 = (1 + v_i_77568)) {\n        v__57071 = clmin(v__57071, v__77589[(v_i_77568 + (v_MWidthC_1 * v_l_id_77567))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77569 = 0; \n        v__77594[v_wg_id_77563] = doubleMultiplyAdd(v__57071, v__77574, v__77573[v_wg_id_77563], v__77575); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__77570",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77571",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77572",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77573",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__77574",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77575",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__77594",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__77589",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}