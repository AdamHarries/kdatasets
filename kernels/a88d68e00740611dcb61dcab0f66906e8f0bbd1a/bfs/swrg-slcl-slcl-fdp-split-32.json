{
  "name" : "swrg-slcl-slcl-fdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__40290, const global int* restrict v__40291, const global int* restrict v__40292, const global int* restrict v__40293, int v__40294, int v__40295, global int* v__40312, local int* v__40307, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__40298; \n  int v__40300; \n  int v__33230; \n  /* Private Memory */\n  int v__40302_0;\n  \n  int v__40304_0;\n  \n  for (int v_wg_id_40283 = get_group_id(0); v_wg_id_40283 < v_MHeight_2; v_wg_id_40283 = (v_wg_id_40283 + get_num_groups(0))) {\n    for (int v_l_id_40284 = get_local_id(0); v_l_id_40284 < v_MWidthC_1; v_l_id_40284 = (v_l_id_40284 + get_local_size(0))) {\n      int v_tmp_40377 = 0; \n      v__40298 = v_tmp_40377; \n      /* reduce_seq */\n      for (int v_i_40285 = 0; v_i_40285 < 32; v_i_40285 = (1 + v_i_40285)) {\n        int v_tmp_40378 = 0; \n        v__40300 = v_tmp_40378; \n        int v_index_40379 = v__40290[(v_l_id_40284 + (32 * v_MWidthC_1 * v_wg_id_40283) + (v_MWidthC_1 * v_i_40285))]; \n        if (v_index_40379 < 0) {\n          v__40302_0 = v__40300; \n        } else {\n          if (v_index_40379 >= v_VLength_3) {\n            v__40302_0 = v__40300; \n          } else {\n            v__40302_0 = v__40292[v_index_40379]; \n          }\n        }\n        v__40304_0 = bool_and(v__40302_0, v__40291[(v_l_id_40284 + (32 * v_MWidthC_1 * v_wg_id_40283) + (v_MWidthC_1 * v_i_40285))]); \n        v__40298 = bool_or(v__40304_0, v__40298); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40286 = 0; \n        v__40307[v_l_id_40284] = id(v__40298); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_40287 = get_local_id(0); \n      int v_tmp_40382 = 0; \n      v__33230 = v_tmp_40382; \n      /* reduce_seq */\n      for (int v_i_40288 = 0; v_i_40288 < v_MWidthC_1; v_i_40288 = (1 + v_i_40288)) {\n        v__33230 = bool_or(v__33230, v__40307[(v_i_40288 + (v_MWidthC_1 * v_l_id_40287))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40289 = 0; \n        v__40312[v_wg_id_40283] = doubleAndOr(v__33230, v__40294, v__40293[v_wg_id_40283], v__40295); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__40290",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40291",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40292",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__40293",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__40294",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__40295",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__40312",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__40307",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}