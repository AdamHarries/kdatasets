{
  "name" : "swrg-alcl-sdp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__50813, const global int* restrict v__50814, const global int* restrict v__50815, const global int* restrict v__50816, int v__50817, int v__50818, global int* v__50831, global int* v__50825, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__50821; \n  int v__50826; \n  /* Private Memory */\n  int v__50823_0;\n  \n  for (int v_wg_id_50808 = get_group_id(0); v_wg_id_50808 < ((v_MHeight_2)/(256)); v_wg_id_50808 = (v_wg_id_50808 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_3907; \n      v_work_idx_3907 = 0; \n      int v_l_id_50809 = atomic_inc(&(v_work_idx_3907)); \n      while((v_l_id_50809 < 256)){\n        /* map_seq */\n        for (int v_i_50810 = 0; v_i_50810 < v_MWidthC_1; v_i_50810 = (1 + v_i_50810)) {\n          int v_tmp_50871 = 0; \n          v__50821 = v_tmp_50871; \n          int v_index_50872 = v__50813[(v_i_50810 + (256 * v_MWidthC_1 * v_wg_id_50808) + (v_MWidthC_1 * v_l_id_50809))]; \n          if (v_index_50872 < 0) {\n            v__50823_0 = v__50821; \n          } else {\n            if (v_index_50872 >= v_VLength_3) {\n              v__50823_0 = v__50821; \n            } else {\n              v__50823_0 = v__50815[v_index_50872]; \n            }\n          }\n          v__50825[(-1 + v_MWidthC_1 + (256 * v_MWidthC_1 * v_wg_id_50808) + (-1 * v_i_50810) + (v_MWidthC_1 * v_l_id_50809))] = bool_and(v__50823_0, v__50814[(v_i_50810 + (256 * v_MWidthC_1 * v_wg_id_50808) + (v_MWidthC_1 * v_l_id_50809))]); \n        }\n        /* end map_seq */\n        int v_tmp_50873 = 0; \n        v__50826 = v_tmp_50873; \n        /* reduce_seq */\n        for (int v_i_50811 = 0; v_i_50811 < v_MWidthC_1; v_i_50811 = (1 + v_i_50811)) {\n          v__50826 = bool_or(v__50826, v__50825[(v_i_50811 + (256 * v_MWidthC_1 * v_wg_id_50808) + (v_MWidthC_1 * v_l_id_50809))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_50812 = 0; \n          v__50831[(v_l_id_50809 + (256 * v_wg_id_50808))] = doubleAndOr(v__50826, v__50817, v__50816[(v_l_id_50809 + (256 * v_wg_id_50808))], v__50818); \n        }\n        /* end map_seq */\n        v_l_id_50809 = atomic_inc(&(v_work_idx_3907)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "alcl",
    "chunkSize" : "256",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__50813",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__50814",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__50815",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__50816",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__50817",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__50818",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__50825",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__50831",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}