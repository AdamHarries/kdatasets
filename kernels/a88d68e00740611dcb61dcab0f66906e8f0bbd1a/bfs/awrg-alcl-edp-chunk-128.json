{
  "name" : "awrg-alcl-edp-chunk-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49287, const global int* restrict v__49288, const global int* restrict v__49289, const global int* restrict v__49290, int v__49291, int v__49292, global int* v__49308, global int* v__49294, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49295; \n  int v__49298; \n  /* Private Memory */\n  int v__49300_0;\n  \n  int v__49302_0;\n  \n  int v__49306_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3767 = v__49294; \n    local int v_w_id_49283; \n    if (get_local_id(0) == 0) {\n      v_w_id_49283 = atomic_inc(v_work_idx_3767); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_49283 < ((v_MHeight_2)/(128)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3765; \n        v_work_idx_3765 = 0; \n        int v_l_id_49284 = atomic_inc(&(v_work_idx_3765)); \n        while((v_l_id_49284 < 128)){\n          int v_tmp_49351 = 0; \n          v__49295 = v_tmp_49351; \n          /* reduce_while_seq */\n          for (int v_i_49285 = 0; v_i_49285 < v_MWidthC_1; v_i_49285 = (1 + v_i_49285)) {\n            v__49306_0 = check(v__49295, v__49287[(v_i_49285 + (128 * v_MWidthC_1 * v_w_id_49283) + (v_MWidthC_1 * v_l_id_49284))]); \n            if (v__49306_0) {\n            } else {\n              break;\n            }\n            int v_tmp_49352 = 0; \n            v__49298 = v_tmp_49352; \n            int v_index_49353 = v__49287[(v_i_49285 + (128 * v_MWidthC_1 * v_w_id_49283) + (v_MWidthC_1 * v_l_id_49284))]; \n            if (v_index_49353 < 0) {\n              v__49300_0 = v__49298; \n            } else {\n              if (v_index_49353 >= v_VLength_3) {\n                v__49300_0 = v__49298; \n              } else {\n                v__49300_0 = v__49289[v_index_49353]; \n              }\n            }\n            v__49302_0 = bool_and(v__49300_0, v__49288[(v_i_49285 + (128 * v_MWidthC_1 * v_w_id_49283) + (v_MWidthC_1 * v_l_id_49284))]); \n            v__49295 = bool_or(v__49302_0, v__49295); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49286 = 0; \n            v__49308[(v_l_id_49284 + (128 * v_w_id_49283))] = doubleAndOr(v__49295, v__49291, v__49290[(v_l_id_49284 + (128 * v_w_id_49283))], v__49292); \n          }\n          /* end map_seq */\n          v_l_id_49284 = atomic_inc(&(v_work_idx_3765)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_49283 = atomic_inc(v_work_idx_3767); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "128",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__49287",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49288",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49289",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49290",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49291",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49292",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49294",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__49308",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}