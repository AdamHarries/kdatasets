{
  "name" : "swrg-slcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__53938, const global int* restrict v__53939, const global int* restrict v__53940, const global int* restrict v__53941, int v__53942, int v__53943, global int* v__53960, local int* v__53955, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53946; \n  int v__53948; \n  int v__33230; \n  /* Private Memory */\n  int v__53950_0;\n  \n  int v__53952_0;\n  \n  for (int v_wg_id_53931 = get_group_id(0); v_wg_id_53931 < v_MHeight_2; v_wg_id_53931 = (v_wg_id_53931 + get_num_groups(0))) {\n    for (int v_l_id_53932 = get_local_id(0); v_l_id_53932 < v_MWidthC_1; v_l_id_53932 = (v_l_id_53932 + get_local_size(0))) {\n      int v_tmp_54021 = 0; \n      v__53946 = v_tmp_54021; \n      /* reduce_seq */\n      for (int v_i_53933 = 0; v_i_53933 < 512; v_i_53933 = (1 + v_i_53933)) {\n        int v_tmp_54022 = 0; \n        v__53948 = v_tmp_54022; \n        int v_index_54023 = v__53938[(v_l_id_53932 + (512 * v_MWidthC_1 * v_wg_id_53931) + (v_MWidthC_1 * v_i_53933))]; \n        if (v_index_54023 < 0) {\n          v__53950_0 = v__53948; \n        } else {\n          if (v_index_54023 >= v_VLength_3) {\n            v__53950_0 = v__53948; \n          } else {\n            v__53950_0 = v__53940[v_index_54023]; \n          }\n        }\n        v__53952_0 = bool_and(v__53950_0, v__53939[(v_l_id_53932 + (512 * v_MWidthC_1 * v_wg_id_53931) + (v_MWidthC_1 * v_i_53933))]); \n        v__53946 = bool_or(v__53952_0, v__53946); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53934 = 0; \n        v__53955[v_l_id_53932] = id(v__53946); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_4199; \n      v_work_idx_4199 = 0; \n      int v_l_id_53935 = atomic_inc(&(v_work_idx_4199)); \n      while((v_l_id_53935 < 1)){\n        int v_tmp_54026 = 0; \n        v__33230 = v_tmp_54026; \n        /* reduce_seq */\n        for (int v_i_53936 = 0; v_i_53936 < v_MWidthC_1; v_i_53936 = (1 + v_i_53936)) {\n          v__33230 = bool_or(v__33230, v__53955[(v_i_53936 + (v_MWidthC_1 * v_l_id_53935))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_53937 = 0; \n          v__53960[v_wg_id_53931] = doubleAndOr(v__33230, v__53942, v__53941[v_wg_id_53931], v__53943); \n        }\n        /* end map_seq */\n        v_l_id_53935 = atomic_inc(&(v_work_idx_4199)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__53938",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53939",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53940",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53941",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__53942",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53943",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__53960",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__53955",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}