{
  "name" : "swrg-alcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__102452, const global float* restrict v__102453, const global float* restrict v__102454, const global float* restrict v__102455, float v__102456, float v__102457, global float* v__102474, local float* v__102469, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__102460; \n  float v__102462; \n  float v__80917; \n  /* Private Memory */\n  float v__102464_0;\n  \n  float v__102466_0;\n  \n  for (int v_wg_id_102445 = get_group_id(0); v_wg_id_102445 < v_MHeight_2; v_wg_id_102445 = (v_wg_id_102445 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_8734; \n      v_work_idx_8734 = 0; \n      int v_l_id_102446 = atomic_inc(&(v_work_idx_8734)); \n      while((v_l_id_102446 < v_MWidthC_1)){\n        float v_tmp_102527 = 0.0f; \n        v__102460 = v_tmp_102527; \n        /* reduce_seq */\n        for (int v_i_102447 = 0; v_i_102447 < 512; v_i_102447 = (1 + v_i_102447)) {\n          float v_tmp_102528 = 0.0f; \n          v__102462 = v_tmp_102528; \n          int v_index_102529 = v__102452[(v_l_id_102446 + (512 * v_MWidthC_1 * v_wg_id_102445) + (v_MWidthC_1 * v_i_102447))]; \n          if (v_index_102529 < 0) {\n            v__102464_0 = v__102462; \n          } else {\n            if (v_index_102529 >= v_VLength_3) {\n              v__102464_0 = v__102462; \n            } else {\n              v__102464_0 = v__102454[v_index_102529]; \n            }\n          }\n          v__102466_0 = mult(v__102464_0, v__102453[(v_l_id_102446 + (512 * v_MWidthC_1 * v_wg_id_102445) + (v_MWidthC_1 * v_i_102447))]); \n          v__102460 = add(v__102466_0, v__102460); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_102448 = 0; \n          v__102469[v_l_id_102446] = id(v__102460); \n        }\n        /* end map_seq */\n        v_l_id_102446 = atomic_inc(&(v_work_idx_8734)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_8729; \n      v_work_idx_8729 = 0; \n      int v_l_id_102449 = atomic_inc(&(v_work_idx_8729)); \n      while((v_l_id_102449 < 1)){\n        float v_tmp_102532 = 0.0f; \n        v__80917 = v_tmp_102532; \n        /* reduce_seq */\n        for (int v_i_102450 = 0; v_i_102450 < v_MWidthC_1; v_i_102450 = (1 + v_i_102450)) {\n          v__80917 = add(v__80917, v__102469[(v_i_102450 + (v_MWidthC_1 * v_l_id_102449))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_102451 = 0; \n          v__102474[v_wg_id_102445] = doubleMultiplyAdd(v__80917, v__102456, v__102455[v_wg_id_102445], v__102457); \n        }\n        /* end map_seq */\n        v_l_id_102449 = atomic_inc(&(v_work_idx_8729)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__102452",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__102453",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__102454",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__102455",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__102456",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__102457",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__102474",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__102469",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}