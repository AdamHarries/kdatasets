{
  "name" : "swrg-slcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__94864, const global float* restrict v__94865, const global float* restrict v__94866, const global float* restrict v__94867, float v__94868, float v__94869, global float* v__94886, global float* v__94876, local float* v__94881, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__94872; \n  float v__94877; \n  float v__80917; \n  /* Private Memory */\n  float v__94874_0;\n  \n  for (int v_wg_id_94856 = get_group_id(0); v_wg_id_94856 < v_MHeight_2; v_wg_id_94856 = (v_wg_id_94856 + get_num_groups(0))) {\n    for (int v_l_id_94857 = get_local_id(0); v_l_id_94857 < v_MWidthC_1; v_l_id_94857 = (v_l_id_94857 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_94858 = 0; v_i_94858 < 128; v_i_94858 = (1 + v_i_94858)) {\n        float v_tmp_94947 = 0.0f; \n        v__94872 = v_tmp_94947; \n        int v_index_94948 = v__94864[(v_l_id_94857 + (128 * v_MWidthC_1 * v_wg_id_94856) + (v_MWidthC_1 * v_i_94858))]; \n        if (v_index_94948 < 0) {\n          v__94874_0 = v__94872; \n        } else {\n          if (v_index_94948 >= v_VLength_3) {\n            v__94874_0 = v__94872; \n          } else {\n            v__94874_0 = v__94866[v_index_94948]; \n          }\n        }\n        v__94876[(127 + (128 * v_MWidthC_1 * v_wg_id_94856) + (-1 * v_i_94858) + (128 * v_l_id_94857))] = mult(v__94874_0, v__94865[(v_l_id_94857 + (128 * v_MWidthC_1 * v_wg_id_94856) + (v_MWidthC_1 * v_i_94858))]); \n      }\n      /* end map_seq */\n      float v_tmp_94949 = 0.0f; \n      v__94877 = v_tmp_94949; \n      /* reduce_seq */\n      for (int v_i_94859 = 0; v_i_94859 < 128; v_i_94859 = (1 + v_i_94859)) {\n        v__94877 = add(v__94877, v__94876[(v_i_94859 + (128 * v_MWidthC_1 * v_wg_id_94856) + (128 * v_l_id_94857))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94860 = 0; \n        v__94881[v_l_id_94857] = id(v__94877); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_8019; \n      v_work_idx_8019 = 0; \n      int v_l_id_94861 = atomic_inc(&(v_work_idx_8019)); \n      while((v_l_id_94861 < 1)){\n        float v_tmp_94952 = 0.0f; \n        v__80917 = v_tmp_94952; \n        /* reduce_seq */\n        for (int v_i_94862 = 0; v_i_94862 < v_MWidthC_1; v_i_94862 = (1 + v_i_94862)) {\n          v__80917 = add(v__80917, v__94881[(v_i_94862 + (v_MWidthC_1 * v_l_id_94861))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_94863 = 0; \n          v__94886[v_wg_id_94856] = doubleMultiplyAdd(v__80917, v__94868, v__94867[v_wg_id_94856], v__94869); \n        }\n        /* end map_seq */\n        v_l_id_94861 = atomic_inc(&(v_work_idx_8019)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__94864",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94865",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94866",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__94867",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__94868",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__94869",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__94876",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__94886",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__94881",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}