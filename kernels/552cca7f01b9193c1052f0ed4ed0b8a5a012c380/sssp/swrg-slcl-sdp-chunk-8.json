{
  "name" : "swrg-slcl-sdp-chunk-8",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__57133, const global float* restrict v__57134, const global float* restrict v__57135, const global float* restrict v__57136, float v__57137, float v__57138, global float* v__57151, global float* v__57145, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__57141; \n  float v__57146; \n  /* Private Memory */\n  float v__57143_0;\n  \n  for (int v_wg_id_57128 = get_group_id(0); v_wg_id_57128 < ((v_MHeight_2)/(8)); v_wg_id_57128 = (v_wg_id_57128 + get_num_groups(0))) {\n    for (int v_l_id_57129 = get_local_id(0); v_l_id_57129 < 8; v_l_id_57129 = (v_l_id_57129 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_57130 = 0; v_i_57130 < v_MWidthC_1; v_i_57130 = (1 + v_i_57130)) {\n        float v_tmp_57195 = 3.4028235E38f; \n        v__57141 = v_tmp_57195; \n        int v_index_57196 = v__57133[(v_i_57130 + (8 * v_MWidthC_1 * v_wg_id_57128) + (v_MWidthC_1 * v_l_id_57129))]; \n        if (v_index_57196 < 0) {\n          v__57143_0 = v__57141; \n        } else {\n          if (v_index_57196 >= v_VLength_3) {\n            v__57143_0 = v__57141; \n          } else {\n            v__57143_0 = v__57135[v_index_57196]; \n          }\n        }\n        v__57145[(-1 + v_MWidthC_1 + (8 * v_MWidthC_1 * v_wg_id_57128) + (-1 * v_i_57130) + (v_MWidthC_1 * v_l_id_57129))] = absadd(v__57143_0, v__57134[(v_i_57130 + (8 * v_MWidthC_1 * v_wg_id_57128) + (v_MWidthC_1 * v_l_id_57129))]); \n      }\n      /* end map_seq */\n      float v_tmp_57197 = 3.4028235E38f; \n      v__57146 = v_tmp_57197; \n      /* reduce_seq */\n      for (int v_i_57131 = 0; v_i_57131 < v_MWidthC_1; v_i_57131 = (1 + v_i_57131)) {\n        v__57146 = clmin(v__57146, v__57145[(v_i_57131 + (8 * v_MWidthC_1 * v_wg_id_57128) + (v_MWidthC_1 * v_l_id_57129))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_57132 = 0; \n        v__57151[(v_l_id_57129 + (8 * v_wg_id_57128))] = doubleMultiplyAdd(v__57146, v__57137, v__57136[(v_l_id_57129 + (8 * v_wg_id_57128))], v__57138); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "8",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__57133",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57134",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57135",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__57136",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57137",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57138",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__57145",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__57151",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}