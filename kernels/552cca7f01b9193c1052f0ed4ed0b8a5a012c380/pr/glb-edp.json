{
  "name" : "glb-edp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__80578, const global float* restrict v__80579, const global float* restrict v__80580, const global float* restrict v__80581, float v__80582, float v__80583, global float* v__80598, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__80585; \n  float v__80588; \n  /* Private Memory */\n  float v__80590; \n  float v__80592; \n  int v__80596; \n  for (int v_gl_id_80575 = get_global_id(0); v_gl_id_80575 < v_MHeight_2; v_gl_id_80575 = (v_gl_id_80575 + get_global_size(0))) {\n    float v_tmp_80631 = 0.0f; \n    v__80585 = v_tmp_80631; \n    /* reduce_while_seq */\n    for (int v_i_80576 = 0; v_i_80576 < v_MWidthC_1; v_i_80576 = (1 + v_i_80576)) {\n      v__80596 = check(v__80585, v__80578[(v_i_80576 + (v_MWidthC_1 * v_gl_id_80575))]); \n      if (v__80596) {\n      } else {\n        break;\n      }\n      float v_tmp_80632 = 0.0f; \n      v__80588 = v_tmp_80632; \n      int v_index_80633 = v__80578[(v_i_80576 + (v_MWidthC_1 * v_gl_id_80575))]; \n      if (v_index_80633 < 0) {\n        v__80590 = v__80588; \n      } else {\n        if (v_index_80633 >= v_VLength_3) {\n          v__80590 = v__80588; \n        } else {\n          v__80590 = v__80580[v_index_80633]; \n        }\n      }\n      v__80592 = mult(v__80590, v__80579[(v_i_80576 + (v_MWidthC_1 * v_gl_id_80575))]); \n      v__80585 = add(v__80592, v__80585); \n    }\n    /* end reduce_while_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_80577 = 0; \n      v__80598[v_gl_id_80575] = doubleMultiplyAdd(v__80585, v__80582, v__80581[v_gl_id_80575], v__80583); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__80578",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__80579",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__80580",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__80581",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__80582",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__80583",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__80598",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}