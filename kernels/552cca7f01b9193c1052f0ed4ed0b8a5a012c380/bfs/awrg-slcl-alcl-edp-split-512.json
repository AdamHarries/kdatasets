{
  "name" : "awrg-slcl-alcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__55707, const global int* restrict v__55708, const global int* restrict v__55709, const global int* restrict v__55710, int v__55711, int v__55712, global int* v__55732, global int* v__55714, local int* v__55727, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__55716; \n  int v__55718; \n  int v__33230; \n  /* Private Memory */\n  int v__55720_0;\n  \n  int v__55722_0;\n  \n  int v__55726_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4369 = v__55714; \n    local int v_w_id_55700; \n    if (get_local_id(0) == 0) {\n      v_w_id_55700 = atomic_inc(v_work_idx_4369); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_55700 < v_MHeight_2)){\n      for (int v_l_id_55701 = get_local_id(0); v_l_id_55701 < v_MWidthC_1; v_l_id_55701 = (v_l_id_55701 + get_local_size(0))) {\n        int v_tmp_55794 = 0; \n        v__55716 = v_tmp_55794; \n        /* reduce_while_seq */\n        for (int v_i_55702 = 0; v_i_55702 < 512; v_i_55702 = (1 + v_i_55702)) {\n          v__55726_0 = check(v__55716, v__55707[(v_l_id_55701 + (512 * v_MWidthC_1 * v_w_id_55700) + (v_MWidthC_1 * v_i_55702))]); \n          if (v__55726_0) {\n          } else {\n            break;\n          }\n          int v_tmp_55795 = 0; \n          v__55718 = v_tmp_55795; \n          int v_index_55796 = v__55707[(v_l_id_55701 + (512 * v_MWidthC_1 * v_w_id_55700) + (v_MWidthC_1 * v_i_55702))]; \n          if (v_index_55796 < 0) {\n            v__55720_0 = v__55718; \n          } else {\n            if (v_index_55796 >= v_VLength_3) {\n              v__55720_0 = v__55718; \n            } else {\n              v__55720_0 = v__55709[v_index_55796]; \n            }\n          }\n          v__55722_0 = bool_and(v__55720_0, v__55708[(v_l_id_55701 + (512 * v_MWidthC_1 * v_w_id_55700) + (v_MWidthC_1 * v_i_55702))]); \n          v__55716 = bool_or(v__55722_0, v__55716); \n        }\n        /* end reduce_while_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_55703 = 0; \n          v__55727[v_l_id_55701] = id(v__55716); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4363; \n        v_work_idx_4363 = 0; \n        int v_l_id_55704 = atomic_inc(&(v_work_idx_4363)); \n        while((v_l_id_55704 < 1)){\n          int v_tmp_55799 = 0; \n          v__33230 = v_tmp_55799; \n          /* reduce_seq */\n          for (int v_i_55705 = 0; v_i_55705 < v_MWidthC_1; v_i_55705 = (1 + v_i_55705)) {\n            v__33230 = bool_or(v__33230, v__55727[(v_i_55705 + (v_MWidthC_1 * v_l_id_55704))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_55706 = 0; \n            v__55732[v_w_id_55700] = doubleAndOr(v__33230, v__55711, v__55710[v_w_id_55700], v__55712); \n          }\n          /* end map_seq */\n          v_l_id_55704 = atomic_inc(&(v_work_idx_4363)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_55700 = atomic_inc(v_work_idx_4369); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__55707",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55708",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55709",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__55710",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__55711",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__55712",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__55714",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__55732",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__55727",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}