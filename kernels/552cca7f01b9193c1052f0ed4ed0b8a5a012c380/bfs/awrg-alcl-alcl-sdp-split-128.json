{
  "name" : "awrg-alcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49665, const global int* restrict v__49666, const global int* restrict v__49667, const global int* restrict v__49668, int v__49669, int v__49670, global int* v__49688, global int* v__49678, global int* v__49672, local int* v__49683, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49674; \n  int v__49679; \n  int v__33230; \n  /* Private Memory */\n  int v__49676_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3810 = v__49672; \n    local int v_w_id_49657; \n    if (get_local_id(0) == 0) {\n      v_w_id_49657 = atomic_inc(v_work_idx_3810); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_49657 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3808; \n        v_work_idx_3808 = 0; \n        int v_l_id_49658 = atomic_inc(&(v_work_idx_3808)); \n        while((v_l_id_49658 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_49659 = 0; v_i_49659 < 128; v_i_49659 = (1 + v_i_49659)) {\n            int v_tmp_49739 = 0; \n            v__49674 = v_tmp_49739; \n            int v_index_49740 = v__49665[(v_l_id_49658 + (128 * v_MWidthC_1 * v_w_id_49657) + (v_MWidthC_1 * v_i_49659))]; \n            if (v_index_49740 < 0) {\n              v__49676_0 = v__49674; \n            } else {\n              if (v_index_49740 >= v_VLength_3) {\n                v__49676_0 = v__49674; \n              } else {\n                v__49676_0 = v__49667[v_index_49740]; \n              }\n            }\n            v__49678[(127 + (128 * v_MWidthC_1 * v_w_id_49657) + (-1 * v_i_49659) + (128 * v_l_id_49658))] = bool_and(v__49676_0, v__49666[(v_l_id_49658 + (128 * v_MWidthC_1 * v_w_id_49657) + (v_MWidthC_1 * v_i_49659))]); \n          }\n          /* end map_seq */\n          int v_tmp_49741 = 0; \n          v__49679 = v_tmp_49741; \n          /* reduce_seq */\n          for (int v_i_49660 = 0; v_i_49660 < 128; v_i_49660 = (1 + v_i_49660)) {\n            v__49679 = bool_or(v__49679, v__49678[(v_i_49660 + (128 * v_MWidthC_1 * v_w_id_49657) + (128 * v_l_id_49658))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49661 = 0; \n            v__49683[v_l_id_49658] = id(v__49679); \n          }\n          /* end map_seq */\n          v_l_id_49658 = atomic_inc(&(v_work_idx_3808)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3802; \n        v_work_idx_3802 = 0; \n        int v_l_id_49662 = atomic_inc(&(v_work_idx_3802)); \n        while((v_l_id_49662 < 1)){\n          int v_tmp_49744 = 0; \n          v__33230 = v_tmp_49744; \n          /* reduce_seq */\n          for (int v_i_49663 = 0; v_i_49663 < v_MWidthC_1; v_i_49663 = (1 + v_i_49663)) {\n            v__33230 = bool_or(v__33230, v__49683[(v_i_49663 + (v_MWidthC_1 * v_l_id_49662))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49664 = 0; \n            v__49688[v_w_id_49657] = doubleAndOr(v__33230, v__49669, v__49668[v_w_id_49657], v__49670); \n          }\n          /* end map_seq */\n          v_l_id_49662 = atomic_inc(&(v_work_idx_3802)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_49657 = atomic_inc(v_work_idx_3810); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__49665",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49666",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49667",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49668",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49669",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49670",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49678",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49672",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__49688",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__49683",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}