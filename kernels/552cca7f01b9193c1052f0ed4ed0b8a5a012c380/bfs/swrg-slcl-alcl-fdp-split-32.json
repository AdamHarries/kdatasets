{
  "name" : "swrg-slcl-alcl-fdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__40610, const global int* restrict v__40611, const global int* restrict v__40612, const global int* restrict v__40613, int v__40614, int v__40615, global int* v__40632, local int* v__40627, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__40618; \n  int v__40620; \n  int v__33230; \n  /* Private Memory */\n  int v__40622_0;\n  \n  int v__40624_0;\n  \n  for (int v_wg_id_40603 = get_group_id(0); v_wg_id_40603 < v_MHeight_2; v_wg_id_40603 = (v_wg_id_40603 + get_num_groups(0))) {\n    for (int v_l_id_40604 = get_local_id(0); v_l_id_40604 < v_MWidthC_1; v_l_id_40604 = (v_l_id_40604 + get_local_size(0))) {\n      int v_tmp_40693 = 0; \n      v__40618 = v_tmp_40693; \n      /* reduce_seq */\n      for (int v_i_40605 = 0; v_i_40605 < 32; v_i_40605 = (1 + v_i_40605)) {\n        int v_tmp_40694 = 0; \n        v__40620 = v_tmp_40694; \n        int v_index_40695 = v__40610[(v_l_id_40604 + (32 * v_MWidthC_1 * v_wg_id_40603) + (v_MWidthC_1 * v_i_40605))]; \n        if (v_index_40695 < 0) {\n          v__40622_0 = v__40620; \n        } else {\n          if (v_index_40695 >= v_VLength_3) {\n            v__40622_0 = v__40620; \n          } else {\n            v__40622_0 = v__40612[v_index_40695]; \n          }\n        }\n        v__40624_0 = bool_and(v__40622_0, v__40611[(v_l_id_40604 + (32 * v_MWidthC_1 * v_wg_id_40603) + (v_MWidthC_1 * v_i_40605))]); \n        v__40618 = bool_or(v__40624_0, v__40618); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40606 = 0; \n        v__40627[v_l_id_40604] = id(v__40618); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_2951; \n      v_work_idx_2951 = 0; \n      int v_l_id_40607 = atomic_inc(&(v_work_idx_2951)); \n      while((v_l_id_40607 < 1)){\n        int v_tmp_40698 = 0; \n        v__33230 = v_tmp_40698; \n        /* reduce_seq */\n        for (int v_i_40608 = 0; v_i_40608 < v_MWidthC_1; v_i_40608 = (1 + v_i_40608)) {\n          v__33230 = bool_or(v__33230, v__40627[(v_i_40608 + (v_MWidthC_1 * v_l_id_40607))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_40609 = 0; \n          v__40632[v_wg_id_40603] = doubleAndOr(v__33230, v__40614, v__40613[v_wg_id_40603], v__40615); \n        }\n        /* end map_seq */\n        v_l_id_40607 = atomic_inc(&(v_work_idx_2951)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__40610",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40611",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40612",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__40613",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__40614",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__40615",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__40632",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__40627",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}