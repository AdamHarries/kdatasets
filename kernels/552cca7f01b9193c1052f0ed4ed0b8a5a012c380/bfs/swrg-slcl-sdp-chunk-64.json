{
  "name" : "swrg-slcl-sdp-chunk-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__43283, const global int* restrict v__43284, const global int* restrict v__43285, const global int* restrict v__43286, int v__43287, int v__43288, global int* v__43301, global int* v__43295, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__43291; \n  int v__43296; \n  /* Private Memory */\n  int v__43293_0;\n  \n  for (int v_wg_id_43278 = get_group_id(0); v_wg_id_43278 < ((v_MHeight_2)/(64)); v_wg_id_43278 = (v_wg_id_43278 + get_num_groups(0))) {\n    for (int v_l_id_43279 = get_local_id(0); v_l_id_43279 < 64; v_l_id_43279 = (v_l_id_43279 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_43280 = 0; v_i_43280 < v_MWidthC_1; v_i_43280 = (1 + v_i_43280)) {\n        int v_tmp_43345 = 0; \n        v__43291 = v_tmp_43345; \n        int v_index_43346 = v__43283[(v_i_43280 + (64 * v_MWidthC_1 * v_wg_id_43278) + (v_MWidthC_1 * v_l_id_43279))]; \n        if (v_index_43346 < 0) {\n          v__43293_0 = v__43291; \n        } else {\n          if (v_index_43346 >= v_VLength_3) {\n            v__43293_0 = v__43291; \n          } else {\n            v__43293_0 = v__43285[v_index_43346]; \n          }\n        }\n        v__43295[(-1 + v_MWidthC_1 + (64 * v_MWidthC_1 * v_wg_id_43278) + (-1 * v_i_43280) + (v_MWidthC_1 * v_l_id_43279))] = bool_and(v__43293_0, v__43284[(v_i_43280 + (64 * v_MWidthC_1 * v_wg_id_43278) + (v_MWidthC_1 * v_l_id_43279))]); \n      }\n      /* end map_seq */\n      int v_tmp_43347 = 0; \n      v__43296 = v_tmp_43347; \n      /* reduce_seq */\n      for (int v_i_43281 = 0; v_i_43281 < v_MWidthC_1; v_i_43281 = (1 + v_i_43281)) {\n        v__43296 = bool_or(v__43296, v__43295[(v_i_43281 + (64 * v_MWidthC_1 * v_wg_id_43278) + (v_MWidthC_1 * v_l_id_43279))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_43282 = 0; \n        v__43301[(v_l_id_43279 + (64 * v_wg_id_43278))] = doubleAndOr(v__43296, v__43287, v__43286[(v_l_id_43279 + (64 * v_wg_id_43278))], v__43288); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "64",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__43283",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43284",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43285",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__43286",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__43287",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__43288",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__43295",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__43301",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}