{
  "name" : "swrg-slcl-sdp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49947, const global int* restrict v__49948, const global int* restrict v__49949, const global int* restrict v__49950, int v__49951, int v__49952, global int* v__49965, global int* v__49959, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49955; \n  int v__49960; \n  /* Private Memory */\n  int v__49957_0;\n  \n  for (int v_wg_id_49942 = get_group_id(0); v_wg_id_49942 < ((v_MHeight_2)/(256)); v_wg_id_49942 = (v_wg_id_49942 + get_num_groups(0))) {\n    for (int v_l_id_49943 = get_local_id(0); v_l_id_49943 < 256; v_l_id_49943 = (v_l_id_49943 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_49944 = 0; v_i_49944 < v_MWidthC_1; v_i_49944 = (1 + v_i_49944)) {\n        int v_tmp_50009 = 0; \n        v__49955 = v_tmp_50009; \n        int v_index_50010 = v__49947[(v_i_49944 + (256 * v_MWidthC_1 * v_wg_id_49942) + (v_MWidthC_1 * v_l_id_49943))]; \n        if (v_index_50010 < 0) {\n          v__49957_0 = v__49955; \n        } else {\n          if (v_index_50010 >= v_VLength_3) {\n            v__49957_0 = v__49955; \n          } else {\n            v__49957_0 = v__49949[v_index_50010]; \n          }\n        }\n        v__49959[(-1 + v_MWidthC_1 + (256 * v_MWidthC_1 * v_wg_id_49942) + (-1 * v_i_49944) + (v_MWidthC_1 * v_l_id_49943))] = bool_and(v__49957_0, v__49948[(v_i_49944 + (256 * v_MWidthC_1 * v_wg_id_49942) + (v_MWidthC_1 * v_l_id_49943))]); \n      }\n      /* end map_seq */\n      int v_tmp_50011 = 0; \n      v__49960 = v_tmp_50011; \n      /* reduce_seq */\n      for (int v_i_49945 = 0; v_i_49945 < v_MWidthC_1; v_i_49945 = (1 + v_i_49945)) {\n        v__49960 = bool_or(v__49960, v__49959[(v_i_49945 + (256 * v_MWidthC_1 * v_wg_id_49942) + (v_MWidthC_1 * v_l_id_49943))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_49946 = 0; \n        v__49965[(v_l_id_49943 + (256 * v_wg_id_49942))] = doubleAndOr(v__49960, v__49951, v__49950[(v_l_id_49943 + (256 * v_wg_id_49942))], v__49952); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__49947",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49948",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49949",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49950",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49951",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49952",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49959",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__49965",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}