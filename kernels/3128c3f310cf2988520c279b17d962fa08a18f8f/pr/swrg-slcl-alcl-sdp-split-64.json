{
  "name" : "swrg-slcl-alcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__91540, const global float* restrict v__91541, const global float* restrict v__91542, const global float* restrict v__91543, float v__91544, float v__91545, global float* v__91562, global float* v__91552, local float* v__91557, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__91548; \n  float v__91553; \n  float v__81237; \n  /* Private Memory */\n  float v__91550_0;\n  \n  for (int v_wg_id_91532 = get_group_id(0); v_wg_id_91532 < v_MHeight_2; v_wg_id_91532 = (v_wg_id_91532 + get_num_groups(0))) {\n    for (int v_l_id_91533 = get_local_id(0); v_l_id_91533 < v_MWidthC_1; v_l_id_91533 = (v_l_id_91533 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_91534 = 0; v_i_91534 < 64; v_i_91534 = (1 + v_i_91534)) {\n        float v_tmp_91623 = 0.0f; \n        v__91548 = v_tmp_91623; \n        int v_index_91624 = v__91540[(v_l_id_91533 + (64 * v_MWidthC_1 * v_wg_id_91532) + (v_MWidthC_1 * v_i_91534))]; \n        if (v_index_91624 < 0) {\n          v__91550_0 = v__91548; \n        } else {\n          if (v_index_91624 >= v_VLength_3) {\n            v__91550_0 = v__91548; \n          } else {\n            v__91550_0 = v__91542[v_index_91624]; \n          }\n        }\n        v__91552[(63 + (64 * v_MWidthC_1 * v_wg_id_91532) + (-1 * v_i_91534) + (64 * v_l_id_91533))] = mult(v__91550_0, v__91541[(v_l_id_91533 + (64 * v_MWidthC_1 * v_wg_id_91532) + (v_MWidthC_1 * v_i_91534))]); \n      }\n      /* end map_seq */\n      float v_tmp_91625 = 0.0f; \n      v__91553 = v_tmp_91625; \n      /* reduce_seq */\n      for (int v_i_91535 = 0; v_i_91535 < 64; v_i_91535 = (1 + v_i_91535)) {\n        v__91553 = add(v__91553, v__91552[(v_i_91535 + (64 * v_MWidthC_1 * v_wg_id_91532) + (64 * v_l_id_91533))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91536 = 0; \n        v__91557[v_l_id_91533] = id(v__91553); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7707; \n      v_work_idx_7707 = 0; \n      int v_l_id_91537 = atomic_inc(&(v_work_idx_7707)); \n      while((v_l_id_91537 < 1)){\n        float v_tmp_91628 = 0.0f; \n        v__81237 = v_tmp_91628; \n        /* reduce_seq */\n        for (int v_i_91538 = 0; v_i_91538 < v_MWidthC_1; v_i_91538 = (1 + v_i_91538)) {\n          v__81237 = add(v__81237, v__91557[(v_i_91538 + (v_MWidthC_1 * v_l_id_91537))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_91539 = 0; \n          v__91562[v_wg_id_91532] = doubleMultiplyAdd(v__81237, v__91544, v__91543[v_wg_id_91532], v__91545); \n        }\n        /* end map_seq */\n        v_l_id_91537 = atomic_inc(&(v_work_idx_7707)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__91540",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91541",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91542",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__91543",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__91544",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__91545",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__91552",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__91562",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__91557",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}