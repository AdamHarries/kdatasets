{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__97880, const global float* restrict v__97881, const global float* restrict v__97882, const global float* restrict v__97883, float v__97884, float v__97885, global float* v__97902, global float* v__97892, local float* v__97897, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__97888; \n  float v__97893; \n  float v__81237; \n  /* Private Memory */\n  float v__97890_0;\n  \n  for (int v_wg_id_97872 = get_group_id(0); v_wg_id_97872 < v_MHeight_2; v_wg_id_97872 = (v_wg_id_97872 + get_num_groups(0))) {\n    for (int v_l_id_97873 = get_local_id(0); v_l_id_97873 < v_MWidthC_1; v_l_id_97873 = (v_l_id_97873 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_97874 = 0; v_i_97874 < 256; v_i_97874 = (1 + v_i_97874)) {\n        float v_tmp_97967 = 0.0f; \n        v__97888 = v_tmp_97967; \n        int v_index_97968 = v__97880[(v_l_id_97873 + (256 * v_MWidthC_1 * v_wg_id_97872) + (v_MWidthC_1 * v_i_97874))]; \n        if (v_index_97968 < 0) {\n          v__97890_0 = v__97888; \n        } else {\n          if (v_index_97968 >= v_VLength_3) {\n            v__97890_0 = v__97888; \n          } else {\n            v__97890_0 = v__97882[v_index_97968]; \n          }\n        }\n        v__97892[(255 + (256 * v_MWidthC_1 * v_wg_id_97872) + (-1 * v_i_97874) + (256 * v_l_id_97873))] = mult(v__97890_0, v__97881[(v_l_id_97873 + (256 * v_MWidthC_1 * v_wg_id_97872) + (v_MWidthC_1 * v_i_97874))]); \n      }\n      /* end map_seq */\n      float v_tmp_97969 = 0.0f; \n      v__97893 = v_tmp_97969; \n      /* reduce_seq */\n      for (int v_i_97875 = 0; v_i_97875 < 256; v_i_97875 = (1 + v_i_97875)) {\n        v__97893 = add(v__97893, v__97892[(v_i_97875 + (256 * v_MWidthC_1 * v_wg_id_97872) + (256 * v_l_id_97873))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97876 = 0; \n        v__97897[v_l_id_97873] = id(v__97893); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_97877 = get_local_id(0); \n      float v_tmp_97972 = 0.0f; \n      v__81237 = v_tmp_97972; \n      /* reduce_seq */\n      for (int v_i_97878 = 0; v_i_97878 < v_MWidthC_1; v_i_97878 = (1 + v_i_97878)) {\n        v__81237 = add(v__81237, v__97897[(v_i_97878 + (v_MWidthC_1 * v_l_id_97877))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97879 = 0; \n        v__97902[v_wg_id_97872] = doubleMultiplyAdd(v__81237, v__97884, v__97883[v_wg_id_97872], v__97885); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__97880",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97881",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97882",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__97883",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__97884",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__97885",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__97892",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__97902",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__97897",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}