{
  "name" : "glb-edp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__80584, const global float* restrict v__80585, const global float* restrict v__80586, const global float* restrict v__80587, float v__80588, float v__80589, global float* v__80604, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__80591; \n  float v__80594; \n  /* Private Memory */\n  float v__80596; \n  float v__80598; \n  int v__80602; \n  for (int v_gl_id_80581 = get_global_id(0); v_gl_id_80581 < v_MHeight_2; v_gl_id_80581 = (v_gl_id_80581 + get_global_size(0))) {\n    float v_tmp_80637 = 0.0f; \n    v__80591 = v_tmp_80637; \n    /* reduce_while_seq */\n    for (int v_i_80582 = 0; v_i_80582 < v_MWidthC_1; v_i_80582 = (1 + v_i_80582)) {\n      v__80602 = check(v__80591, v__80584[(v_i_80582 + (v_MWidthC_1 * v_gl_id_80581))]); \n      if (v__80602) {\n      } else {\n        break;\n      }\n      float v_tmp_80638 = 0.0f; \n      v__80594 = v_tmp_80638; \n      int v_index_80639 = v__80584[(v_i_80582 + (v_MWidthC_1 * v_gl_id_80581))]; \n      if (v_index_80639 < 0) {\n        v__80596 = v__80594; \n      } else {\n        if (v_index_80639 >= v_VLength_3) {\n          v__80596 = v__80594; \n        } else {\n          v__80596 = v__80586[v_index_80639]; \n        }\n      }\n      v__80598 = mult(v__80596, v__80585[(v_i_80582 + (v_MWidthC_1 * v_gl_id_80581))]); \n      v__80591 = add(v__80598, v__80591); \n    }\n    /* end reduce_while_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_80583 = 0; \n      v__80604[v_gl_id_80581] = doubleMultiplyAdd(v__80591, v__80588, v__80587[v_gl_id_80581], v__80589); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__80584",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__80585",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__80586",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__80587",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__80588",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__80589",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__80604",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}