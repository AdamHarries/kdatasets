{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__94548, const global float* restrict v__94549, const global float* restrict v__94550, const global float* restrict v__94551, float v__94552, float v__94553, global float* v__94570, global float* v__94560, local float* v__94565, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__94556; \n  float v__94561; \n  float v__81237; \n  /* Private Memory */\n  float v__94558_0;\n  \n  for (int v_wg_id_94540 = get_group_id(0); v_wg_id_94540 < v_MHeight_2; v_wg_id_94540 = (v_wg_id_94540 + get_num_groups(0))) {\n    for (int v_l_id_94541 = get_local_id(0); v_l_id_94541 < v_MWidthC_1; v_l_id_94541 = (v_l_id_94541 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_94542 = 0; v_i_94542 < 128; v_i_94542 = (1 + v_i_94542)) {\n        float v_tmp_94635 = 0.0f; \n        v__94556 = v_tmp_94635; \n        int v_index_94636 = v__94548[(v_l_id_94541 + (128 * v_MWidthC_1 * v_wg_id_94540) + (v_MWidthC_1 * v_i_94542))]; \n        if (v_index_94636 < 0) {\n          v__94558_0 = v__94556; \n        } else {\n          if (v_index_94636 >= v_VLength_3) {\n            v__94558_0 = v__94556; \n          } else {\n            v__94558_0 = v__94550[v_index_94636]; \n          }\n        }\n        v__94560[(127 + (128 * v_MWidthC_1 * v_wg_id_94540) + (-1 * v_i_94542) + (128 * v_l_id_94541))] = mult(v__94558_0, v__94549[(v_l_id_94541 + (128 * v_MWidthC_1 * v_wg_id_94540) + (v_MWidthC_1 * v_i_94542))]); \n      }\n      /* end map_seq */\n      float v_tmp_94637 = 0.0f; \n      v__94561 = v_tmp_94637; \n      /* reduce_seq */\n      for (int v_i_94543 = 0; v_i_94543 < 128; v_i_94543 = (1 + v_i_94543)) {\n        v__94561 = add(v__94561, v__94560[(v_i_94543 + (128 * v_MWidthC_1 * v_wg_id_94540) + (128 * v_l_id_94541))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94544 = 0; \n        v__94565[v_l_id_94541] = id(v__94561); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_94545 = get_local_id(0); \n      float v_tmp_94640 = 0.0f; \n      v__81237 = v_tmp_94640; \n      /* reduce_seq */\n      for (int v_i_94546 = 0; v_i_94546 < v_MWidthC_1; v_i_94546 = (1 + v_i_94546)) {\n        v__81237 = add(v__81237, v__94565[(v_i_94546 + (v_MWidthC_1 * v_l_id_94545))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94547 = 0; \n        v__94570[v_wg_id_94540] = doubleMultiplyAdd(v__81237, v__94552, v__94551[v_wg_id_94540], v__94553); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__94548",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94549",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94550",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__94551",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__94552",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__94553",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__94560",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__94570",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__94565",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}