{
  "name" : "glb-sdp-rsa",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nfloat id(float x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__80916, const global float* restrict v__80917, const global float* restrict v__80918, const global float* restrict v__80919, float v__80920, float v__80921, global float* v__80935, global float* v__80934, int v_MHeight_2, int v_MWidthC_1){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__80923; \n  float v__80926; \n  /* Private Memory */\n  float v__80928; \n  float v__80930; \n  for (int v_gl_id_80912 = get_global_id(0); v_gl_id_80912 < v_MHeight_2; v_gl_id_80912 = (v_gl_id_80912 + get_global_size(0))) {\n    float v_tmp_80960 = 0.0f; \n    v__80923 = v_tmp_80960; \n    /* reduce_seq */\n    int v_stop_80961 = min(v__80916[(1 + (v__80916[v_gl_id_80912] / 4))], ((global int*)(v__80917 + (((global int*)(v__80917))[v_gl_id_80912] / 4)))[1]); \n    for (int v_i_80913 = 0; v_i_80913 < v_stop_80961; v_i_80913 = (1 + v_i_80913)) {\n      float v_tmp_80969 = 0.0f; \n      v__80926 = v_tmp_80969; \n      int v_index_80971 = v__80916[(2 + v_i_80913 + (v__80916[v_gl_id_80912] / 4))]; \n      if (v_index_80971 < 0) {\n        v__80928 = v__80926; \n      } else {\n        if (v_index_80971 >= v_MWidthC_1) {\n          v__80928 = v__80926; \n        } else {\n          v__80928 = v__80918[v_index_80971]; \n        }\n      }\n      v__80930 = mult(v__80917[(2 + v_i_80913 + (((global int*)(v__80917))[v_gl_id_80912] / 4))], v__80928); \n      v__80923 = add(v__80923, v__80930); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_80914 = 0; \n      v__80934[v_gl_id_80912] = doubleMultiplyAdd(v__80923, v__80920, v__80919[v_gl_id_80912], v__80921); \n    }\n    /* end map_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_80915 = 0; \n      v__80935[v_gl_id_80912] = id(v__80934[v_gl_id_80912]); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "arrayType" : "ragged"
  },
  "inputArgs" : [ {
    "variable" : "v__80916",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__80917",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__80918",
    "addressSpace" : "global",
    "size" : "(4*v_MWidthC_1)"
  }, {
    "variable" : "v__80919",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__80920",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__80921",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__80934",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  } ],
  "outputArg" : {
    "variable" : "v__80935",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC" ],
  "outputSize" : "(4*v_MHeight_2)"
}