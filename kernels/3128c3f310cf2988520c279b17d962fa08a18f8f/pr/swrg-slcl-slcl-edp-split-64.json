{
  "name" : "swrg-slcl-slcl-edp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nfloat id(float x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__91428, const global float* restrict v__91429, const global float* restrict v__91430, const global float* restrict v__91431, float v__91432, float v__91433, global float* v__91452, local float* v__91447, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__91436; \n  float v__91438; \n  float v__81237; \n  /* Private Memory */\n  float v__91440_0;\n  \n  float v__91442_0;\n  \n  int v__91446_0;\n  \n  for (int v_wg_id_91421 = get_group_id(0); v_wg_id_91421 < v_MHeight_2; v_wg_id_91421 = (v_wg_id_91421 + get_num_groups(0))) {\n    for (int v_l_id_91422 = get_local_id(0); v_l_id_91422 < v_MWidthC_1; v_l_id_91422 = (v_l_id_91422 + get_local_size(0))) {\n      float v_tmp_91520 = 0.0f; \n      v__91436 = v_tmp_91520; \n      /* reduce_while_seq */\n      for (int v_i_91423 = 0; v_i_91423 < 64; v_i_91423 = (1 + v_i_91423)) {\n        v__91446_0 = check(v__91436, v__91428[(v_l_id_91422 + (64 * v_MWidthC_1 * v_wg_id_91421) + (v_MWidthC_1 * v_i_91423))]); \n        if (v__91446_0) {\n        } else {\n          break;\n        }\n        float v_tmp_91521 = 0.0f; \n        v__91438 = v_tmp_91521; \n        int v_index_91522 = v__91428[(v_l_id_91422 + (64 * v_MWidthC_1 * v_wg_id_91421) + (v_MWidthC_1 * v_i_91423))]; \n        if (v_index_91522 < 0) {\n          v__91440_0 = v__91438; \n        } else {\n          if (v_index_91522 >= v_VLength_3) {\n            v__91440_0 = v__91438; \n          } else {\n            v__91440_0 = v__91430[v_index_91522]; \n          }\n        }\n        v__91442_0 = mult(v__91440_0, v__91429[(v_l_id_91422 + (64 * v_MWidthC_1 * v_wg_id_91421) + (v_MWidthC_1 * v_i_91423))]); \n        v__91436 = add(v__91442_0, v__91436); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91424 = 0; \n        v__91447[v_l_id_91422] = id(v__91436); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_91425 = get_local_id(0); \n      float v_tmp_91525 = 0.0f; \n      v__81237 = v_tmp_91525; \n      /* reduce_seq */\n      for (int v_i_91426 = 0; v_i_91426 < v_MWidthC_1; v_i_91426 = (1 + v_i_91426)) {\n        v__81237 = add(v__81237, v__91447[(v_i_91426 + (v_MWidthC_1 * v_l_id_91425))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91427 = 0; \n        v__91452[v_wg_id_91421] = doubleMultiplyAdd(v__81237, v__91432, v__91431[v_wg_id_91421], v__91433); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__91428",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91429",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91430",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__91431",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__91432",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__91433",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__91452",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__91447",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}