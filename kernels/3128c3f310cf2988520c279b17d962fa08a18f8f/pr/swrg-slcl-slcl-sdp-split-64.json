{
  "name" : "swrg-slcl-slcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__91216, const global float* restrict v__91217, const global float* restrict v__91218, const global float* restrict v__91219, float v__91220, float v__91221, global float* v__91238, global float* v__91228, local float* v__91233, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__91224; \n  float v__91229; \n  float v__81237; \n  /* Private Memory */\n  float v__91226_0;\n  \n  for (int v_wg_id_91208 = get_group_id(0); v_wg_id_91208 < v_MHeight_2; v_wg_id_91208 = (v_wg_id_91208 + get_num_groups(0))) {\n    for (int v_l_id_91209 = get_local_id(0); v_l_id_91209 < v_MWidthC_1; v_l_id_91209 = (v_l_id_91209 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_91210 = 0; v_i_91210 < 64; v_i_91210 = (1 + v_i_91210)) {\n        float v_tmp_91303 = 0.0f; \n        v__91224 = v_tmp_91303; \n        int v_index_91304 = v__91216[(v_l_id_91209 + (64 * v_MWidthC_1 * v_wg_id_91208) + (v_MWidthC_1 * v_i_91210))]; \n        if (v_index_91304 < 0) {\n          v__91226_0 = v__91224; \n        } else {\n          if (v_index_91304 >= v_VLength_3) {\n            v__91226_0 = v__91224; \n          } else {\n            v__91226_0 = v__91218[v_index_91304]; \n          }\n        }\n        v__91228[(63 + (64 * v_MWidthC_1 * v_wg_id_91208) + (-1 * v_i_91210) + (64 * v_l_id_91209))] = mult(v__91226_0, v__91217[(v_l_id_91209 + (64 * v_MWidthC_1 * v_wg_id_91208) + (v_MWidthC_1 * v_i_91210))]); \n      }\n      /* end map_seq */\n      float v_tmp_91305 = 0.0f; \n      v__91229 = v_tmp_91305; \n      /* reduce_seq */\n      for (int v_i_91211 = 0; v_i_91211 < 64; v_i_91211 = (1 + v_i_91211)) {\n        v__91229 = add(v__91229, v__91228[(v_i_91211 + (64 * v_MWidthC_1 * v_wg_id_91208) + (64 * v_l_id_91209))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91212 = 0; \n        v__91233[v_l_id_91209] = id(v__91229); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_91213 = get_local_id(0); \n      float v_tmp_91308 = 0.0f; \n      v__81237 = v_tmp_91308; \n      /* reduce_seq */\n      for (int v_i_91214 = 0; v_i_91214 < v_MWidthC_1; v_i_91214 = (1 + v_i_91214)) {\n        v__81237 = add(v__81237, v__91233[(v_i_91214 + (v_MWidthC_1 * v_l_id_91213))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91215 = 0; \n        v__91238[v_wg_id_91208] = doubleMultiplyAdd(v__81237, v__91220, v__91219[v_wg_id_91208], v__91221); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__91216",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91217",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91218",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__91219",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__91220",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__91221",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__91228",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__91238",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__91233",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}