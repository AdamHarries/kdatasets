{
  "name" : "swrg-alcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__102460, const global float* restrict v__102461, const global float* restrict v__102462, const global float* restrict v__102463, float v__102464, float v__102465, global float* v__102482, local float* v__102477, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__102468; \n  float v__102470; \n  float v__81237; \n  /* Private Memory */\n  float v__102472_0;\n  \n  float v__102474_0;\n  \n  for (int v_wg_id_102453 = get_group_id(0); v_wg_id_102453 < v_MHeight_2; v_wg_id_102453 = (v_wg_id_102453 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_8734; \n      v_work_idx_8734 = 0; \n      int v_l_id_102454 = atomic_inc(&(v_work_idx_8734)); \n      while((v_l_id_102454 < v_MWidthC_1)){\n        float v_tmp_102535 = 0.0f; \n        v__102468 = v_tmp_102535; \n        /* reduce_seq */\n        for (int v_i_102455 = 0; v_i_102455 < 512; v_i_102455 = (1 + v_i_102455)) {\n          float v_tmp_102536 = 0.0f; \n          v__102470 = v_tmp_102536; \n          int v_index_102537 = v__102460[(v_l_id_102454 + (512 * v_MWidthC_1 * v_wg_id_102453) + (v_MWidthC_1 * v_i_102455))]; \n          if (v_index_102537 < 0) {\n            v__102472_0 = v__102470; \n          } else {\n            if (v_index_102537 >= v_VLength_3) {\n              v__102472_0 = v__102470; \n            } else {\n              v__102472_0 = v__102462[v_index_102537]; \n            }\n          }\n          v__102474_0 = mult(v__102472_0, v__102461[(v_l_id_102454 + (512 * v_MWidthC_1 * v_wg_id_102453) + (v_MWidthC_1 * v_i_102455))]); \n          v__102468 = add(v__102474_0, v__102468); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_102456 = 0; \n          v__102477[v_l_id_102454] = id(v__102468); \n        }\n        /* end map_seq */\n        v_l_id_102454 = atomic_inc(&(v_work_idx_8734)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_8729; \n      v_work_idx_8729 = 0; \n      int v_l_id_102457 = atomic_inc(&(v_work_idx_8729)); \n      while((v_l_id_102457 < 1)){\n        float v_tmp_102540 = 0.0f; \n        v__81237 = v_tmp_102540; \n        /* reduce_seq */\n        for (int v_i_102458 = 0; v_i_102458 < v_MWidthC_1; v_i_102458 = (1 + v_i_102458)) {\n          v__81237 = add(v__81237, v__102477[(v_i_102458 + (v_MWidthC_1 * v_l_id_102457))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_102459 = 0; \n          v__102482[v_wg_id_102453] = doubleMultiplyAdd(v__81237, v__102464, v__102463[v_wg_id_102453], v__102465); \n        }\n        /* end map_seq */\n        v_l_id_102457 = atomic_inc(&(v_work_idx_8729)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__102460",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__102461",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__102462",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__102463",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__102464",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__102465",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__102482",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__102477",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}