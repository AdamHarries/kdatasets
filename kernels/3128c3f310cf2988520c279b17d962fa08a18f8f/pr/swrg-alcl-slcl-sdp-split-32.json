{
  "name" : "swrg-alcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__88738, const global float* restrict v__88739, const global float* restrict v__88740, const global float* restrict v__88741, float v__88742, float v__88743, global float* v__88760, global float* v__88750, local float* v__88755, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__88746; \n  float v__88751; \n  float v__81237; \n  /* Private Memory */\n  float v__88748_0;\n  \n  for (int v_wg_id_88730 = get_group_id(0); v_wg_id_88730 < v_MHeight_2; v_wg_id_88730 = (v_wg_id_88730 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_7447; \n      v_work_idx_7447 = 0; \n      int v_l_id_88731 = atomic_inc(&(v_work_idx_7447)); \n      while((v_l_id_88731 < v_MWidthC_1)){\n        /* map_seq */\n        for (int v_i_88732 = 0; v_i_88732 < 32; v_i_88732 = (1 + v_i_88732)) {\n          float v_tmp_88817 = 0.0f; \n          v__88746 = v_tmp_88817; \n          int v_index_88818 = v__88738[(v_l_id_88731 + (32 * v_MWidthC_1 * v_wg_id_88730) + (v_MWidthC_1 * v_i_88732))]; \n          if (v_index_88818 < 0) {\n            v__88748_0 = v__88746; \n          } else {\n            if (v_index_88818 >= v_VLength_3) {\n              v__88748_0 = v__88746; \n            } else {\n              v__88748_0 = v__88740[v_index_88818]; \n            }\n          }\n          v__88750[(31 + (32 * v_MWidthC_1 * v_wg_id_88730) + (-1 * v_i_88732) + (32 * v_l_id_88731))] = mult(v__88748_0, v__88739[(v_l_id_88731 + (32 * v_MWidthC_1 * v_wg_id_88730) + (v_MWidthC_1 * v_i_88732))]); \n        }\n        /* end map_seq */\n        float v_tmp_88819 = 0.0f; \n        v__88751 = v_tmp_88819; \n        /* reduce_seq */\n        for (int v_i_88733 = 0; v_i_88733 < 32; v_i_88733 = (1 + v_i_88733)) {\n          v__88751 = add(v__88751, v__88750[(v_i_88733 + (32 * v_MWidthC_1 * v_wg_id_88730) + (32 * v_l_id_88731))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_88734 = 0; \n          v__88755[v_l_id_88731] = id(v__88751); \n        }\n        /* end map_seq */\n        v_l_id_88731 = atomic_inc(&(v_work_idx_7447)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_88735 = get_local_id(0); \n      float v_tmp_88822 = 0.0f; \n      v__81237 = v_tmp_88822; \n      /* reduce_seq */\n      for (int v_i_88736 = 0; v_i_88736 < v_MWidthC_1; v_i_88736 = (1 + v_i_88736)) {\n        v__81237 = add(v__81237, v__88755[(v_i_88736 + (v_MWidthC_1 * v_l_id_88735))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_88737 = 0; \n        v__88760[v_wg_id_88730] = doubleMultiplyAdd(v__81237, v__88742, v__88741[v_wg_id_88730], v__88743); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__88738",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__88739",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__88740",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__88741",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__88742",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__88743",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__88750",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__88760",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__88755",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}