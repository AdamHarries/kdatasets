{
  "name" : "swrg-alcl-slcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__102164, const global float* restrict v__102165, const global float* restrict v__102166, const global float* restrict v__102167, float v__102168, float v__102169, global float* v__102186, local float* v__102181, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__102172; \n  float v__102174; \n  float v__81237; \n  /* Private Memory */\n  float v__102176_0;\n  \n  float v__102178_0;\n  \n  for (int v_wg_id_102157 = get_group_id(0); v_wg_id_102157 < v_MHeight_2; v_wg_id_102157 = (v_wg_id_102157 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_8704; \n      v_work_idx_8704 = 0; \n      int v_l_id_102158 = atomic_inc(&(v_work_idx_8704)); \n      while((v_l_id_102158 < v_MWidthC_1)){\n        float v_tmp_102243 = 0.0f; \n        v__102172 = v_tmp_102243; \n        /* reduce_seq */\n        for (int v_i_102159 = 0; v_i_102159 < 512; v_i_102159 = (1 + v_i_102159)) {\n          float v_tmp_102244 = 0.0f; \n          v__102174 = v_tmp_102244; \n          int v_index_102245 = v__102164[(v_l_id_102158 + (512 * v_MWidthC_1 * v_wg_id_102157) + (v_MWidthC_1 * v_i_102159))]; \n          if (v_index_102245 < 0) {\n            v__102176_0 = v__102174; \n          } else {\n            if (v_index_102245 >= v_VLength_3) {\n              v__102176_0 = v__102174; \n            } else {\n              v__102176_0 = v__102166[v_index_102245]; \n            }\n          }\n          v__102178_0 = mult(v__102176_0, v__102165[(v_l_id_102158 + (512 * v_MWidthC_1 * v_wg_id_102157) + (v_MWidthC_1 * v_i_102159))]); \n          v__102172 = add(v__102178_0, v__102172); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_102160 = 0; \n          v__102181[v_l_id_102158] = id(v__102172); \n        }\n        /* end map_seq */\n        v_l_id_102158 = atomic_inc(&(v_work_idx_8704)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_102161 = get_local_id(0); \n      float v_tmp_102248 = 0.0f; \n      v__81237 = v_tmp_102248; \n      /* reduce_seq */\n      for (int v_i_102162 = 0; v_i_102162 < v_MWidthC_1; v_i_102162 = (1 + v_i_102162)) {\n        v__81237 = add(v__81237, v__102181[(v_i_102162 + (v_MWidthC_1 * v_l_id_102161))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_102163 = 0; \n        v__102186[v_wg_id_102157] = doubleMultiplyAdd(v__81237, v__102168, v__102167[v_wg_id_102157], v__102169); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__102164",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__102165",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__102166",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__102167",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__102168",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__102169",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__102186",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__102181",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}