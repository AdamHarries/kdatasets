{
  "name" : "swrg-slcl-slcl-fdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__97986, const global float* restrict v__97987, const global float* restrict v__97988, const global float* restrict v__97989, float v__97990, float v__97991, global float* v__98008, local float* v__98003, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__97994; \n  float v__97996; \n  float v__81237; \n  /* Private Memory */\n  float v__97998_0;\n  \n  float v__98000_0;\n  \n  for (int v_wg_id_97979 = get_group_id(0); v_wg_id_97979 < v_MHeight_2; v_wg_id_97979 = (v_wg_id_97979 + get_num_groups(0))) {\n    for (int v_l_id_97980 = get_local_id(0); v_l_id_97980 < v_MWidthC_1; v_l_id_97980 = (v_l_id_97980 + get_local_size(0))) {\n      float v_tmp_98073 = 0.0f; \n      v__97994 = v_tmp_98073; \n      /* reduce_seq */\n      for (int v_i_97981 = 0; v_i_97981 < 256; v_i_97981 = (1 + v_i_97981)) {\n        float v_tmp_98074 = 0.0f; \n        v__97996 = v_tmp_98074; \n        int v_index_98075 = v__97986[(v_l_id_97980 + (256 * v_MWidthC_1 * v_wg_id_97979) + (v_MWidthC_1 * v_i_97981))]; \n        if (v_index_98075 < 0) {\n          v__97998_0 = v__97996; \n        } else {\n          if (v_index_98075 >= v_VLength_3) {\n            v__97998_0 = v__97996; \n          } else {\n            v__97998_0 = v__97988[v_index_98075]; \n          }\n        }\n        v__98000_0 = mult(v__97998_0, v__97987[(v_l_id_97980 + (256 * v_MWidthC_1 * v_wg_id_97979) + (v_MWidthC_1 * v_i_97981))]); \n        v__97994 = add(v__98000_0, v__97994); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97982 = 0; \n        v__98003[v_l_id_97980] = id(v__97994); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_97983 = get_local_id(0); \n      float v_tmp_98078 = 0.0f; \n      v__81237 = v_tmp_98078; \n      /* reduce_seq */\n      for (int v_i_97984 = 0; v_i_97984 < v_MWidthC_1; v_i_97984 = (1 + v_i_97984)) {\n        v__81237 = add(v__81237, v__98003[(v_i_97984 + (v_MWidthC_1 * v_l_id_97983))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97985 = 0; \n        v__98008[v_wg_id_97979] = doubleMultiplyAdd(v__81237, v__97990, v__97989[v_wg_id_97979], v__97991); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__97986",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97987",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97988",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__97989",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__97990",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__97991",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__98008",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__98003",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}