{
  "name" : "awrg-alcl-sdp-chunk-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__93515, const global float* restrict v__93516, const global float* restrict v__93517, const global float* restrict v__93518, float v__93519, float v__93520, global float* v__93534, global float* v__93528, global int* v__93522, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__93524; \n  float v__93529; \n  /* Private Memory */\n  float v__93526_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_7895 = v__93522; \n    local int v_w_id_93510; \n    if (get_local_id(0) == 0) {\n      v_w_id_93510 = atomic_inc(v_work_idx_7895); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_93510 < ((v_MHeight_2)/(64)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_7893; \n        v_work_idx_7893 = 0; \n        int v_l_id_93511 = atomic_inc(&(v_work_idx_7893)); \n        while((v_l_id_93511 < 64)){\n          /* map_seq */\n          for (int v_i_93512 = 0; v_i_93512 < v_MWidthC_1; v_i_93512 = (1 + v_i_93512)) {\n            float v_tmp_93573 = 0.0f; \n            v__93524 = v_tmp_93573; \n            int v_index_93574 = v__93515[(v_i_93512 + (64 * v_MWidthC_1 * v_w_id_93510) + (v_MWidthC_1 * v_l_id_93511))]; \n            if (v_index_93574 < 0) {\n              v__93526_0 = v__93524; \n            } else {\n              if (v_index_93574 >= v_VLength_3) {\n                v__93526_0 = v__93524; \n              } else {\n                v__93526_0 = v__93517[v_index_93574]; \n              }\n            }\n            v__93528[(-1 + v_MWidthC_1 + (64 * v_MWidthC_1 * v_w_id_93510) + (-1 * v_i_93512) + (v_MWidthC_1 * v_l_id_93511))] = mult(v__93526_0, v__93516[(v_i_93512 + (64 * v_MWidthC_1 * v_w_id_93510) + (v_MWidthC_1 * v_l_id_93511))]); \n          }\n          /* end map_seq */\n          float v_tmp_93575 = 0.0f; \n          v__93529 = v_tmp_93575; \n          /* reduce_seq */\n          for (int v_i_93513 = 0; v_i_93513 < v_MWidthC_1; v_i_93513 = (1 + v_i_93513)) {\n            v__93529 = add(v__93529, v__93528[(v_i_93513 + (64 * v_MWidthC_1 * v_w_id_93510) + (v_MWidthC_1 * v_l_id_93511))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_93514 = 0; \n            v__93534[(v_l_id_93511 + (64 * v_w_id_93510))] = doubleMultiplyAdd(v__93529, v__93519, v__93518[(v_l_id_93511 + (64 * v_w_id_93510))], v__93520); \n          }\n          /* end map_seq */\n          v_l_id_93511 = atomic_inc(&(v_work_idx_7893)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_93510 = atomic_inc(v_work_idx_7895); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "64",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__93515",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__93516",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__93517",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__93518",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__93519",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__93520",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__93528",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__93522",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__93534",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}