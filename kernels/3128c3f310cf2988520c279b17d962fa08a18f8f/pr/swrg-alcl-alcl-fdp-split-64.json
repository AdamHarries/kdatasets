{
  "name" : "swrg-alcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__92464, const global float* restrict v__92465, const global float* restrict v__92466, const global float* restrict v__92467, float v__92468, float v__92469, global float* v__92486, local float* v__92481, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__92472; \n  float v__92474; \n  float v__81237; \n  /* Private Memory */\n  float v__92476_0;\n  \n  float v__92478_0;\n  \n  for (int v_wg_id_92457 = get_group_id(0); v_wg_id_92457 < v_MHeight_2; v_wg_id_92457 = (v_wg_id_92457 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_7798; \n      v_work_idx_7798 = 0; \n      int v_l_id_92458 = atomic_inc(&(v_work_idx_7798)); \n      while((v_l_id_92458 < v_MWidthC_1)){\n        float v_tmp_92539 = 0.0f; \n        v__92472 = v_tmp_92539; \n        /* reduce_seq */\n        for (int v_i_92459 = 0; v_i_92459 < 64; v_i_92459 = (1 + v_i_92459)) {\n          float v_tmp_92540 = 0.0f; \n          v__92474 = v_tmp_92540; \n          int v_index_92541 = v__92464[(v_l_id_92458 + (64 * v_MWidthC_1 * v_wg_id_92457) + (v_MWidthC_1 * v_i_92459))]; \n          if (v_index_92541 < 0) {\n            v__92476_0 = v__92474; \n          } else {\n            if (v_index_92541 >= v_VLength_3) {\n              v__92476_0 = v__92474; \n            } else {\n              v__92476_0 = v__92466[v_index_92541]; \n            }\n          }\n          v__92478_0 = mult(v__92476_0, v__92465[(v_l_id_92458 + (64 * v_MWidthC_1 * v_wg_id_92457) + (v_MWidthC_1 * v_i_92459))]); \n          v__92472 = add(v__92478_0, v__92472); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92460 = 0; \n          v__92481[v_l_id_92458] = id(v__92472); \n        }\n        /* end map_seq */\n        v_l_id_92458 = atomic_inc(&(v_work_idx_7798)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7793; \n      v_work_idx_7793 = 0; \n      int v_l_id_92461 = atomic_inc(&(v_work_idx_7793)); \n      while((v_l_id_92461 < 1)){\n        float v_tmp_92544 = 0.0f; \n        v__81237 = v_tmp_92544; \n        /* reduce_seq */\n        for (int v_i_92462 = 0; v_i_92462 < v_MWidthC_1; v_i_92462 = (1 + v_i_92462)) {\n          v__81237 = add(v__81237, v__92481[(v_i_92462 + (v_MWidthC_1 * v_l_id_92461))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92463 = 0; \n          v__92486[v_wg_id_92457] = doubleMultiplyAdd(v__81237, v__92468, v__92467[v_wg_id_92457], v__92469); \n        }\n        /* end map_seq */\n        v_l_id_92461 = atomic_inc(&(v_work_idx_7793)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__92464",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92465",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92466",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__92467",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__92468",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__92469",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__92486",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__92481",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}