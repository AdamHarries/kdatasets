{
  "name" : "swrg-slcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__87884, const global float* restrict v__87885, const global float* restrict v__87886, const global float* restrict v__87887, float v__87888, float v__87889, global float* v__87906, global float* v__87896, local float* v__87901, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__87892; \n  float v__87897; \n  float v__81237; \n  /* Private Memory */\n  float v__87894_0;\n  \n  for (int v_wg_id_87876 = get_group_id(0); v_wg_id_87876 < v_MHeight_2; v_wg_id_87876 = (v_wg_id_87876 + get_num_groups(0))) {\n    for (int v_l_id_87877 = get_local_id(0); v_l_id_87877 < v_MWidthC_1; v_l_id_87877 = (v_l_id_87877 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_87878 = 0; v_i_87878 < 32; v_i_87878 = (1 + v_i_87878)) {\n        float v_tmp_87971 = 0.0f; \n        v__87892 = v_tmp_87971; \n        int v_index_87972 = v__87884[(v_l_id_87877 + (32 * v_MWidthC_1 * v_wg_id_87876) + (v_MWidthC_1 * v_i_87878))]; \n        if (v_index_87972 < 0) {\n          v__87894_0 = v__87892; \n        } else {\n          if (v_index_87972 >= v_VLength_3) {\n            v__87894_0 = v__87892; \n          } else {\n            v__87894_0 = v__87886[v_index_87972]; \n          }\n        }\n        v__87896[(31 + (32 * v_MWidthC_1 * v_wg_id_87876) + (-1 * v_i_87878) + (32 * v_l_id_87877))] = mult(v__87894_0, v__87885[(v_l_id_87877 + (32 * v_MWidthC_1 * v_wg_id_87876) + (v_MWidthC_1 * v_i_87878))]); \n      }\n      /* end map_seq */\n      float v_tmp_87973 = 0.0f; \n      v__87897 = v_tmp_87973; \n      /* reduce_seq */\n      for (int v_i_87879 = 0; v_i_87879 < 32; v_i_87879 = (1 + v_i_87879)) {\n        v__87897 = add(v__87897, v__87896[(v_i_87879 + (32 * v_MWidthC_1 * v_wg_id_87876) + (32 * v_l_id_87877))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_87880 = 0; \n        v__87901[v_l_id_87877] = id(v__87897); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_87881 = get_local_id(0); \n      float v_tmp_87976 = 0.0f; \n      v__81237 = v_tmp_87976; \n      /* reduce_seq */\n      for (int v_i_87882 = 0; v_i_87882 < v_MWidthC_1; v_i_87882 = (1 + v_i_87882)) {\n        v__81237 = add(v__81237, v__87901[(v_i_87882 + (v_MWidthC_1 * v_l_id_87881))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_87883 = 0; \n        v__87906[v_wg_id_87876] = doubleMultiplyAdd(v__81237, v__87888, v__87887[v_wg_id_87876], v__87889); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__87884",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__87885",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__87886",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__87887",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__87888",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__87889",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__87896",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__87906",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__87901",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}