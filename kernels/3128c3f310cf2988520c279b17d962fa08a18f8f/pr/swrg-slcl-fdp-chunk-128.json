{
  "name" : "swrg-slcl-fdp-chunk-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__94390, const global float* restrict v__94391, const global float* restrict v__94392, const global float* restrict v__94393, float v__94394, float v__94395, global float* v__94408, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__94398; \n  float v__94400; \n  /* Private Memory */\n  float v__94402_0;\n  \n  float v__94404_0;\n  \n  for (int v_wg_id_94386 = get_group_id(0); v_wg_id_94386 < ((v_MHeight_2)/(128)); v_wg_id_94386 = (v_wg_id_94386 + get_num_groups(0))) {\n    for (int v_l_id_94387 = get_local_id(0); v_l_id_94387 < 128; v_l_id_94387 = (v_l_id_94387 + get_local_size(0))) {\n      float v_tmp_94450 = 0.0f; \n      v__94398 = v_tmp_94450; \n      /* reduce_seq */\n      for (int v_i_94388 = 0; v_i_94388 < v_MWidthC_1; v_i_94388 = (1 + v_i_94388)) {\n        float v_tmp_94451 = 0.0f; \n        v__94400 = v_tmp_94451; \n        int v_index_94452 = v__94390[(v_i_94388 + (128 * v_MWidthC_1 * v_wg_id_94386) + (v_MWidthC_1 * v_l_id_94387))]; \n        if (v_index_94452 < 0) {\n          v__94402_0 = v__94400; \n        } else {\n          if (v_index_94452 >= v_VLength_3) {\n            v__94402_0 = v__94400; \n          } else {\n            v__94402_0 = v__94392[v_index_94452]; \n          }\n        }\n        v__94404_0 = mult(v__94402_0, v__94391[(v_i_94388 + (128 * v_MWidthC_1 * v_wg_id_94386) + (v_MWidthC_1 * v_l_id_94387))]); \n        v__94398 = add(v__94404_0, v__94398); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94389 = 0; \n        v__94408[(v_l_id_94387 + (128 * v_wg_id_94386))] = doubleMultiplyAdd(v__94398, v__94394, v__94393[(v_l_id_94387 + (128 * v_wg_id_94386))], v__94395); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "128",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__94390",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94391",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94392",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__94393",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__94394",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__94395",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__94408",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}