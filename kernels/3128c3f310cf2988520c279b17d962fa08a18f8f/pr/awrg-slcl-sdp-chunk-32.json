{
  "name" : "awrg-slcl-sdp-chunk-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__89323, const global float* restrict v__89324, const global float* restrict v__89325, const global float* restrict v__89326, float v__89327, float v__89328, global float* v__89342, global float* v__89336, global int* v__89330, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__89332; \n  float v__89337; \n  /* Private Memory */\n  float v__89334_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_7504 = v__89330; \n    local int v_w_id_89318; \n    if (get_local_id(0) == 0) {\n      v_w_id_89318 = atomic_inc(v_work_idx_7504); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_89318 < ((v_MHeight_2)/(32)))){\n      for (int v_l_id_89319 = get_local_id(0); v_l_id_89319 < 32; v_l_id_89319 = (v_l_id_89319 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_89320 = 0; v_i_89320 < v_MWidthC_1; v_i_89320 = (1 + v_i_89320)) {\n          float v_tmp_89385 = 0.0f; \n          v__89332 = v_tmp_89385; \n          int v_index_89386 = v__89323[(v_i_89320 + (32 * v_MWidthC_1 * v_w_id_89318) + (v_MWidthC_1 * v_l_id_89319))]; \n          if (v_index_89386 < 0) {\n            v__89334_0 = v__89332; \n          } else {\n            if (v_index_89386 >= v_VLength_3) {\n              v__89334_0 = v__89332; \n            } else {\n              v__89334_0 = v__89325[v_index_89386]; \n            }\n          }\n          v__89336[(-1 + v_MWidthC_1 + (32 * v_MWidthC_1 * v_w_id_89318) + (-1 * v_i_89320) + (v_MWidthC_1 * v_l_id_89319))] = mult(v__89334_0, v__89324[(v_i_89320 + (32 * v_MWidthC_1 * v_w_id_89318) + (v_MWidthC_1 * v_l_id_89319))]); \n        }\n        /* end map_seq */\n        float v_tmp_89387 = 0.0f; \n        v__89337 = v_tmp_89387; \n        /* reduce_seq */\n        for (int v_i_89321 = 0; v_i_89321 < v_MWidthC_1; v_i_89321 = (1 + v_i_89321)) {\n          v__89337 = add(v__89337, v__89336[(v_i_89321 + (32 * v_MWidthC_1 * v_w_id_89318) + (v_MWidthC_1 * v_l_id_89319))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_89322 = 0; \n          v__89342[(v_l_id_89319 + (32 * v_w_id_89318))] = doubleMultiplyAdd(v__89337, v__89327, v__89326[(v_l_id_89319 + (32 * v_w_id_89318))], v__89328); \n        }\n        /* end map_seq */\n      }\n      if (get_local_id(0) == 0) {\n        v_w_id_89318 = atomic_inc(v_work_idx_7504); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__89323",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__89324",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__89325",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__89326",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__89327",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__89328",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__89336",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__89330",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__89342",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}