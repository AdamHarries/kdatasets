{
  "name" : "swrg-slcl-slcl-fdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__94654, const global float* restrict v__94655, const global float* restrict v__94656, const global float* restrict v__94657, float v__94658, float v__94659, global float* v__94676, local float* v__94671, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__94662; \n  float v__94664; \n  float v__81237; \n  /* Private Memory */\n  float v__94666_0;\n  \n  float v__94668_0;\n  \n  for (int v_wg_id_94647 = get_group_id(0); v_wg_id_94647 < v_MHeight_2; v_wg_id_94647 = (v_wg_id_94647 + get_num_groups(0))) {\n    for (int v_l_id_94648 = get_local_id(0); v_l_id_94648 < v_MWidthC_1; v_l_id_94648 = (v_l_id_94648 + get_local_size(0))) {\n      float v_tmp_94741 = 0.0f; \n      v__94662 = v_tmp_94741; \n      /* reduce_seq */\n      for (int v_i_94649 = 0; v_i_94649 < 128; v_i_94649 = (1 + v_i_94649)) {\n        float v_tmp_94742 = 0.0f; \n        v__94664 = v_tmp_94742; \n        int v_index_94743 = v__94654[(v_l_id_94648 + (128 * v_MWidthC_1 * v_wg_id_94647) + (v_MWidthC_1 * v_i_94649))]; \n        if (v_index_94743 < 0) {\n          v__94666_0 = v__94664; \n        } else {\n          if (v_index_94743 >= v_VLength_3) {\n            v__94666_0 = v__94664; \n          } else {\n            v__94666_0 = v__94656[v_index_94743]; \n          }\n        }\n        v__94668_0 = mult(v__94666_0, v__94655[(v_l_id_94648 + (128 * v_MWidthC_1 * v_wg_id_94647) + (v_MWidthC_1 * v_i_94649))]); \n        v__94662 = add(v__94668_0, v__94662); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94650 = 0; \n        v__94671[v_l_id_94648] = id(v__94662); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_94651 = get_local_id(0); \n      float v_tmp_94746 = 0.0f; \n      v__81237 = v_tmp_94746; \n      /* reduce_seq */\n      for (int v_i_94652 = 0; v_i_94652 < v_MWidthC_1; v_i_94652 = (1 + v_i_94652)) {\n        v__81237 = add(v__81237, v__94671[(v_i_94652 + (v_MWidthC_1 * v_l_id_94651))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94653 = 0; \n        v__94676[v_wg_id_94647] = doubleMultiplyAdd(v__81237, v__94658, v__94657[v_wg_id_94647], v__94659); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__94654",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94655",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94656",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__94657",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__94658",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__94659",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__94676",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__94671",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}