{
  "name" : "awrg-alcl-slcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__42902, const global int* restrict v__42903, const global int* restrict v__42904, const global int* restrict v__42905, int v__42906, int v__42907, global int* v__42927, global int* v__42909, local int* v__42922, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__42911; \n  int v__42913; \n  int v__33541; \n  /* Private Memory */\n  int v__42915_0;\n  \n  int v__42917_0;\n  \n  int v__42921_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3174 = v__42909; \n    local int v_w_id_42895; \n    if (get_local_id(0) == 0) {\n      v_w_id_42895 = atomic_inc(v_work_idx_3174); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42895 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3172; \n        v_work_idx_3172 = 0; \n        int v_l_id_42896 = atomic_inc(&(v_work_idx_3172)); \n        while((v_l_id_42896 < v_MWidthC_1)){\n          int v_tmp_42985 = 0; \n          v__42911 = v_tmp_42985; \n          /* reduce_while_seq */\n          for (int v_i_42897 = 0; v_i_42897 < 32; v_i_42897 = (1 + v_i_42897)) {\n            v__42921_0 = check(v__42911, v__42902[(v_l_id_42896 + (32 * v_MWidthC_1 * v_w_id_42895) + (v_MWidthC_1 * v_i_42897))]); \n            if (v__42921_0) {\n            } else {\n              break;\n            }\n            int v_tmp_42986 = 0; \n            v__42913 = v_tmp_42986; \n            int v_index_42987 = v__42902[(v_l_id_42896 + (32 * v_MWidthC_1 * v_w_id_42895) + (v_MWidthC_1 * v_i_42897))]; \n            if (v_index_42987 < 0) {\n              v__42915_0 = v__42913; \n            } else {\n              if (v_index_42987 >= v_VLength_3) {\n                v__42915_0 = v__42913; \n              } else {\n                v__42915_0 = v__42904[v_index_42987]; \n              }\n            }\n            v__42917_0 = bool_and(v__42915_0, v__42903[(v_l_id_42896 + (32 * v_MWidthC_1 * v_w_id_42895) + (v_MWidthC_1 * v_i_42897))]); \n            v__42911 = bool_or(v__42917_0, v__42911); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_42898 = 0; \n            v__42922[v_l_id_42896] = id(v__42911); \n          }\n          /* end map_seq */\n          v_l_id_42896 = atomic_inc(&(v_work_idx_3172)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* iteration count is exactly 1 or less, no loop emitted */\n      if (get_local_id(0) < 1) {\n        int v_l_id_42899 = get_local_id(0); \n        int v_tmp_42990 = 0; \n        v__33541 = v_tmp_42990; \n        /* reduce_seq */\n        for (int v_i_42900 = 0; v_i_42900 < v_MWidthC_1; v_i_42900 = (1 + v_i_42900)) {\n          v__33541 = bool_or(v__33541, v__42922[(v_i_42900 + (v_MWidthC_1 * v_l_id_42899))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_42901 = 0; \n          v__42927[v_w_id_42895] = doubleAndOr(v__33541, v__42906, v__42905[v_w_id_42895], v__42907); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42895 = atomic_inc(v_work_idx_3174); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__42902",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42903",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42904",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__42905",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__42906",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__42907",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__42909",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__42927",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__42922",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}