{
  "name" : "awrg-slcl-alcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__45513, const global int* restrict v__45514, const global int* restrict v__45515, const global int* restrict v__45516, int v__45517, int v__45518, global int* v__45536, global int* v__45526, global int* v__45520, local int* v__45531, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__45522; \n  int v__45527; \n  int v__33541; \n  /* Private Memory */\n  int v__45524_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3413 = v__45520; \n    local int v_w_id_45505; \n    if (get_local_id(0) == 0) {\n      v_w_id_45505 = atomic_inc(v_work_idx_3413); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_45505 < v_MHeight_2)){\n      for (int v_l_id_45506 = get_local_id(0); v_l_id_45506 < v_MWidthC_1; v_l_id_45506 = (v_l_id_45506 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_45507 = 0; v_i_45507 < 64; v_i_45507 = (1 + v_i_45507)) {\n          int v_tmp_45595 = 0; \n          v__45522 = v_tmp_45595; \n          int v_index_45596 = v__45513[(v_l_id_45506 + (64 * v_MWidthC_1 * v_w_id_45505) + (v_MWidthC_1 * v_i_45507))]; \n          if (v_index_45596 < 0) {\n            v__45524_0 = v__45522; \n          } else {\n            if (v_index_45596 >= v_VLength_3) {\n              v__45524_0 = v__45522; \n            } else {\n              v__45524_0 = v__45515[v_index_45596]; \n            }\n          }\n          v__45526[(63 + (64 * v_MWidthC_1 * v_w_id_45505) + (-1 * v_i_45507) + (64 * v_l_id_45506))] = bool_and(v__45524_0, v__45514[(v_l_id_45506 + (64 * v_MWidthC_1 * v_w_id_45505) + (v_MWidthC_1 * v_i_45507))]); \n        }\n        /* end map_seq */\n        int v_tmp_45597 = 0; \n        v__45527 = v_tmp_45597; \n        /* reduce_seq */\n        for (int v_i_45508 = 0; v_i_45508 < 64; v_i_45508 = (1 + v_i_45508)) {\n          v__45527 = bool_or(v__45527, v__45526[(v_i_45508 + (64 * v_MWidthC_1 * v_w_id_45505) + (64 * v_l_id_45506))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_45509 = 0; \n          v__45531[v_l_id_45506] = id(v__45527); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3406; \n        v_work_idx_3406 = 0; \n        int v_l_id_45510 = atomic_inc(&(v_work_idx_3406)); \n        while((v_l_id_45510 < 1)){\n          int v_tmp_45600 = 0; \n          v__33541 = v_tmp_45600; \n          /* reduce_seq */\n          for (int v_i_45511 = 0; v_i_45511 < v_MWidthC_1; v_i_45511 = (1 + v_i_45511)) {\n            v__33541 = bool_or(v__33541, v__45531[(v_i_45511 + (v_MWidthC_1 * v_l_id_45510))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_45512 = 0; \n            v__45536[v_w_id_45505] = doubleAndOr(v__33541, v__45517, v__45516[v_w_id_45505], v__45518); \n          }\n          /* end map_seq */\n          v_l_id_45510 = atomic_inc(&(v_work_idx_3406)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_45505 = atomic_inc(v_work_idx_3413); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__45513",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45514",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45515",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__45516",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__45517",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__45518",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__45526",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45520",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__45536",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__45531",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}