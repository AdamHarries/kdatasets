{
  "name" : "awrg-alcl-alcl-fdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49762, const global int* restrict v__49763, const global int* restrict v__49764, const global int* restrict v__49765, int v__49766, int v__49767, global int* v__49785, global int* v__49769, local int* v__49780, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49771; \n  int v__49773; \n  int v__33541; \n  /* Private Memory */\n  int v__49775_0;\n  \n  int v__49777_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3821 = v__49769; \n    local int v_w_id_49755; \n    if (get_local_id(0) == 0) {\n      v_w_id_49755 = atomic_inc(v_work_idx_3821); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_49755 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3819; \n        v_work_idx_3819 = 0; \n        int v_l_id_49756 = atomic_inc(&(v_work_idx_3819)); \n        while((v_l_id_49756 < v_MWidthC_1)){\n          int v_tmp_49836 = 0; \n          v__49771 = v_tmp_49836; \n          /* reduce_seq */\n          for (int v_i_49757 = 0; v_i_49757 < 128; v_i_49757 = (1 + v_i_49757)) {\n            int v_tmp_49837 = 0; \n            v__49773 = v_tmp_49837; \n            int v_index_49838 = v__49762[(v_l_id_49756 + (128 * v_MWidthC_1 * v_w_id_49755) + (v_MWidthC_1 * v_i_49757))]; \n            if (v_index_49838 < 0) {\n              v__49775_0 = v__49773; \n            } else {\n              if (v_index_49838 >= v_VLength_3) {\n                v__49775_0 = v__49773; \n              } else {\n                v__49775_0 = v__49764[v_index_49838]; \n              }\n            }\n            v__49777_0 = bool_and(v__49775_0, v__49763[(v_l_id_49756 + (128 * v_MWidthC_1 * v_w_id_49755) + (v_MWidthC_1 * v_i_49757))]); \n            v__49771 = bool_or(v__49777_0, v__49771); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49758 = 0; \n            v__49780[v_l_id_49756] = id(v__49771); \n          }\n          /* end map_seq */\n          v_l_id_49756 = atomic_inc(&(v_work_idx_3819)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3814; \n        v_work_idx_3814 = 0; \n        int v_l_id_49759 = atomic_inc(&(v_work_idx_3814)); \n        while((v_l_id_49759 < 1)){\n          int v_tmp_49841 = 0; \n          v__33541 = v_tmp_49841; \n          /* reduce_seq */\n          for (int v_i_49760 = 0; v_i_49760 < v_MWidthC_1; v_i_49760 = (1 + v_i_49760)) {\n            v__33541 = bool_or(v__33541, v__49780[(v_i_49760 + (v_MWidthC_1 * v_l_id_49759))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49761 = 0; \n            v__49785[v_w_id_49755] = doubleAndOr(v__33541, v__49766, v__49765[v_w_id_49755], v__49767); \n          }\n          /* end map_seq */\n          v_l_id_49759 = atomic_inc(&(v_work_idx_3814)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_49755 = atomic_inc(v_work_idx_3821); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__49762",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49763",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49764",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49765",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49766",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49767",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49769",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__49785",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__49780",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}