{
  "name" : "awrg-alcl-pmdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__33163, const global int* restrict v__33164, const global int* restrict v__33165, const global int* restrict v__33166, int v__33167, int v__33168, global int* v__33182, global int* v__33176, global int* v__33170, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__33172; \n  int v__33177; \n  /* Private Memory */\n  int v__33174_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_2268 = v__33170; \n    local int v_w_id_33159; \n    if (get_local_id(0) == 0) {\n      v_w_id_33159 = atomic_inc(v_work_idx_2268); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_33159 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_l_id_2266; \n        v_l_id_2266 = 0; \n        int v_l_id_33160 = atomic_inc(&(v_l_id_2266)); \n        while((v_l_id_33160 < v_MWidthC_1)){\n          int v_tmp_33212 = 0; \n          v__33172 = v_tmp_33212; \n          int v_index_33213 = v__33163[(v_l_id_33160 + (v_MWidthC_1 * v_w_id_33159))]; \n          if (v_index_33213 < 0) {\n            v__33174_0 = v__33172; \n          } else {\n            if (v_index_33213 >= v_VLength_3) {\n              v__33174_0 = v__33172; \n            } else {\n              v__33174_0 = v__33165[v_index_33213]; \n            }\n          }\n          v__33176[(-1 + v_MWidthC_1 + (-1 * v_l_id_33160) + (v_MWidthC_1 * v_w_id_33159))] = bool_and(v__33174_0, v__33164[(v_l_id_33160 + (v_MWidthC_1 * v_w_id_33159))]); \n          v_l_id_33160 = atomic_inc(&(v_l_id_2266)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      int v_tmp_33214 = 0; \n      v__33177 = v_tmp_33214; \n      /* reduce_seq */\n      for (int v_i_33161 = 0; v_i_33161 < v_MWidthC_1; v_i_33161 = (1 + v_i_33161)) {\n        v__33177 = bool_or(v__33177, v__33176[(v_i_33161 + (v_MWidthC_1 * v_w_id_33159))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_33162 = 0; \n        v__33182[v_w_id_33159] = doubleAndOr(v__33177, v__33167, v__33166[v_w_id_33159], v__33168); \n      }\n      /* end map_seq */\n      if (get_local_id(0) == 0) {\n        v_w_id_33159 = atomic_inc(v_work_idx_2268); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__33163",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__33164",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__33165",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__33166",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__33167",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__33168",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__33176",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__33170",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__33182",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}