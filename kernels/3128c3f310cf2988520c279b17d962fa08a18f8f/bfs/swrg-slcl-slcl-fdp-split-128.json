{
  "name" : "swrg-slcl-slcl-fdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__46958, const global int* restrict v__46959, const global int* restrict v__46960, const global int* restrict v__46961, int v__46962, int v__46963, global int* v__46980, local int* v__46975, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46966; \n  int v__46968; \n  int v__33541; \n  /* Private Memory */\n  int v__46970_0;\n  \n  int v__46972_0;\n  \n  for (int v_wg_id_46951 = get_group_id(0); v_wg_id_46951 < v_MHeight_2; v_wg_id_46951 = (v_wg_id_46951 + get_num_groups(0))) {\n    for (int v_l_id_46952 = get_local_id(0); v_l_id_46952 < v_MWidthC_1; v_l_id_46952 = (v_l_id_46952 + get_local_size(0))) {\n      int v_tmp_47045 = 0; \n      v__46966 = v_tmp_47045; \n      /* reduce_seq */\n      for (int v_i_46953 = 0; v_i_46953 < 128; v_i_46953 = (1 + v_i_46953)) {\n        int v_tmp_47046 = 0; \n        v__46968 = v_tmp_47046; \n        int v_index_47047 = v__46958[(v_l_id_46952 + (128 * v_MWidthC_1 * v_wg_id_46951) + (v_MWidthC_1 * v_i_46953))]; \n        if (v_index_47047 < 0) {\n          v__46970_0 = v__46968; \n        } else {\n          if (v_index_47047 >= v_VLength_3) {\n            v__46970_0 = v__46968; \n          } else {\n            v__46970_0 = v__46960[v_index_47047]; \n          }\n        }\n        v__46972_0 = bool_and(v__46970_0, v__46959[(v_l_id_46952 + (128 * v_MWidthC_1 * v_wg_id_46951) + (v_MWidthC_1 * v_i_46953))]); \n        v__46966 = bool_or(v__46972_0, v__46966); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46954 = 0; \n        v__46975[v_l_id_46952] = id(v__46966); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_46955 = get_local_id(0); \n      int v_tmp_47050 = 0; \n      v__33541 = v_tmp_47050; \n      /* reduce_seq */\n      for (int v_i_46956 = 0; v_i_46956 < v_MWidthC_1; v_i_46956 = (1 + v_i_46956)) {\n        v__33541 = bool_or(v__33541, v__46975[(v_i_46956 + (v_MWidthC_1 * v_l_id_46955))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46957 = 0; \n        v__46980[v_wg_id_46951] = doubleAndOr(v__33541, v__46962, v__46961[v_wg_id_46951], v__46963); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__46958",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46959",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46960",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46961",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46962",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46963",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__46980",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__46975",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}