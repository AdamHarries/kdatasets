{
  "name" : "awrg-slcl-alcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__52177, const global int* restrict v__52178, const global int* restrict v__52179, const global int* restrict v__52180, int v__52181, int v__52182, global int* v__52200, global int* v__52190, global int* v__52184, local int* v__52195, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__52186; \n  int v__52191; \n  int v__33541; \n  /* Private Memory */\n  int v__52188_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4037 = v__52184; \n    local int v_w_id_52169; \n    if (get_local_id(0) == 0) {\n      v_w_id_52169 = atomic_inc(v_work_idx_4037); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_52169 < v_MHeight_2)){\n      for (int v_l_id_52170 = get_local_id(0); v_l_id_52170 < v_MWidthC_1; v_l_id_52170 = (v_l_id_52170 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_52171 = 0; v_i_52171 < 256; v_i_52171 = (1 + v_i_52171)) {\n          int v_tmp_52259 = 0; \n          v__52186 = v_tmp_52259; \n          int v_index_52260 = v__52177[(v_l_id_52170 + (256 * v_MWidthC_1 * v_w_id_52169) + (v_MWidthC_1 * v_i_52171))]; \n          if (v_index_52260 < 0) {\n            v__52188_0 = v__52186; \n          } else {\n            if (v_index_52260 >= v_VLength_3) {\n              v__52188_0 = v__52186; \n            } else {\n              v__52188_0 = v__52179[v_index_52260]; \n            }\n          }\n          v__52190[(255 + (256 * v_MWidthC_1 * v_w_id_52169) + (-1 * v_i_52171) + (256 * v_l_id_52170))] = bool_and(v__52188_0, v__52178[(v_l_id_52170 + (256 * v_MWidthC_1 * v_w_id_52169) + (v_MWidthC_1 * v_i_52171))]); \n        }\n        /* end map_seq */\n        int v_tmp_52261 = 0; \n        v__52191 = v_tmp_52261; \n        /* reduce_seq */\n        for (int v_i_52172 = 0; v_i_52172 < 256; v_i_52172 = (1 + v_i_52172)) {\n          v__52191 = bool_or(v__52191, v__52190[(v_i_52172 + (256 * v_MWidthC_1 * v_w_id_52169) + (256 * v_l_id_52170))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_52173 = 0; \n          v__52195[v_l_id_52170] = id(v__52191); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4030; \n        v_work_idx_4030 = 0; \n        int v_l_id_52174 = atomic_inc(&(v_work_idx_4030)); \n        while((v_l_id_52174 < 1)){\n          int v_tmp_52264 = 0; \n          v__33541 = v_tmp_52264; \n          /* reduce_seq */\n          for (int v_i_52175 = 0; v_i_52175 < v_MWidthC_1; v_i_52175 = (1 + v_i_52175)) {\n            v__33541 = bool_or(v__33541, v__52195[(v_i_52175 + (v_MWidthC_1 * v_l_id_52174))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52176 = 0; \n            v__52200[v_w_id_52169] = doubleAndOr(v__33541, v__52181, v__52180[v_w_id_52169], v__52182); \n          }\n          /* end map_seq */\n          v_l_id_52174 = atomic_inc(&(v_work_idx_4030)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_52169 = atomic_inc(v_work_idx_4037); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__52177",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52178",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52179",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__52180",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__52181",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__52182",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__52190",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52184",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__52200",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__52195",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}