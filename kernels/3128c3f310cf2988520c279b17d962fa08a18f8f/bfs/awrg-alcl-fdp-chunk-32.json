{
  "name" : "awrg-alcl-fdp-chunk-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__42558, const global int* restrict v__42559, const global int* restrict v__42560, const global int* restrict v__42561, int v__42562, int v__42563, global int* v__42577, global int* v__42565, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__42567; \n  int v__42569; \n  /* Private Memory */\n  int v__42571_0;\n  \n  int v__42573_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3136 = v__42565; \n    local int v_w_id_42554; \n    if (get_local_id(0) == 0) {\n      v_w_id_42554 = atomic_inc(v_work_idx_3136); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42554 < ((v_MHeight_2)/(32)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3134; \n        v_work_idx_3134 = 0; \n        int v_l_id_42555 = atomic_inc(&(v_work_idx_3134)); \n        while((v_l_id_42555 < 32)){\n          int v_tmp_42614 = 0; \n          v__42567 = v_tmp_42614; \n          /* reduce_seq */\n          for (int v_i_42556 = 0; v_i_42556 < v_MWidthC_1; v_i_42556 = (1 + v_i_42556)) {\n            int v_tmp_42615 = 0; \n            v__42569 = v_tmp_42615; \n            int v_index_42616 = v__42558[(v_i_42556 + (32 * v_MWidthC_1 * v_w_id_42554) + (v_MWidthC_1 * v_l_id_42555))]; \n            if (v_index_42616 < 0) {\n              v__42571_0 = v__42569; \n            } else {\n              if (v_index_42616 >= v_VLength_3) {\n                v__42571_0 = v__42569; \n              } else {\n                v__42571_0 = v__42560[v_index_42616]; \n              }\n            }\n            v__42573_0 = bool_and(v__42571_0, v__42559[(v_i_42556 + (32 * v_MWidthC_1 * v_w_id_42554) + (v_MWidthC_1 * v_l_id_42555))]); \n            v__42567 = bool_or(v__42573_0, v__42567); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_42557 = 0; \n            v__42577[(v_l_id_42555 + (32 * v_w_id_42554))] = doubleAndOr(v__42567, v__42562, v__42561[(v_l_id_42555 + (32 * v_w_id_42554))], v__42563); \n          }\n          /* end map_seq */\n          v_l_id_42555 = atomic_inc(&(v_work_idx_3134)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42554 = atomic_inc(v_work_idx_3136); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "32",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__42558",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42559",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42560",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__42561",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__42562",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__42563",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__42565",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__42577",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}