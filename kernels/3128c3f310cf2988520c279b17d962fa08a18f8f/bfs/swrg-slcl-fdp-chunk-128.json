{
  "name" : "swrg-slcl-fdp-chunk-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__46694, const global int* restrict v__46695, const global int* restrict v__46696, const global int* restrict v__46697, int v__46698, int v__46699, global int* v__46712, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46702; \n  int v__46704; \n  /* Private Memory */\n  int v__46706_0;\n  \n  int v__46708_0;\n  \n  for (int v_wg_id_46690 = get_group_id(0); v_wg_id_46690 < ((v_MHeight_2)/(128)); v_wg_id_46690 = (v_wg_id_46690 + get_num_groups(0))) {\n    for (int v_l_id_46691 = get_local_id(0); v_l_id_46691 < 128; v_l_id_46691 = (v_l_id_46691 + get_local_size(0))) {\n      int v_tmp_46754 = 0; \n      v__46702 = v_tmp_46754; \n      /* reduce_seq */\n      for (int v_i_46692 = 0; v_i_46692 < v_MWidthC_1; v_i_46692 = (1 + v_i_46692)) {\n        int v_tmp_46755 = 0; \n        v__46704 = v_tmp_46755; \n        int v_index_46756 = v__46694[(v_i_46692 + (128 * v_MWidthC_1 * v_wg_id_46690) + (v_MWidthC_1 * v_l_id_46691))]; \n        if (v_index_46756 < 0) {\n          v__46706_0 = v__46704; \n        } else {\n          if (v_index_46756 >= v_VLength_3) {\n            v__46706_0 = v__46704; \n          } else {\n            v__46706_0 = v__46696[v_index_46756]; \n          }\n        }\n        v__46708_0 = bool_and(v__46706_0, v__46695[(v_i_46692 + (128 * v_MWidthC_1 * v_wg_id_46690) + (v_MWidthC_1 * v_l_id_46691))]); \n        v__46702 = bool_or(v__46708_0, v__46702); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46693 = 0; \n        v__46712[(v_l_id_46691 + (128 * v_wg_id_46690))] = doubleAndOr(v__46702, v__46698, v__46697[(v_l_id_46691 + (128 * v_wg_id_46690))], v__46699); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "128",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__46694",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46695",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46696",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46697",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46698",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46699",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__46712",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}