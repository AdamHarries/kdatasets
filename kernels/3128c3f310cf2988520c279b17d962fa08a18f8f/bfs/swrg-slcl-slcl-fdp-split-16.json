{
  "name" : "swrg-slcl-slcl-fdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__36962, const global int* restrict v__36963, const global int* restrict v__36964, const global int* restrict v__36965, int v__36966, int v__36967, global int* v__36984, local int* v__36979, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__36970; \n  int v__36972; \n  int v__33541; \n  /* Private Memory */\n  int v__36974_0;\n  \n  int v__36976_0;\n  \n  for (int v_wg_id_36955 = get_group_id(0); v_wg_id_36955 < v_MHeight_2; v_wg_id_36955 = (v_wg_id_36955 + get_num_groups(0))) {\n    for (int v_l_id_36956 = get_local_id(0); v_l_id_36956 < v_MWidthC_1; v_l_id_36956 = (v_l_id_36956 + get_local_size(0))) {\n      int v_tmp_37049 = 0; \n      v__36970 = v_tmp_37049; \n      /* reduce_seq */\n      for (int v_i_36957 = 0; v_i_36957 < 16; v_i_36957 = (1 + v_i_36957)) {\n        int v_tmp_37050 = 0; \n        v__36972 = v_tmp_37050; \n        int v_index_37051 = v__36962[(v_l_id_36956 + (16 * v_MWidthC_1 * v_wg_id_36955) + (v_MWidthC_1 * v_i_36957))]; \n        if (v_index_37051 < 0) {\n          v__36974_0 = v__36972; \n        } else {\n          if (v_index_37051 >= v_VLength_3) {\n            v__36974_0 = v__36972; \n          } else {\n            v__36974_0 = v__36964[v_index_37051]; \n          }\n        }\n        v__36976_0 = bool_and(v__36974_0, v__36963[(v_l_id_36956 + (16 * v_MWidthC_1 * v_wg_id_36955) + (v_MWidthC_1 * v_i_36957))]); \n        v__36970 = bool_or(v__36976_0, v__36970); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36958 = 0; \n        v__36979[v_l_id_36956] = id(v__36970); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_36959 = get_local_id(0); \n      int v_tmp_37054 = 0; \n      v__33541 = v_tmp_37054; \n      /* reduce_seq */\n      for (int v_i_36960 = 0; v_i_36960 < v_MWidthC_1; v_i_36960 = (1 + v_i_36960)) {\n        v__33541 = bool_or(v__33541, v__36979[(v_i_36960 + (v_MWidthC_1 * v_l_id_36959))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36961 = 0; \n        v__36984[v_wg_id_36955] = doubleAndOr(v__33541, v__36966, v__36965[v_wg_id_36955], v__36967); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__36962",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36963",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36964",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__36965",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__36966",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__36967",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__36984",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__36979",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}