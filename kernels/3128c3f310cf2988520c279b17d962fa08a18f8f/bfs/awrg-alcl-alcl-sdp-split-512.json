{
  "name" : "awrg-alcl-alcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56333, const global int* restrict v__56334, const global int* restrict v__56335, const global int* restrict v__56336, int v__56337, int v__56338, global int* v__56356, global int* v__56346, global int* v__56340, local int* v__56351, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__56342; \n  int v__56347; \n  int v__33541; \n  /* Private Memory */\n  int v__56344_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4434 = v__56340; \n    local int v_w_id_56325; \n    if (get_local_id(0) == 0) {\n      v_w_id_56325 = atomic_inc(v_work_idx_4434); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_56325 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4432; \n        v_work_idx_4432 = 0; \n        int v_l_id_56326 = atomic_inc(&(v_work_idx_4432)); \n        while((v_l_id_56326 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_56327 = 0; v_i_56327 < 512; v_i_56327 = (1 + v_i_56327)) {\n            int v_tmp_56407 = 0; \n            v__56342 = v_tmp_56407; \n            int v_index_56408 = v__56333[(v_l_id_56326 + (512 * v_MWidthC_1 * v_w_id_56325) + (v_MWidthC_1 * v_i_56327))]; \n            if (v_index_56408 < 0) {\n              v__56344_0 = v__56342; \n            } else {\n              if (v_index_56408 >= v_VLength_3) {\n                v__56344_0 = v__56342; \n              } else {\n                v__56344_0 = v__56335[v_index_56408]; \n              }\n            }\n            v__56346[(511 + (512 * v_MWidthC_1 * v_w_id_56325) + (-1 * v_i_56327) + (512 * v_l_id_56326))] = bool_and(v__56344_0, v__56334[(v_l_id_56326 + (512 * v_MWidthC_1 * v_w_id_56325) + (v_MWidthC_1 * v_i_56327))]); \n          }\n          /* end map_seq */\n          int v_tmp_56409 = 0; \n          v__56347 = v_tmp_56409; \n          /* reduce_seq */\n          for (int v_i_56328 = 0; v_i_56328 < 512; v_i_56328 = (1 + v_i_56328)) {\n            v__56347 = bool_or(v__56347, v__56346[(v_i_56328 + (512 * v_MWidthC_1 * v_w_id_56325) + (512 * v_l_id_56326))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56329 = 0; \n            v__56351[v_l_id_56326] = id(v__56347); \n          }\n          /* end map_seq */\n          v_l_id_56326 = atomic_inc(&(v_work_idx_4432)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4426; \n        v_work_idx_4426 = 0; \n        int v_l_id_56330 = atomic_inc(&(v_work_idx_4426)); \n        while((v_l_id_56330 < 1)){\n          int v_tmp_56412 = 0; \n          v__33541 = v_tmp_56412; \n          /* reduce_seq */\n          for (int v_i_56331 = 0; v_i_56331 < v_MWidthC_1; v_i_56331 = (1 + v_i_56331)) {\n            v__33541 = bool_or(v__33541, v__56351[(v_i_56331 + (v_MWidthC_1 * v_l_id_56330))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56332 = 0; \n            v__56356[v_w_id_56325] = doubleAndOr(v__33541, v__56337, v__56336[v_w_id_56325], v__56338); \n          }\n          /* end map_seq */\n          v_l_id_56330 = atomic_inc(&(v_work_idx_4426)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_56325 = atomic_inc(v_work_idx_4434); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__56333",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56334",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56335",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56336",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56337",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56338",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56346",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56340",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__56356",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__56351",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}