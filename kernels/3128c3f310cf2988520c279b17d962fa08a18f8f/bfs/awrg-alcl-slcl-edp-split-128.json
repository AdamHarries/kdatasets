{
  "name" : "awrg-alcl-slcl-edp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49566, const global int* restrict v__49567, const global int* restrict v__49568, const global int* restrict v__49569, int v__49570, int v__49571, global int* v__49591, global int* v__49573, local int* v__49586, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49575; \n  int v__49577; \n  int v__33541; \n  /* Private Memory */\n  int v__49579_0;\n  \n  int v__49581_0;\n  \n  int v__49585_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3798 = v__49573; \n    local int v_w_id_49559; \n    if (get_local_id(0) == 0) {\n      v_w_id_49559 = atomic_inc(v_work_idx_3798); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_49559 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3796; \n        v_work_idx_3796 = 0; \n        int v_l_id_49560 = atomic_inc(&(v_work_idx_3796)); \n        while((v_l_id_49560 < v_MWidthC_1)){\n          int v_tmp_49649 = 0; \n          v__49575 = v_tmp_49649; \n          /* reduce_while_seq */\n          for (int v_i_49561 = 0; v_i_49561 < 128; v_i_49561 = (1 + v_i_49561)) {\n            v__49585_0 = check(v__49575, v__49566[(v_l_id_49560 + (128 * v_MWidthC_1 * v_w_id_49559) + (v_MWidthC_1 * v_i_49561))]); \n            if (v__49585_0) {\n            } else {\n              break;\n            }\n            int v_tmp_49650 = 0; \n            v__49577 = v_tmp_49650; \n            int v_index_49651 = v__49566[(v_l_id_49560 + (128 * v_MWidthC_1 * v_w_id_49559) + (v_MWidthC_1 * v_i_49561))]; \n            if (v_index_49651 < 0) {\n              v__49579_0 = v__49577; \n            } else {\n              if (v_index_49651 >= v_VLength_3) {\n                v__49579_0 = v__49577; \n              } else {\n                v__49579_0 = v__49568[v_index_49651]; \n              }\n            }\n            v__49581_0 = bool_and(v__49579_0, v__49567[(v_l_id_49560 + (128 * v_MWidthC_1 * v_w_id_49559) + (v_MWidthC_1 * v_i_49561))]); \n            v__49575 = bool_or(v__49581_0, v__49575); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49562 = 0; \n            v__49586[v_l_id_49560] = id(v__49575); \n          }\n          /* end map_seq */\n          v_l_id_49560 = atomic_inc(&(v_work_idx_3796)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* iteration count is exactly 1 or less, no loop emitted */\n      if (get_local_id(0) < 1) {\n        int v_l_id_49563 = get_local_id(0); \n        int v_tmp_49654 = 0; \n        v__33541 = v_tmp_49654; \n        /* reduce_seq */\n        for (int v_i_49564 = 0; v_i_49564 < v_MWidthC_1; v_i_49564 = (1 + v_i_49564)) {\n          v__33541 = bool_or(v__33541, v__49586[(v_i_49564 + (v_MWidthC_1 * v_l_id_49563))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_49565 = 0; \n          v__49591[v_w_id_49559] = doubleAndOr(v__33541, v__49570, v__49569[v_w_id_49559], v__49571); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_49559 = atomic_inc(v_work_idx_3798); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__49566",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49567",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49568",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49569",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49570",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49571",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49573",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__49591",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__49586",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}