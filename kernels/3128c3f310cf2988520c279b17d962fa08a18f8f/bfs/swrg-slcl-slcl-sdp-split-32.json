{
  "name" : "swrg-slcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__40188, const global int* restrict v__40189, const global int* restrict v__40190, const global int* restrict v__40191, int v__40192, int v__40193, global int* v__40210, global int* v__40200, local int* v__40205, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__40196; \n  int v__40201; \n  int v__33541; \n  /* Private Memory */\n  int v__40198_0;\n  \n  for (int v_wg_id_40180 = get_group_id(0); v_wg_id_40180 < v_MHeight_2; v_wg_id_40180 = (v_wg_id_40180 + get_num_groups(0))) {\n    for (int v_l_id_40181 = get_local_id(0); v_l_id_40181 < v_MWidthC_1; v_l_id_40181 = (v_l_id_40181 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_40182 = 0; v_i_40182 < 32; v_i_40182 = (1 + v_i_40182)) {\n        int v_tmp_40275 = 0; \n        v__40196 = v_tmp_40275; \n        int v_index_40276 = v__40188[(v_l_id_40181 + (32 * v_MWidthC_1 * v_wg_id_40180) + (v_MWidthC_1 * v_i_40182))]; \n        if (v_index_40276 < 0) {\n          v__40198_0 = v__40196; \n        } else {\n          if (v_index_40276 >= v_VLength_3) {\n            v__40198_0 = v__40196; \n          } else {\n            v__40198_0 = v__40190[v_index_40276]; \n          }\n        }\n        v__40200[(31 + (32 * v_MWidthC_1 * v_wg_id_40180) + (-1 * v_i_40182) + (32 * v_l_id_40181))] = bool_and(v__40198_0, v__40189[(v_l_id_40181 + (32 * v_MWidthC_1 * v_wg_id_40180) + (v_MWidthC_1 * v_i_40182))]); \n      }\n      /* end map_seq */\n      int v_tmp_40277 = 0; \n      v__40201 = v_tmp_40277; \n      /* reduce_seq */\n      for (int v_i_40183 = 0; v_i_40183 < 32; v_i_40183 = (1 + v_i_40183)) {\n        v__40201 = bool_or(v__40201, v__40200[(v_i_40183 + (32 * v_MWidthC_1 * v_wg_id_40180) + (32 * v_l_id_40181))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40184 = 0; \n        v__40205[v_l_id_40181] = id(v__40201); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_40185 = get_local_id(0); \n      int v_tmp_40280 = 0; \n      v__33541 = v_tmp_40280; \n      /* reduce_seq */\n      for (int v_i_40186 = 0; v_i_40186 < v_MWidthC_1; v_i_40186 = (1 + v_i_40186)) {\n        v__33541 = bool_or(v__33541, v__40205[(v_i_40186 + (v_MWidthC_1 * v_l_id_40185))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40187 = 0; \n        v__40210[v_wg_id_40180] = doubleAndOr(v__33541, v__40192, v__40191[v_wg_id_40180], v__40193); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__40188",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40189",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40190",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__40191",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__40192",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__40193",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__40200",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__40210",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__40205",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}