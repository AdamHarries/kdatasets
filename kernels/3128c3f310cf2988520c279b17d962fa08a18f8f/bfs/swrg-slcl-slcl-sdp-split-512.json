{
  "name" : "swrg-slcl-slcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__53516, const global int* restrict v__53517, const global int* restrict v__53518, const global int* restrict v__53519, int v__53520, int v__53521, global int* v__53538, global int* v__53528, local int* v__53533, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53524; \n  int v__53529; \n  int v__33541; \n  /* Private Memory */\n  int v__53526_0;\n  \n  for (int v_wg_id_53508 = get_group_id(0); v_wg_id_53508 < v_MHeight_2; v_wg_id_53508 = (v_wg_id_53508 + get_num_groups(0))) {\n    for (int v_l_id_53509 = get_local_id(0); v_l_id_53509 < v_MWidthC_1; v_l_id_53509 = (v_l_id_53509 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_53510 = 0; v_i_53510 < 512; v_i_53510 = (1 + v_i_53510)) {\n        int v_tmp_53603 = 0; \n        v__53524 = v_tmp_53603; \n        int v_index_53604 = v__53516[(v_l_id_53509 + (512 * v_MWidthC_1 * v_wg_id_53508) + (v_MWidthC_1 * v_i_53510))]; \n        if (v_index_53604 < 0) {\n          v__53526_0 = v__53524; \n        } else {\n          if (v_index_53604 >= v_VLength_3) {\n            v__53526_0 = v__53524; \n          } else {\n            v__53526_0 = v__53518[v_index_53604]; \n          }\n        }\n        v__53528[(511 + (512 * v_MWidthC_1 * v_wg_id_53508) + (-1 * v_i_53510) + (512 * v_l_id_53509))] = bool_and(v__53526_0, v__53517[(v_l_id_53509 + (512 * v_MWidthC_1 * v_wg_id_53508) + (v_MWidthC_1 * v_i_53510))]); \n      }\n      /* end map_seq */\n      int v_tmp_53605 = 0; \n      v__53529 = v_tmp_53605; \n      /* reduce_seq */\n      for (int v_i_53511 = 0; v_i_53511 < 512; v_i_53511 = (1 + v_i_53511)) {\n        v__53529 = bool_or(v__53529, v__53528[(v_i_53511 + (512 * v_MWidthC_1 * v_wg_id_53508) + (512 * v_l_id_53509))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53512 = 0; \n        v__53533[v_l_id_53509] = id(v__53529); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_53513 = get_local_id(0); \n      int v_tmp_53608 = 0; \n      v__33541 = v_tmp_53608; \n      /* reduce_seq */\n      for (int v_i_53514 = 0; v_i_53514 < v_MWidthC_1; v_i_53514 = (1 + v_i_53514)) {\n        v__33541 = bool_or(v__33541, v__53533[(v_i_53514 + (v_MWidthC_1 * v_l_id_53513))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53515 = 0; \n        v__53538[v_wg_id_53508] = doubleAndOr(v__33541, v__53520, v__53519[v_wg_id_53508], v__53521); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__53516",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53517",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53518",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53519",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__53520",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53521",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__53528",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__53538",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__53533",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}