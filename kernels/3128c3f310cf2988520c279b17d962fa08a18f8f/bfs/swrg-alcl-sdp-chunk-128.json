{
  "name" : "swrg-alcl-sdp-chunk-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__47485, const global int* restrict v__47486, const global int* restrict v__47487, const global int* restrict v__47488, int v__47489, int v__47490, global int* v__47503, global int* v__47497, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__47493; \n  int v__47498; \n  /* Private Memory */\n  int v__47495_0;\n  \n  for (int v_wg_id_47480 = get_group_id(0); v_wg_id_47480 < ((v_MHeight_2)/(128)); v_wg_id_47480 = (v_wg_id_47480 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_3595; \n      v_work_idx_3595 = 0; \n      int v_l_id_47481 = atomic_inc(&(v_work_idx_3595)); \n      while((v_l_id_47481 < 128)){\n        /* map_seq */\n        for (int v_i_47482 = 0; v_i_47482 < v_MWidthC_1; v_i_47482 = (1 + v_i_47482)) {\n          int v_tmp_47543 = 0; \n          v__47493 = v_tmp_47543; \n          int v_index_47544 = v__47485[(v_i_47482 + (128 * v_MWidthC_1 * v_wg_id_47480) + (v_MWidthC_1 * v_l_id_47481))]; \n          if (v_index_47544 < 0) {\n            v__47495_0 = v__47493; \n          } else {\n            if (v_index_47544 >= v_VLength_3) {\n              v__47495_0 = v__47493; \n            } else {\n              v__47495_0 = v__47487[v_index_47544]; \n            }\n          }\n          v__47497[(-1 + v_MWidthC_1 + (128 * v_MWidthC_1 * v_wg_id_47480) + (-1 * v_i_47482) + (v_MWidthC_1 * v_l_id_47481))] = bool_and(v__47495_0, v__47486[(v_i_47482 + (128 * v_MWidthC_1 * v_wg_id_47480) + (v_MWidthC_1 * v_l_id_47481))]); \n        }\n        /* end map_seq */\n        int v_tmp_47545 = 0; \n        v__47498 = v_tmp_47545; \n        /* reduce_seq */\n        for (int v_i_47483 = 0; v_i_47483 < v_MWidthC_1; v_i_47483 = (1 + v_i_47483)) {\n          v__47498 = bool_or(v__47498, v__47497[(v_i_47483 + (128 * v_MWidthC_1 * v_wg_id_47480) + (v_MWidthC_1 * v_l_id_47481))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_47484 = 0; \n          v__47503[(v_l_id_47481 + (128 * v_wg_id_47480))] = doubleAndOr(v__47498, v__47489, v__47488[(v_l_id_47481 + (128 * v_wg_id_47480))], v__47490); \n        }\n        /* end map_seq */\n        v_l_id_47481 = atomic_inc(&(v_work_idx_3595)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "alcl",
    "chunkSize" : "128",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__47485",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__47486",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__47487",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__47488",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__47489",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__47490",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__47497",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__47503",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}