{
  "name" : "awrg-alcl-alcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__43005, const global int* restrict v__43006, const global int* restrict v__43007, const global int* restrict v__43008, int v__43009, int v__43010, global int* v__43028, global int* v__43018, global int* v__43012, local int* v__43023, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__43014; \n  int v__43019; \n  int v__33541; \n  /* Private Memory */\n  int v__43016_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3186 = v__43012; \n    local int v_w_id_42997; \n    if (get_local_id(0) == 0) {\n      v_w_id_42997 = atomic_inc(v_work_idx_3186); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42997 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3184; \n        v_work_idx_3184 = 0; \n        int v_l_id_42998 = atomic_inc(&(v_work_idx_3184)); \n        while((v_l_id_42998 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_42999 = 0; v_i_42999 < 32; v_i_42999 = (1 + v_i_42999)) {\n            int v_tmp_43079 = 0; \n            v__43014 = v_tmp_43079; \n            int v_index_43080 = v__43005[(v_l_id_42998 + (32 * v_MWidthC_1 * v_w_id_42997) + (v_MWidthC_1 * v_i_42999))]; \n            if (v_index_43080 < 0) {\n              v__43016_0 = v__43014; \n            } else {\n              if (v_index_43080 >= v_VLength_3) {\n                v__43016_0 = v__43014; \n              } else {\n                v__43016_0 = v__43007[v_index_43080]; \n              }\n            }\n            v__43018[(31 + (32 * v_MWidthC_1 * v_w_id_42997) + (-1 * v_i_42999) + (32 * v_l_id_42998))] = bool_and(v__43016_0, v__43006[(v_l_id_42998 + (32 * v_MWidthC_1 * v_w_id_42997) + (v_MWidthC_1 * v_i_42999))]); \n          }\n          /* end map_seq */\n          int v_tmp_43081 = 0; \n          v__43019 = v_tmp_43081; \n          /* reduce_seq */\n          for (int v_i_43000 = 0; v_i_43000 < 32; v_i_43000 = (1 + v_i_43000)) {\n            v__43019 = bool_or(v__43019, v__43018[(v_i_43000 + (32 * v_MWidthC_1 * v_w_id_42997) + (32 * v_l_id_42998))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43001 = 0; \n            v__43023[v_l_id_42998] = id(v__43019); \n          }\n          /* end map_seq */\n          v_l_id_42998 = atomic_inc(&(v_work_idx_3184)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3178; \n        v_work_idx_3178 = 0; \n        int v_l_id_43002 = atomic_inc(&(v_work_idx_3178)); \n        while((v_l_id_43002 < 1)){\n          int v_tmp_43084 = 0; \n          v__33541 = v_tmp_43084; \n          /* reduce_seq */\n          for (int v_i_43003 = 0; v_i_43003 < v_MWidthC_1; v_i_43003 = (1 + v_i_43003)) {\n            v__33541 = bool_or(v__33541, v__43023[(v_i_43003 + (v_MWidthC_1 * v_l_id_43002))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43004 = 0; \n            v__43028[v_w_id_42997] = doubleAndOr(v__33541, v__43009, v__43008[v_w_id_42997], v__43010); \n          }\n          /* end map_seq */\n          v_l_id_43002 = atomic_inc(&(v_work_idx_3178)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42997 = atomic_inc(v_work_idx_3186); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__43005",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43006",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43007",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__43008",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__43009",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__43010",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__43018",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43012",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__43028",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__43023",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}