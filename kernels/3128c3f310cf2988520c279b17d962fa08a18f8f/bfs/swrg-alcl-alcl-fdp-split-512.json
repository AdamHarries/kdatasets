{
  "name" : "swrg-alcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__54764, const global int* restrict v__54765, const global int* restrict v__54766, const global int* restrict v__54767, int v__54768, int v__54769, global int* v__54786, local int* v__54781, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__54772; \n  int v__54774; \n  int v__33541; \n  /* Private Memory */\n  int v__54776_0;\n  \n  int v__54778_0;\n  \n  for (int v_wg_id_54757 = get_group_id(0); v_wg_id_54757 < v_MHeight_2; v_wg_id_54757 = (v_wg_id_54757 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_4280; \n      v_work_idx_4280 = 0; \n      int v_l_id_54758 = atomic_inc(&(v_work_idx_4280)); \n      while((v_l_id_54758 < v_MWidthC_1)){\n        int v_tmp_54839 = 0; \n        v__54772 = v_tmp_54839; \n        /* reduce_seq */\n        for (int v_i_54759 = 0; v_i_54759 < 512; v_i_54759 = (1 + v_i_54759)) {\n          int v_tmp_54840 = 0; \n          v__54774 = v_tmp_54840; \n          int v_index_54841 = v__54764[(v_l_id_54758 + (512 * v_MWidthC_1 * v_wg_id_54757) + (v_MWidthC_1 * v_i_54759))]; \n          if (v_index_54841 < 0) {\n            v__54776_0 = v__54774; \n          } else {\n            if (v_index_54841 >= v_VLength_3) {\n              v__54776_0 = v__54774; \n            } else {\n              v__54776_0 = v__54766[v_index_54841]; \n            }\n          }\n          v__54778_0 = bool_and(v__54776_0, v__54765[(v_l_id_54758 + (512 * v_MWidthC_1 * v_wg_id_54757) + (v_MWidthC_1 * v_i_54759))]); \n          v__54772 = bool_or(v__54778_0, v__54772); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_54760 = 0; \n          v__54781[v_l_id_54758] = id(v__54772); \n        }\n        /* end map_seq */\n        v_l_id_54758 = atomic_inc(&(v_work_idx_4280)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_4275; \n      v_work_idx_4275 = 0; \n      int v_l_id_54761 = atomic_inc(&(v_work_idx_4275)); \n      while((v_l_id_54761 < 1)){\n        int v_tmp_54844 = 0; \n        v__33541 = v_tmp_54844; \n        /* reduce_seq */\n        for (int v_i_54762 = 0; v_i_54762 < v_MWidthC_1; v_i_54762 = (1 + v_i_54762)) {\n          v__33541 = bool_or(v__33541, v__54781[(v_i_54762 + (v_MWidthC_1 * v_l_id_54761))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_54763 = 0; \n          v__54786[v_wg_id_54757] = doubleAndOr(v__33541, v__54768, v__54767[v_wg_id_54757], v__54769); \n        }\n        /* end map_seq */\n        v_l_id_54761 = atomic_inc(&(v_work_idx_4275)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__54764",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54765",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54766",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__54767",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__54768",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__54769",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__54786",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__54781",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}