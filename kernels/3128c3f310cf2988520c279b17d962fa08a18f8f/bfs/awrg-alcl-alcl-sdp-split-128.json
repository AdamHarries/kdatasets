{
  "name" : "awrg-alcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49669, const global int* restrict v__49670, const global int* restrict v__49671, const global int* restrict v__49672, int v__49673, int v__49674, global int* v__49692, global int* v__49682, global int* v__49676, local int* v__49687, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49678; \n  int v__49683; \n  int v__33541; \n  /* Private Memory */\n  int v__49680_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3810 = v__49676; \n    local int v_w_id_49661; \n    if (get_local_id(0) == 0) {\n      v_w_id_49661 = atomic_inc(v_work_idx_3810); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_49661 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3808; \n        v_work_idx_3808 = 0; \n        int v_l_id_49662 = atomic_inc(&(v_work_idx_3808)); \n        while((v_l_id_49662 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_49663 = 0; v_i_49663 < 128; v_i_49663 = (1 + v_i_49663)) {\n            int v_tmp_49743 = 0; \n            v__49678 = v_tmp_49743; \n            int v_index_49744 = v__49669[(v_l_id_49662 + (128 * v_MWidthC_1 * v_w_id_49661) + (v_MWidthC_1 * v_i_49663))]; \n            if (v_index_49744 < 0) {\n              v__49680_0 = v__49678; \n            } else {\n              if (v_index_49744 >= v_VLength_3) {\n                v__49680_0 = v__49678; \n              } else {\n                v__49680_0 = v__49671[v_index_49744]; \n              }\n            }\n            v__49682[(127 + (128 * v_MWidthC_1 * v_w_id_49661) + (-1 * v_i_49663) + (128 * v_l_id_49662))] = bool_and(v__49680_0, v__49670[(v_l_id_49662 + (128 * v_MWidthC_1 * v_w_id_49661) + (v_MWidthC_1 * v_i_49663))]); \n          }\n          /* end map_seq */\n          int v_tmp_49745 = 0; \n          v__49683 = v_tmp_49745; \n          /* reduce_seq */\n          for (int v_i_49664 = 0; v_i_49664 < 128; v_i_49664 = (1 + v_i_49664)) {\n            v__49683 = bool_or(v__49683, v__49682[(v_i_49664 + (128 * v_MWidthC_1 * v_w_id_49661) + (128 * v_l_id_49662))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49665 = 0; \n            v__49687[v_l_id_49662] = id(v__49683); \n          }\n          /* end map_seq */\n          v_l_id_49662 = atomic_inc(&(v_work_idx_3808)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3802; \n        v_work_idx_3802 = 0; \n        int v_l_id_49666 = atomic_inc(&(v_work_idx_3802)); \n        while((v_l_id_49666 < 1)){\n          int v_tmp_49748 = 0; \n          v__33541 = v_tmp_49748; \n          /* reduce_seq */\n          for (int v_i_49667 = 0; v_i_49667 < v_MWidthC_1; v_i_49667 = (1 + v_i_49667)) {\n            v__33541 = bool_or(v__33541, v__49687[(v_i_49667 + (v_MWidthC_1 * v_l_id_49666))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49668 = 0; \n            v__49692[v_w_id_49661] = doubleAndOr(v__33541, v__49673, v__49672[v_w_id_49661], v__49674); \n          }\n          /* end map_seq */\n          v_l_id_49666 = atomic_inc(&(v_work_idx_3802)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_49661 = atomic_inc(v_work_idx_3810); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__49669",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49670",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49671",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49672",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49673",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49674",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49682",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49676",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__49692",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__49687",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}