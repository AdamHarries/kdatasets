{
  "name" : "awrg-slcl-alcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__55509, const global int* restrict v__55510, const global int* restrict v__55511, const global int* restrict v__55512, int v__55513, int v__55514, global int* v__55532, global int* v__55522, global int* v__55516, local int* v__55527, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__55518; \n  int v__55523; \n  int v__33541; \n  /* Private Memory */\n  int v__55520_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4349 = v__55516; \n    local int v_w_id_55501; \n    if (get_local_id(0) == 0) {\n      v_w_id_55501 = atomic_inc(v_work_idx_4349); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_55501 < v_MHeight_2)){\n      for (int v_l_id_55502 = get_local_id(0); v_l_id_55502 < v_MWidthC_1; v_l_id_55502 = (v_l_id_55502 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_55503 = 0; v_i_55503 < 512; v_i_55503 = (1 + v_i_55503)) {\n          int v_tmp_55591 = 0; \n          v__55518 = v_tmp_55591; \n          int v_index_55592 = v__55509[(v_l_id_55502 + (512 * v_MWidthC_1 * v_w_id_55501) + (v_MWidthC_1 * v_i_55503))]; \n          if (v_index_55592 < 0) {\n            v__55520_0 = v__55518; \n          } else {\n            if (v_index_55592 >= v_VLength_3) {\n              v__55520_0 = v__55518; \n            } else {\n              v__55520_0 = v__55511[v_index_55592]; \n            }\n          }\n          v__55522[(511 + (512 * v_MWidthC_1 * v_w_id_55501) + (-1 * v_i_55503) + (512 * v_l_id_55502))] = bool_and(v__55520_0, v__55510[(v_l_id_55502 + (512 * v_MWidthC_1 * v_w_id_55501) + (v_MWidthC_1 * v_i_55503))]); \n        }\n        /* end map_seq */\n        int v_tmp_55593 = 0; \n        v__55523 = v_tmp_55593; \n        /* reduce_seq */\n        for (int v_i_55504 = 0; v_i_55504 < 512; v_i_55504 = (1 + v_i_55504)) {\n          v__55523 = bool_or(v__55523, v__55522[(v_i_55504 + (512 * v_MWidthC_1 * v_w_id_55501) + (512 * v_l_id_55502))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_55505 = 0; \n          v__55527[v_l_id_55502] = id(v__55523); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4342; \n        v_work_idx_4342 = 0; \n        int v_l_id_55506 = atomic_inc(&(v_work_idx_4342)); \n        while((v_l_id_55506 < 1)){\n          int v_tmp_55596 = 0; \n          v__33541 = v_tmp_55596; \n          /* reduce_seq */\n          for (int v_i_55507 = 0; v_i_55507 < v_MWidthC_1; v_i_55507 = (1 + v_i_55507)) {\n            v__33541 = bool_or(v__33541, v__55527[(v_i_55507 + (v_MWidthC_1 * v_l_id_55506))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_55508 = 0; \n            v__55532[v_w_id_55501] = doubleAndOr(v__33541, v__55513, v__55512[v_w_id_55501], v__55514); \n          }\n          /* end map_seq */\n          v_l_id_55506 = atomic_inc(&(v_work_idx_4342)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_55501 = atomic_inc(v_work_idx_4349); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__55509",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55510",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55511",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__55512",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__55513",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__55514",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__55522",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55516",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__55532",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__55527",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}