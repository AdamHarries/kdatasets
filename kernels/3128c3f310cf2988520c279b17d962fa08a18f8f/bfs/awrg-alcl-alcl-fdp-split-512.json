{
  "name" : "awrg-alcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56426, const global int* restrict v__56427, const global int* restrict v__56428, const global int* restrict v__56429, int v__56430, int v__56431, global int* v__56449, global int* v__56433, local int* v__56444, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__56435; \n  int v__56437; \n  int v__33541; \n  /* Private Memory */\n  int v__56439_0;\n  \n  int v__56441_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4445 = v__56433; \n    local int v_w_id_56419; \n    if (get_local_id(0) == 0) {\n      v_w_id_56419 = atomic_inc(v_work_idx_4445); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_56419 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4443; \n        v_work_idx_4443 = 0; \n        int v_l_id_56420 = atomic_inc(&(v_work_idx_4443)); \n        while((v_l_id_56420 < v_MWidthC_1)){\n          int v_tmp_56500 = 0; \n          v__56435 = v_tmp_56500; \n          /* reduce_seq */\n          for (int v_i_56421 = 0; v_i_56421 < 512; v_i_56421 = (1 + v_i_56421)) {\n            int v_tmp_56501 = 0; \n            v__56437 = v_tmp_56501; \n            int v_index_56502 = v__56426[(v_l_id_56420 + (512 * v_MWidthC_1 * v_w_id_56419) + (v_MWidthC_1 * v_i_56421))]; \n            if (v_index_56502 < 0) {\n              v__56439_0 = v__56437; \n            } else {\n              if (v_index_56502 >= v_VLength_3) {\n                v__56439_0 = v__56437; \n              } else {\n                v__56439_0 = v__56428[v_index_56502]; \n              }\n            }\n            v__56441_0 = bool_and(v__56439_0, v__56427[(v_l_id_56420 + (512 * v_MWidthC_1 * v_w_id_56419) + (v_MWidthC_1 * v_i_56421))]); \n            v__56435 = bool_or(v__56441_0, v__56435); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56422 = 0; \n            v__56444[v_l_id_56420] = id(v__56435); \n          }\n          /* end map_seq */\n          v_l_id_56420 = atomic_inc(&(v_work_idx_4443)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4438; \n        v_work_idx_4438 = 0; \n        int v_l_id_56423 = atomic_inc(&(v_work_idx_4438)); \n        while((v_l_id_56423 < 1)){\n          int v_tmp_56505 = 0; \n          v__33541 = v_tmp_56505; \n          /* reduce_seq */\n          for (int v_i_56424 = 0; v_i_56424 < v_MWidthC_1; v_i_56424 = (1 + v_i_56424)) {\n            v__33541 = bool_or(v__33541, v__56444[(v_i_56424 + (v_MWidthC_1 * v_l_id_56423))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56425 = 0; \n            v__56449[v_w_id_56419] = doubleAndOr(v__33541, v__56430, v__56429[v_w_id_56419], v__56431); \n          }\n          /* end map_seq */\n          v_l_id_56423 = atomic_inc(&(v_work_idx_4438)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_56419 = atomic_inc(v_work_idx_4445); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__56426",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56427",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56428",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56429",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56430",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56431",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56433",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__56449",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__56444",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}