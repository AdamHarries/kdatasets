{
  "name" : "awrg-slcl-alcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__42181, const global int* restrict v__42182, const global int* restrict v__42183, const global int* restrict v__42184, int v__42185, int v__42186, global int* v__42204, global int* v__42194, global int* v__42188, local int* v__42199, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__42190; \n  int v__42195; \n  int v__33541; \n  /* Private Memory */\n  int v__42192_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3101 = v__42188; \n    local int v_w_id_42173; \n    if (get_local_id(0) == 0) {\n      v_w_id_42173 = atomic_inc(v_work_idx_3101); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42173 < v_MHeight_2)){\n      for (int v_l_id_42174 = get_local_id(0); v_l_id_42174 < v_MWidthC_1; v_l_id_42174 = (v_l_id_42174 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_42175 = 0; v_i_42175 < 32; v_i_42175 = (1 + v_i_42175)) {\n          int v_tmp_42263 = 0; \n          v__42190 = v_tmp_42263; \n          int v_index_42264 = v__42181[(v_l_id_42174 + (32 * v_MWidthC_1 * v_w_id_42173) + (v_MWidthC_1 * v_i_42175))]; \n          if (v_index_42264 < 0) {\n            v__42192_0 = v__42190; \n          } else {\n            if (v_index_42264 >= v_VLength_3) {\n              v__42192_0 = v__42190; \n            } else {\n              v__42192_0 = v__42183[v_index_42264]; \n            }\n          }\n          v__42194[(31 + (32 * v_MWidthC_1 * v_w_id_42173) + (-1 * v_i_42175) + (32 * v_l_id_42174))] = bool_and(v__42192_0, v__42182[(v_l_id_42174 + (32 * v_MWidthC_1 * v_w_id_42173) + (v_MWidthC_1 * v_i_42175))]); \n        }\n        /* end map_seq */\n        int v_tmp_42265 = 0; \n        v__42195 = v_tmp_42265; \n        /* reduce_seq */\n        for (int v_i_42176 = 0; v_i_42176 < 32; v_i_42176 = (1 + v_i_42176)) {\n          v__42195 = bool_or(v__42195, v__42194[(v_i_42176 + (32 * v_MWidthC_1 * v_w_id_42173) + (32 * v_l_id_42174))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_42177 = 0; \n          v__42199[v_l_id_42174] = id(v__42195); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3094; \n        v_work_idx_3094 = 0; \n        int v_l_id_42178 = atomic_inc(&(v_work_idx_3094)); \n        while((v_l_id_42178 < 1)){\n          int v_tmp_42268 = 0; \n          v__33541 = v_tmp_42268; \n          /* reduce_seq */\n          for (int v_i_42179 = 0; v_i_42179 < v_MWidthC_1; v_i_42179 = (1 + v_i_42179)) {\n            v__33541 = bool_or(v__33541, v__42199[(v_i_42179 + (v_MWidthC_1 * v_l_id_42178))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_42180 = 0; \n            v__42204[v_w_id_42173] = doubleAndOr(v__33541, v__42185, v__42184[v_w_id_42173], v__42186); \n          }\n          /* end map_seq */\n          v_l_id_42178 = atomic_inc(&(v_work_idx_3094)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42173 = atomic_inc(v_work_idx_3101); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__42181",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42182",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42183",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__42184",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__42185",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__42186",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__42194",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42188",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__42204",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__42199",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}