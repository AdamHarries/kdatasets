{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__36856, const global int* restrict v__36857, const global int* restrict v__36858, const global int* restrict v__36859, int v__36860, int v__36861, global int* v__36878, global int* v__36868, local int* v__36873, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__36864; \n  int v__36869; \n  int v__33541; \n  /* Private Memory */\n  int v__36866_0;\n  \n  for (int v_wg_id_36848 = get_group_id(0); v_wg_id_36848 < v_MHeight_2; v_wg_id_36848 = (v_wg_id_36848 + get_num_groups(0))) {\n    for (int v_l_id_36849 = get_local_id(0); v_l_id_36849 < v_MWidthC_1; v_l_id_36849 = (v_l_id_36849 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_36850 = 0; v_i_36850 < 16; v_i_36850 = (1 + v_i_36850)) {\n        int v_tmp_36943 = 0; \n        v__36864 = v_tmp_36943; \n        int v_index_36944 = v__36856[(v_l_id_36849 + (16 * v_MWidthC_1 * v_wg_id_36848) + (v_MWidthC_1 * v_i_36850))]; \n        if (v_index_36944 < 0) {\n          v__36866_0 = v__36864; \n        } else {\n          if (v_index_36944 >= v_VLength_3) {\n            v__36866_0 = v__36864; \n          } else {\n            v__36866_0 = v__36858[v_index_36944]; \n          }\n        }\n        v__36868[(15 + (16 * v_MWidthC_1 * v_wg_id_36848) + (-1 * v_i_36850) + (16 * v_l_id_36849))] = bool_and(v__36866_0, v__36857[(v_l_id_36849 + (16 * v_MWidthC_1 * v_wg_id_36848) + (v_MWidthC_1 * v_i_36850))]); \n      }\n      /* end map_seq */\n      int v_tmp_36945 = 0; \n      v__36869 = v_tmp_36945; \n      /* reduce_seq */\n      for (int v_i_36851 = 0; v_i_36851 < 16; v_i_36851 = (1 + v_i_36851)) {\n        v__36869 = bool_or(v__36869, v__36868[(v_i_36851 + (16 * v_MWidthC_1 * v_wg_id_36848) + (16 * v_l_id_36849))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36852 = 0; \n        v__36873[v_l_id_36849] = id(v__36869); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_36853 = get_local_id(0); \n      int v_tmp_36948 = 0; \n      v__33541 = v_tmp_36948; \n      /* reduce_seq */\n      for (int v_i_36854 = 0; v_i_36854 < v_MWidthC_1; v_i_36854 = (1 + v_i_36854)) {\n        v__33541 = bool_or(v__33541, v__36873[(v_i_36854 + (v_MWidthC_1 * v_l_id_36853))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36855 = 0; \n        v__36878[v_wg_id_36848] = doubleAndOr(v__33541, v__36860, v__36859[v_wg_id_36848], v__36861); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__36856",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36857",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36858",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__36859",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__36860",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__36861",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__36868",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__36878",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__36873",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}