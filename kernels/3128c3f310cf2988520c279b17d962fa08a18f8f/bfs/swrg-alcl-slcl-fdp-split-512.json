{
  "name" : "swrg-alcl-slcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__54468, const global int* restrict v__54469, const global int* restrict v__54470, const global int* restrict v__54471, int v__54472, int v__54473, global int* v__54490, local int* v__54485, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__54476; \n  int v__54478; \n  int v__33541; \n  /* Private Memory */\n  int v__54480_0;\n  \n  int v__54482_0;\n  \n  for (int v_wg_id_54461 = get_group_id(0); v_wg_id_54461 < v_MHeight_2; v_wg_id_54461 = (v_wg_id_54461 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_4250; \n      v_work_idx_4250 = 0; \n      int v_l_id_54462 = atomic_inc(&(v_work_idx_4250)); \n      while((v_l_id_54462 < v_MWidthC_1)){\n        int v_tmp_54547 = 0; \n        v__54476 = v_tmp_54547; \n        /* reduce_seq */\n        for (int v_i_54463 = 0; v_i_54463 < 512; v_i_54463 = (1 + v_i_54463)) {\n          int v_tmp_54548 = 0; \n          v__54478 = v_tmp_54548; \n          int v_index_54549 = v__54468[(v_l_id_54462 + (512 * v_MWidthC_1 * v_wg_id_54461) + (v_MWidthC_1 * v_i_54463))]; \n          if (v_index_54549 < 0) {\n            v__54480_0 = v__54478; \n          } else {\n            if (v_index_54549 >= v_VLength_3) {\n              v__54480_0 = v__54478; \n            } else {\n              v__54480_0 = v__54470[v_index_54549]; \n            }\n          }\n          v__54482_0 = bool_and(v__54480_0, v__54469[(v_l_id_54462 + (512 * v_MWidthC_1 * v_wg_id_54461) + (v_MWidthC_1 * v_i_54463))]); \n          v__54476 = bool_or(v__54482_0, v__54476); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_54464 = 0; \n          v__54485[v_l_id_54462] = id(v__54476); \n        }\n        /* end map_seq */\n        v_l_id_54462 = atomic_inc(&(v_work_idx_4250)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_54465 = get_local_id(0); \n      int v_tmp_54552 = 0; \n      v__33541 = v_tmp_54552; \n      /* reduce_seq */\n      for (int v_i_54466 = 0; v_i_54466 < v_MWidthC_1; v_i_54466 = (1 + v_i_54466)) {\n        v__33541 = bool_or(v__33541, v__54485[(v_i_54466 + (v_MWidthC_1 * v_l_id_54465))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_54467 = 0; \n        v__54490[v_wg_id_54461] = doubleAndOr(v__33541, v__54472, v__54471[v_wg_id_54461], v__54473); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__54468",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54469",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54470",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__54471",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__54472",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__54473",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__54490",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__54485",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}