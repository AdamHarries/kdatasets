{
  "name" : "swrg-slcl-sdp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49951, const global int* restrict v__49952, const global int* restrict v__49953, const global int* restrict v__49954, int v__49955, int v__49956, global int* v__49969, global int* v__49963, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49959; \n  int v__49964; \n  /* Private Memory */\n  int v__49961_0;\n  \n  for (int v_wg_id_49946 = get_group_id(0); v_wg_id_49946 < ((v_MHeight_2)/(256)); v_wg_id_49946 = (v_wg_id_49946 + get_num_groups(0))) {\n    for (int v_l_id_49947 = get_local_id(0); v_l_id_49947 < 256; v_l_id_49947 = (v_l_id_49947 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_49948 = 0; v_i_49948 < v_MWidthC_1; v_i_49948 = (1 + v_i_49948)) {\n        int v_tmp_50013 = 0; \n        v__49959 = v_tmp_50013; \n        int v_index_50014 = v__49951[(v_i_49948 + (256 * v_MWidthC_1 * v_wg_id_49946) + (v_MWidthC_1 * v_l_id_49947))]; \n        if (v_index_50014 < 0) {\n          v__49961_0 = v__49959; \n        } else {\n          if (v_index_50014 >= v_VLength_3) {\n            v__49961_0 = v__49959; \n          } else {\n            v__49961_0 = v__49953[v_index_50014]; \n          }\n        }\n        v__49963[(-1 + v_MWidthC_1 + (256 * v_MWidthC_1 * v_wg_id_49946) + (-1 * v_i_49948) + (v_MWidthC_1 * v_l_id_49947))] = bool_and(v__49961_0, v__49952[(v_i_49948 + (256 * v_MWidthC_1 * v_wg_id_49946) + (v_MWidthC_1 * v_l_id_49947))]); \n      }\n      /* end map_seq */\n      int v_tmp_50015 = 0; \n      v__49964 = v_tmp_50015; \n      /* reduce_seq */\n      for (int v_i_49949 = 0; v_i_49949 < v_MWidthC_1; v_i_49949 = (1 + v_i_49949)) {\n        v__49964 = bool_or(v__49964, v__49963[(v_i_49949 + (256 * v_MWidthC_1 * v_wg_id_49946) + (v_MWidthC_1 * v_l_id_49947))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_49950 = 0; \n        v__49969[(v_l_id_49947 + (256 * v_wg_id_49946))] = doubleAndOr(v__49964, v__49955, v__49954[(v_l_id_49947 + (256 * v_wg_id_49946))], v__49956); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__49951",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49952",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49953",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49954",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49955",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49956",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49963",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__49969",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}