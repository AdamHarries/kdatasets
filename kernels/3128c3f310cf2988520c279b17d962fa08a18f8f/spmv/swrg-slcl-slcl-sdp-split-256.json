{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__26341, const global float* restrict v__26342, const global float* restrict v__26343, const global float* restrict v__26344, float v__26345, float v__26346, global float* v__26363, global float* v__26353, local float* v__26358, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__26349; \n  float v__26354; \n  float v__9698; \n  /* Private Memory */\n  float v__26351_0;\n  \n  for (int v_wg_id_26333 = get_group_id(0); v_wg_id_26333 < v_MHeight_2; v_wg_id_26333 = (v_wg_id_26333 + get_num_groups(0))) {\n    for (int v_l_id_26334 = get_local_id(0); v_l_id_26334 < v_MWidthC_1; v_l_id_26334 = (v_l_id_26334 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_26335 = 0; v_i_26335 < 256; v_i_26335 = (1 + v_i_26335)) {\n        float v_tmp_26428 = 0.0f; \n        v__26349 = v_tmp_26428; \n        int v_index_26429 = v__26341[(v_l_id_26334 + (256 * v_MWidthC_1 * v_wg_id_26333) + (v_MWidthC_1 * v_i_26335))]; \n        if (v_index_26429 < 0) {\n          v__26351_0 = v__26349; \n        } else {\n          if (v_index_26429 >= v_VLength_3) {\n            v__26351_0 = v__26349; \n          } else {\n            v__26351_0 = v__26343[v_index_26429]; \n          }\n        }\n        v__26353[(255 + (256 * v_MWidthC_1 * v_wg_id_26333) + (-1 * v_i_26335) + (256 * v_l_id_26334))] = mult(v__26351_0, v__26342[(v_l_id_26334 + (256 * v_MWidthC_1 * v_wg_id_26333) + (v_MWidthC_1 * v_i_26335))]); \n      }\n      /* end map_seq */\n      float v_tmp_26430 = 0.0f; \n      v__26354 = v_tmp_26430; \n      /* reduce_seq */\n      for (int v_i_26336 = 0; v_i_26336 < 256; v_i_26336 = (1 + v_i_26336)) {\n        v__26354 = add(v__26354, v__26353[(v_i_26336 + (256 * v_MWidthC_1 * v_wg_id_26333) + (256 * v_l_id_26334))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_26337 = 0; \n        v__26358[v_l_id_26334] = id(v__26354); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_26338 = get_local_id(0); \n      float v_tmp_26433 = 0.0f; \n      v__9698 = v_tmp_26433; \n      /* reduce_seq */\n      for (int v_i_26339 = 0; v_i_26339 < v_MWidthC_1; v_i_26339 = (1 + v_i_26339)) {\n        v__9698 = add(v__9698, v__26358[(v_i_26339 + (v_MWidthC_1 * v_l_id_26338))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_26340 = 0; \n        v__26363[v_wg_id_26333] = doubleMultiplyAdd(v__9698, v__26345, v__26344[v_wg_id_26333], v__26346); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__26341",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__26342",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__26343",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__26344",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__26345",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__26346",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__26353",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__26363",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__26358",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}