{
  "name" : "swrg-slcl-slcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nkernel void KERNEL(const global int* restrict v__29885, const global float* restrict v__29886, const global float* restrict v__29887, const global float* restrict v__29888, float v__29889, float v__29890, global float* v__29909, local float* v__29904, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__29893; \n  float v__29895; \n  float v__9698; \n  /* Private Memory */\n  float v__29897_0;\n  \n  float v__29899_0;\n  \n  int v__29903_0;\n  \n  for (int v_wg_id_29878 = get_group_id(0); v_wg_id_29878 < v_MHeight_2; v_wg_id_29878 = (v_wg_id_29878 + get_num_groups(0))) {\n    for (int v_l_id_29879 = get_local_id(0); v_l_id_29879 < v_MWidthC_1; v_l_id_29879 = (v_l_id_29879 + get_local_size(0))) {\n      float v_tmp_29977 = 0.0f; \n      v__29893 = v_tmp_29977; \n      /* reduce_while_seq */\n      for (int v_i_29880 = 0; v_i_29880 < 512; v_i_29880 = (1 + v_i_29880)) {\n        v__29903_0 = check(v__29893, v__29885[(v_l_id_29879 + (512 * v_MWidthC_1 * v_wg_id_29878) + (v_MWidthC_1 * v_i_29880))]); \n        if (v__29903_0) {\n        } else {\n          break;\n        }\n        float v_tmp_29978 = 0.0f; \n        v__29895 = v_tmp_29978; \n        int v_index_29979 = v__29885[(v_l_id_29879 + (512 * v_MWidthC_1 * v_wg_id_29878) + (v_MWidthC_1 * v_i_29880))]; \n        if (v_index_29979 < 0) {\n          v__29897_0 = v__29895; \n        } else {\n          if (v_index_29979 >= v_VLength_3) {\n            v__29897_0 = v__29895; \n          } else {\n            v__29897_0 = v__29887[v_index_29979]; \n          }\n        }\n        v__29899_0 = mult(v__29897_0, v__29886[(v_l_id_29879 + (512 * v_MWidthC_1 * v_wg_id_29878) + (v_MWidthC_1 * v_i_29880))]); \n        v__29893 = add(v__29899_0, v__29893); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_29881 = 0; \n        v__29904[v_l_id_29879] = id(v__29893); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_29882 = get_local_id(0); \n      float v_tmp_29982 = 0.0f; \n      v__9698 = v_tmp_29982; \n      /* reduce_seq */\n      for (int v_i_29883 = 0; v_i_29883 < v_MWidthC_1; v_i_29883 = (1 + v_i_29883)) {\n        v__9698 = add(v__9698, v__29904[(v_i_29883 + (v_MWidthC_1 * v_l_id_29882))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_29884 = 0; \n        v__29909[v_wg_id_29878] = doubleMultiplyAdd(v__9698, v__29889, v__29888[v_wg_id_29878], v__29890); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__29885",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__29886",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__29887",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__29888",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__29889",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__29890",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__29909",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__29904",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}