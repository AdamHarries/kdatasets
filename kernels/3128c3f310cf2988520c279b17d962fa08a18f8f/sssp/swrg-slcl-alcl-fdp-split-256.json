{
  "name" : "swrg-slcl-alcl-fdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__74458, const global float* restrict v__74459, const global float* restrict v__74460, const global float* restrict v__74461, float v__74462, float v__74463, global float* v__74480, local float* v__74475, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__74466; \n  float v__74468; \n  float v__57389; \n  /* Private Memory */\n  float v__74470_0;\n  \n  float v__74472_0;\n  \n  for (int v_wg_id_74451 = get_group_id(0); v_wg_id_74451 < v_MHeight_2; v_wg_id_74451 = (v_wg_id_74451 + get_num_groups(0))) {\n    for (int v_l_id_74452 = get_local_id(0); v_l_id_74452 < v_MWidthC_1; v_l_id_74452 = (v_l_id_74452 + get_local_size(0))) {\n      float v_tmp_74541 = 3.4028235E38f; \n      v__74466 = v_tmp_74541; \n      /* reduce_seq */\n      for (int v_i_74453 = 0; v_i_74453 < 256; v_i_74453 = (1 + v_i_74453)) {\n        float v_tmp_74542 = 3.4028235E38f; \n        v__74468 = v_tmp_74542; \n        int v_index_74543 = v__74458[(v_l_id_74452 + (256 * v_MWidthC_1 * v_wg_id_74451) + (v_MWidthC_1 * v_i_74453))]; \n        if (v_index_74543 < 0) {\n          v__74470_0 = v__74468; \n        } else {\n          if (v_index_74543 >= v_VLength_3) {\n            v__74470_0 = v__74468; \n          } else {\n            v__74470_0 = v__74460[v_index_74543]; \n          }\n        }\n        v__74472_0 = absadd(v__74470_0, v__74459[(v_l_id_74452 + (256 * v_MWidthC_1 * v_wg_id_74451) + (v_MWidthC_1 * v_i_74453))]); \n        v__74466 = clmin(v__74472_0, v__74466); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74454 = 0; \n        v__74475[v_l_id_74452] = id(v__74466); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_6114; \n      v_work_idx_6114 = 0; \n      int v_l_id_74455 = atomic_inc(&(v_work_idx_6114)); \n      while((v_l_id_74455 < 1)){\n        float v_tmp_74546 = 3.4028235E38f; \n        v__57389 = v_tmp_74546; \n        /* reduce_seq */\n        for (int v_i_74456 = 0; v_i_74456 < v_MWidthC_1; v_i_74456 = (1 + v_i_74456)) {\n          v__57389 = clmin(v__57389, v__74475[(v_i_74456 + (v_MWidthC_1 * v_l_id_74455))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_74457 = 0; \n          v__74480[v_wg_id_74451] = doubleMultiplyAdd(v__57389, v__74462, v__74461[v_wg_id_74451], v__74463); \n        }\n        /* end map_seq */\n        v_l_id_74455 = atomic_inc(&(v_work_idx_6114)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__74458",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74459",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74460",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74461",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74462",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74463",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__74480",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__74475",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}