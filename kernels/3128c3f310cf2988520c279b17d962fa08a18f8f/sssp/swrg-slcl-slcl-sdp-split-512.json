{
  "name" : "swrg-slcl-slcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__77364, const global float* restrict v__77365, const global float* restrict v__77366, const global float* restrict v__77367, float v__77368, float v__77369, global float* v__77386, global float* v__77376, local float* v__77381, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77372; \n  float v__77377; \n  float v__57389; \n  /* Private Memory */\n  float v__77374_0;\n  \n  for (int v_wg_id_77356 = get_group_id(0); v_wg_id_77356 < v_MHeight_2; v_wg_id_77356 = (v_wg_id_77356 + get_num_groups(0))) {\n    for (int v_l_id_77357 = get_local_id(0); v_l_id_77357 < v_MWidthC_1; v_l_id_77357 = (v_l_id_77357 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_77358 = 0; v_i_77358 < 512; v_i_77358 = (1 + v_i_77358)) {\n        float v_tmp_77451 = 3.4028235E38f; \n        v__77372 = v_tmp_77451; \n        int v_index_77452 = v__77364[(v_l_id_77357 + (512 * v_MWidthC_1 * v_wg_id_77356) + (v_MWidthC_1 * v_i_77358))]; \n        if (v_index_77452 < 0) {\n          v__77374_0 = v__77372; \n        } else {\n          if (v_index_77452 >= v_VLength_3) {\n            v__77374_0 = v__77372; \n          } else {\n            v__77374_0 = v__77366[v_index_77452]; \n          }\n        }\n        v__77376[(511 + (512 * v_MWidthC_1 * v_wg_id_77356) + (-1 * v_i_77358) + (512 * v_l_id_77357))] = absadd(v__77374_0, v__77365[(v_l_id_77357 + (512 * v_MWidthC_1 * v_wg_id_77356) + (v_MWidthC_1 * v_i_77358))]); \n      }\n      /* end map_seq */\n      float v_tmp_77453 = 3.4028235E38f; \n      v__77377 = v_tmp_77453; \n      /* reduce_seq */\n      for (int v_i_77359 = 0; v_i_77359 < 512; v_i_77359 = (1 + v_i_77359)) {\n        v__77377 = clmin(v__77377, v__77376[(v_i_77359 + (512 * v_MWidthC_1 * v_wg_id_77356) + (512 * v_l_id_77357))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77360 = 0; \n        v__77381[v_l_id_77357] = id(v__77377); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_77361 = get_local_id(0); \n      float v_tmp_77456 = 3.4028235E38f; \n      v__57389 = v_tmp_77456; \n      /* reduce_seq */\n      for (int v_i_77362 = 0; v_i_77362 < v_MWidthC_1; v_i_77362 = (1 + v_i_77362)) {\n        v__57389 = clmin(v__57389, v__77381[(v_i_77362 + (v_MWidthC_1 * v_l_id_77361))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77363 = 0; \n        v__77386[v_wg_id_77356] = doubleMultiplyAdd(v__57389, v__77368, v__77367[v_wg_id_77356], v__77369); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__77364",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77365",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77366",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77367",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__77368",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77369",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__77376",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__77386",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__77381",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}