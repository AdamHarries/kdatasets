{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__70700, const global float* restrict v__70701, const global float* restrict v__70702, const global float* restrict v__70703, float v__70704, float v__70705, global float* v__70722, global float* v__70712, local float* v__70717, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__70708; \n  float v__70713; \n  float v__57389; \n  /* Private Memory */\n  float v__70710_0;\n  \n  for (int v_wg_id_70692 = get_group_id(0); v_wg_id_70692 < v_MHeight_2; v_wg_id_70692 = (v_wg_id_70692 + get_num_groups(0))) {\n    for (int v_l_id_70693 = get_local_id(0); v_l_id_70693 < v_MWidthC_1; v_l_id_70693 = (v_l_id_70693 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_70694 = 0; v_i_70694 < 128; v_i_70694 = (1 + v_i_70694)) {\n        float v_tmp_70787 = 3.4028235E38f; \n        v__70708 = v_tmp_70787; \n        int v_index_70788 = v__70700[(v_l_id_70693 + (128 * v_MWidthC_1 * v_wg_id_70692) + (v_MWidthC_1 * v_i_70694))]; \n        if (v_index_70788 < 0) {\n          v__70710_0 = v__70708; \n        } else {\n          if (v_index_70788 >= v_VLength_3) {\n            v__70710_0 = v__70708; \n          } else {\n            v__70710_0 = v__70702[v_index_70788]; \n          }\n        }\n        v__70712[(127 + (128 * v_MWidthC_1 * v_wg_id_70692) + (-1 * v_i_70694) + (128 * v_l_id_70693))] = absadd(v__70710_0, v__70701[(v_l_id_70693 + (128 * v_MWidthC_1 * v_wg_id_70692) + (v_MWidthC_1 * v_i_70694))]); \n      }\n      /* end map_seq */\n      float v_tmp_70789 = 3.4028235E38f; \n      v__70713 = v_tmp_70789; \n      /* reduce_seq */\n      for (int v_i_70695 = 0; v_i_70695 < 128; v_i_70695 = (1 + v_i_70695)) {\n        v__70713 = clmin(v__70713, v__70712[(v_i_70695 + (128 * v_MWidthC_1 * v_wg_id_70692) + (128 * v_l_id_70693))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_70696 = 0; \n        v__70717[v_l_id_70693] = id(v__70713); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_70697 = get_local_id(0); \n      float v_tmp_70792 = 3.4028235E38f; \n      v__57389 = v_tmp_70792; \n      /* reduce_seq */\n      for (int v_i_70698 = 0; v_i_70698 < v_MWidthC_1; v_i_70698 = (1 + v_i_70698)) {\n        v__57389 = clmin(v__57389, v__70717[(v_i_70698 + (v_MWidthC_1 * v_l_id_70697))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_70699 = 0; \n        v__70722[v_wg_id_70692] = doubleMultiplyAdd(v__57389, v__70704, v__70703[v_wg_id_70692], v__70705); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__70700",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__70701",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__70702",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__70703",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__70704",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__70705",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__70712",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__70722",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__70717",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}