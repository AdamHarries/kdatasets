{
  "name" : "swrg-slcl-slcl-edp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nkernel void KERNEL(const global int* restrict v__70912, const global float* restrict v__70913, const global float* restrict v__70914, const global float* restrict v__70915, float v__70916, float v__70917, global float* v__70936, local float* v__70931, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__70920; \n  float v__70922; \n  float v__57389; \n  /* Private Memory */\n  float v__70924_0;\n  \n  float v__70926_0;\n  \n  int v__70930_0;\n  \n  for (int v_wg_id_70905 = get_group_id(0); v_wg_id_70905 < v_MHeight_2; v_wg_id_70905 = (v_wg_id_70905 + get_num_groups(0))) {\n    for (int v_l_id_70906 = get_local_id(0); v_l_id_70906 < v_MWidthC_1; v_l_id_70906 = (v_l_id_70906 + get_local_size(0))) {\n      float v_tmp_71004 = 3.4028235E38f; \n      v__70920 = v_tmp_71004; \n      /* reduce_while_seq */\n      for (int v_i_70907 = 0; v_i_70907 < 128; v_i_70907 = (1 + v_i_70907)) {\n        v__70930_0 = check(v__70920, v__70912[(v_l_id_70906 + (128 * v_MWidthC_1 * v_wg_id_70905) + (v_MWidthC_1 * v_i_70907))]); \n        if (v__70930_0) {\n        } else {\n          break;\n        }\n        float v_tmp_71005 = 3.4028235E38f; \n        v__70922 = v_tmp_71005; \n        int v_index_71006 = v__70912[(v_l_id_70906 + (128 * v_MWidthC_1 * v_wg_id_70905) + (v_MWidthC_1 * v_i_70907))]; \n        if (v_index_71006 < 0) {\n          v__70924_0 = v__70922; \n        } else {\n          if (v_index_71006 >= v_VLength_3) {\n            v__70924_0 = v__70922; \n          } else {\n            v__70924_0 = v__70914[v_index_71006]; \n          }\n        }\n        v__70926_0 = absadd(v__70924_0, v__70913[(v_l_id_70906 + (128 * v_MWidthC_1 * v_wg_id_70905) + (v_MWidthC_1 * v_i_70907))]); \n        v__70920 = clmin(v__70926_0, v__70920); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_70908 = 0; \n        v__70931[v_l_id_70906] = id(v__70920); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_70909 = get_local_id(0); \n      float v_tmp_71009 = 3.4028235E38f; \n      v__57389 = v_tmp_71009; \n      /* reduce_seq */\n      for (int v_i_70910 = 0; v_i_70910 < v_MWidthC_1; v_i_70910 = (1 + v_i_70910)) {\n        v__57389 = clmin(v__57389, v__70931[(v_i_70910 + (v_MWidthC_1 * v_l_id_70909))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_70911 = 0; \n        v__70936[v_wg_id_70905] = doubleMultiplyAdd(v__57389, v__70916, v__70915[v_wg_id_70905], v__70917); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__70912",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__70913",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__70914",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__70915",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__70916",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__70917",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__70936",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__70931",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}