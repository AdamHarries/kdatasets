{
  "name" : "swrg-slcl-slcl-edp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nkernel void KERNEL(const global int* restrict v__67580, const global float* restrict v__67581, const global float* restrict v__67582, const global float* restrict v__67583, float v__67584, float v__67585, global float* v__67604, local float* v__67599, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__67588; \n  float v__67590; \n  float v__57389; \n  /* Private Memory */\n  float v__67592_0;\n  \n  float v__67594_0;\n  \n  int v__67598_0;\n  \n  for (int v_wg_id_67573 = get_group_id(0); v_wg_id_67573 < v_MHeight_2; v_wg_id_67573 = (v_wg_id_67573 + get_num_groups(0))) {\n    for (int v_l_id_67574 = get_local_id(0); v_l_id_67574 < v_MWidthC_1; v_l_id_67574 = (v_l_id_67574 + get_local_size(0))) {\n      float v_tmp_67672 = 3.4028235E38f; \n      v__67588 = v_tmp_67672; \n      /* reduce_while_seq */\n      for (int v_i_67575 = 0; v_i_67575 < 64; v_i_67575 = (1 + v_i_67575)) {\n        v__67598_0 = check(v__67588, v__67580[(v_l_id_67574 + (64 * v_MWidthC_1 * v_wg_id_67573) + (v_MWidthC_1 * v_i_67575))]); \n        if (v__67598_0) {\n        } else {\n          break;\n        }\n        float v_tmp_67673 = 3.4028235E38f; \n        v__67590 = v_tmp_67673; \n        int v_index_67674 = v__67580[(v_l_id_67574 + (64 * v_MWidthC_1 * v_wg_id_67573) + (v_MWidthC_1 * v_i_67575))]; \n        if (v_index_67674 < 0) {\n          v__67592_0 = v__67590; \n        } else {\n          if (v_index_67674 >= v_VLength_3) {\n            v__67592_0 = v__67590; \n          } else {\n            v__67592_0 = v__67582[v_index_67674]; \n          }\n        }\n        v__67594_0 = absadd(v__67592_0, v__67581[(v_l_id_67574 + (64 * v_MWidthC_1 * v_wg_id_67573) + (v_MWidthC_1 * v_i_67575))]); \n        v__67588 = clmin(v__67594_0, v__67588); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_67576 = 0; \n        v__67599[v_l_id_67574] = id(v__67588); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_67577 = get_local_id(0); \n      float v_tmp_67677 = 3.4028235E38f; \n      v__57389 = v_tmp_67677; \n      /* reduce_seq */\n      for (int v_i_67578 = 0; v_i_67578 < v_MWidthC_1; v_i_67578 = (1 + v_i_67578)) {\n        v__57389 = clmin(v__57389, v__67599[(v_i_67578 + (v_MWidthC_1 * v_l_id_67577))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_67579 = 0; \n        v__67604[v_wg_id_67573] = doubleMultiplyAdd(v__57389, v__67584, v__67583[v_wg_id_67573], v__67585); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__67580",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__67581",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__67582",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__67583",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__67584",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__67585",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__67604",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__67599",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}