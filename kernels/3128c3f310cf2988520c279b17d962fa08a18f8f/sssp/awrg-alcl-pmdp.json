{
  "name" : "awrg-alcl-pmdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__57006, const global float* restrict v__57007, const global float* restrict v__57008, const global float* restrict v__57009, float v__57010, float v__57011, global float* v__57025, global float* v__57019, global int* v__57013, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__57015; \n  float v__57020; \n  /* Private Memory */\n  float v__57017_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4495 = v__57013; \n    local int v_w_id_57002; \n    if (get_local_id(0) == 0) {\n      v_w_id_57002 = atomic_inc(v_work_idx_4495); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_57002 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_l_id_4493; \n        v_l_id_4493 = 0; \n        int v_l_id_57003 = atomic_inc(&(v_l_id_4493)); \n        while((v_l_id_57003 < v_MWidthC_1)){\n          float v_tmp_57055 = 3.4028235E38f; \n          v__57015 = v_tmp_57055; \n          int v_index_57056 = v__57006[(v_l_id_57003 + (v_MWidthC_1 * v_w_id_57002))]; \n          if (v_index_57056 < 0) {\n            v__57017_0 = v__57015; \n          } else {\n            if (v_index_57056 >= v_VLength_3) {\n              v__57017_0 = v__57015; \n            } else {\n              v__57017_0 = v__57008[v_index_57056]; \n            }\n          }\n          v__57019[(-1 + v_MWidthC_1 + (-1 * v_l_id_57003) + (v_MWidthC_1 * v_w_id_57002))] = absadd(v__57017_0, v__57007[(v_l_id_57003 + (v_MWidthC_1 * v_w_id_57002))]); \n          v_l_id_57003 = atomic_inc(&(v_l_id_4493)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      float v_tmp_57057 = 3.4028235E38f; \n      v__57020 = v_tmp_57057; \n      /* reduce_seq */\n      for (int v_i_57004 = 0; v_i_57004 < v_MWidthC_1; v_i_57004 = (1 + v_i_57004)) {\n        v__57020 = clmin(v__57020, v__57019[(v_i_57004 + (v_MWidthC_1 * v_w_id_57002))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_57005 = 0; \n        v__57025[v_w_id_57002] = doubleMultiplyAdd(v__57020, v__57010, v__57009[v_w_id_57002], v__57011); \n      }\n      /* end map_seq */\n      if (get_local_id(0) == 0) {\n        v_w_id_57002 = atomic_inc(v_work_idx_4495); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__57006",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57007",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57008",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__57009",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57010",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57011",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__57019",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57013",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__57025",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}