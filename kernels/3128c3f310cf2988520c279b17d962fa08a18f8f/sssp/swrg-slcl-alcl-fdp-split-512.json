{
  "name" : "swrg-slcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__77790, const global float* restrict v__77791, const global float* restrict v__77792, const global float* restrict v__77793, float v__77794, float v__77795, global float* v__77812, local float* v__77807, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77798; \n  float v__77800; \n  float v__57389; \n  /* Private Memory */\n  float v__77802_0;\n  \n  float v__77804_0;\n  \n  for (int v_wg_id_77783 = get_group_id(0); v_wg_id_77783 < v_MHeight_2; v_wg_id_77783 = (v_wg_id_77783 + get_num_groups(0))) {\n    for (int v_l_id_77784 = get_local_id(0); v_l_id_77784 < v_MWidthC_1; v_l_id_77784 = (v_l_id_77784 + get_local_size(0))) {\n      float v_tmp_77873 = 3.4028235E38f; \n      v__77798 = v_tmp_77873; \n      /* reduce_seq */\n      for (int v_i_77785 = 0; v_i_77785 < 512; v_i_77785 = (1 + v_i_77785)) {\n        float v_tmp_77874 = 3.4028235E38f; \n        v__77800 = v_tmp_77874; \n        int v_index_77875 = v__77790[(v_l_id_77784 + (512 * v_MWidthC_1 * v_wg_id_77783) + (v_MWidthC_1 * v_i_77785))]; \n        if (v_index_77875 < 0) {\n          v__77802_0 = v__77800; \n        } else {\n          if (v_index_77875 >= v_VLength_3) {\n            v__77802_0 = v__77800; \n          } else {\n            v__77802_0 = v__77792[v_index_77875]; \n          }\n        }\n        v__77804_0 = absadd(v__77802_0, v__77791[(v_l_id_77784 + (512 * v_MWidthC_1 * v_wg_id_77783) + (v_MWidthC_1 * v_i_77785))]); \n        v__77798 = clmin(v__77804_0, v__77798); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77786 = 0; \n        v__77807[v_l_id_77784] = id(v__77798); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_6426; \n      v_work_idx_6426 = 0; \n      int v_l_id_77787 = atomic_inc(&(v_work_idx_6426)); \n      while((v_l_id_77787 < 1)){\n        float v_tmp_77878 = 3.4028235E38f; \n        v__57389 = v_tmp_77878; \n        /* reduce_seq */\n        for (int v_i_77788 = 0; v_i_77788 < v_MWidthC_1; v_i_77788 = (1 + v_i_77788)) {\n          v__57389 = clmin(v__57389, v__77807[(v_i_77788 + (v_MWidthC_1 * v_l_id_77787))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_77789 = 0; \n          v__77812[v_wg_id_77783] = doubleMultiplyAdd(v__57389, v__77794, v__77793[v_wg_id_77783], v__77795); \n        }\n        /* end map_seq */\n        v_l_id_77787 = atomic_inc(&(v_work_idx_6426)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__77790",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77791",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77792",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77793",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__77794",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77795",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__77812",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__77807",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}