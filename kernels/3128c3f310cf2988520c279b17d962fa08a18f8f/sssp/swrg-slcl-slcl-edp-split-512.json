{
  "name" : "swrg-slcl-slcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nkernel void KERNEL(const global int* restrict v__77576, const global float* restrict v__77577, const global float* restrict v__77578, const global float* restrict v__77579, float v__77580, float v__77581, global float* v__77600, local float* v__77595, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77584; \n  float v__77586; \n  float v__57389; \n  /* Private Memory */\n  float v__77588_0;\n  \n  float v__77590_0;\n  \n  int v__77594_0;\n  \n  for (int v_wg_id_77569 = get_group_id(0); v_wg_id_77569 < v_MHeight_2; v_wg_id_77569 = (v_wg_id_77569 + get_num_groups(0))) {\n    for (int v_l_id_77570 = get_local_id(0); v_l_id_77570 < v_MWidthC_1; v_l_id_77570 = (v_l_id_77570 + get_local_size(0))) {\n      float v_tmp_77668 = 3.4028235E38f; \n      v__77584 = v_tmp_77668; \n      /* reduce_while_seq */\n      for (int v_i_77571 = 0; v_i_77571 < 512; v_i_77571 = (1 + v_i_77571)) {\n        v__77594_0 = check(v__77584, v__77576[(v_l_id_77570 + (512 * v_MWidthC_1 * v_wg_id_77569) + (v_MWidthC_1 * v_i_77571))]); \n        if (v__77594_0) {\n        } else {\n          break;\n        }\n        float v_tmp_77669 = 3.4028235E38f; \n        v__77586 = v_tmp_77669; \n        int v_index_77670 = v__77576[(v_l_id_77570 + (512 * v_MWidthC_1 * v_wg_id_77569) + (v_MWidthC_1 * v_i_77571))]; \n        if (v_index_77670 < 0) {\n          v__77588_0 = v__77586; \n        } else {\n          if (v_index_77670 >= v_VLength_3) {\n            v__77588_0 = v__77586; \n          } else {\n            v__77588_0 = v__77578[v_index_77670]; \n          }\n        }\n        v__77590_0 = absadd(v__77588_0, v__77577[(v_l_id_77570 + (512 * v_MWidthC_1 * v_wg_id_77569) + (v_MWidthC_1 * v_i_77571))]); \n        v__77584 = clmin(v__77590_0, v__77584); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77572 = 0; \n        v__77595[v_l_id_77570] = id(v__77584); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_77573 = get_local_id(0); \n      float v_tmp_77673 = 3.4028235E38f; \n      v__57389 = v_tmp_77673; \n      /* reduce_seq */\n      for (int v_i_77574 = 0; v_i_77574 < v_MWidthC_1; v_i_77574 = (1 + v_i_77574)) {\n        v__57389 = clmin(v__57389, v__77595[(v_i_77574 + (v_MWidthC_1 * v_l_id_77573))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77575 = 0; \n        v__77600[v_wg_id_77569] = doubleMultiplyAdd(v__57389, v__77580, v__77579[v_wg_id_77569], v__77581); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__77576",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77577",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77578",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77579",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__77580",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77581",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__77600",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__77595",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}