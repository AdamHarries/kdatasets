{
  "name" : "swrg-slcl-slcl-edp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nkernel void KERNEL(const global int* restrict v__74244, const global float* restrict v__74245, const global float* restrict v__74246, const global float* restrict v__74247, float v__74248, float v__74249, global float* v__74268, local float* v__74263, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__74252; \n  float v__74254; \n  float v__57389; \n  /* Private Memory */\n  float v__74256_0;\n  \n  float v__74258_0;\n  \n  int v__74262_0;\n  \n  for (int v_wg_id_74237 = get_group_id(0); v_wg_id_74237 < v_MHeight_2; v_wg_id_74237 = (v_wg_id_74237 + get_num_groups(0))) {\n    for (int v_l_id_74238 = get_local_id(0); v_l_id_74238 < v_MWidthC_1; v_l_id_74238 = (v_l_id_74238 + get_local_size(0))) {\n      float v_tmp_74336 = 3.4028235E38f; \n      v__74252 = v_tmp_74336; \n      /* reduce_while_seq */\n      for (int v_i_74239 = 0; v_i_74239 < 256; v_i_74239 = (1 + v_i_74239)) {\n        v__74262_0 = check(v__74252, v__74244[(v_l_id_74238 + (256 * v_MWidthC_1 * v_wg_id_74237) + (v_MWidthC_1 * v_i_74239))]); \n        if (v__74262_0) {\n        } else {\n          break;\n        }\n        float v_tmp_74337 = 3.4028235E38f; \n        v__74254 = v_tmp_74337; \n        int v_index_74338 = v__74244[(v_l_id_74238 + (256 * v_MWidthC_1 * v_wg_id_74237) + (v_MWidthC_1 * v_i_74239))]; \n        if (v_index_74338 < 0) {\n          v__74256_0 = v__74254; \n        } else {\n          if (v_index_74338 >= v_VLength_3) {\n            v__74256_0 = v__74254; \n          } else {\n            v__74256_0 = v__74246[v_index_74338]; \n          }\n        }\n        v__74258_0 = absadd(v__74256_0, v__74245[(v_l_id_74238 + (256 * v_MWidthC_1 * v_wg_id_74237) + (v_MWidthC_1 * v_i_74239))]); \n        v__74252 = clmin(v__74258_0, v__74252); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74240 = 0; \n        v__74263[v_l_id_74238] = id(v__74252); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_74241 = get_local_id(0); \n      float v_tmp_74341 = 3.4028235E38f; \n      v__57389 = v_tmp_74341; \n      /* reduce_seq */\n      for (int v_i_74242 = 0; v_i_74242 < v_MWidthC_1; v_i_74242 = (1 + v_i_74242)) {\n        v__57389 = clmin(v__57389, v__74263[(v_i_74242 + (v_MWidthC_1 * v_l_id_74241))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74243 = 0; \n        v__74268[v_wg_id_74237] = doubleMultiplyAdd(v__57389, v__74248, v__74247[v_wg_id_74237], v__74249); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__74244",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74245",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74246",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74247",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74248",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74249",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__74268",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__74263",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}