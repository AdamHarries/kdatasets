{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__74032, const global float* restrict v__74033, const global float* restrict v__74034, const global float* restrict v__74035, float v__74036, float v__74037, global float* v__74054, global float* v__74044, local float* v__74049, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__74040; \n  float v__74045; \n  float v__57389; \n  /* Private Memory */\n  float v__74042_0;\n  \n  for (int v_wg_id_74024 = get_group_id(0); v_wg_id_74024 < v_MHeight_2; v_wg_id_74024 = (v_wg_id_74024 + get_num_groups(0))) {\n    for (int v_l_id_74025 = get_local_id(0); v_l_id_74025 < v_MWidthC_1; v_l_id_74025 = (v_l_id_74025 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_74026 = 0; v_i_74026 < 256; v_i_74026 = (1 + v_i_74026)) {\n        float v_tmp_74119 = 3.4028235E38f; \n        v__74040 = v_tmp_74119; \n        int v_index_74120 = v__74032[(v_l_id_74025 + (256 * v_MWidthC_1 * v_wg_id_74024) + (v_MWidthC_1 * v_i_74026))]; \n        if (v_index_74120 < 0) {\n          v__74042_0 = v__74040; \n        } else {\n          if (v_index_74120 >= v_VLength_3) {\n            v__74042_0 = v__74040; \n          } else {\n            v__74042_0 = v__74034[v_index_74120]; \n          }\n        }\n        v__74044[(255 + (256 * v_MWidthC_1 * v_wg_id_74024) + (-1 * v_i_74026) + (256 * v_l_id_74025))] = absadd(v__74042_0, v__74033[(v_l_id_74025 + (256 * v_MWidthC_1 * v_wg_id_74024) + (v_MWidthC_1 * v_i_74026))]); \n      }\n      /* end map_seq */\n      float v_tmp_74121 = 3.4028235E38f; \n      v__74045 = v_tmp_74121; \n      /* reduce_seq */\n      for (int v_i_74027 = 0; v_i_74027 < 256; v_i_74027 = (1 + v_i_74027)) {\n        v__74045 = clmin(v__74045, v__74044[(v_i_74027 + (256 * v_MWidthC_1 * v_wg_id_74024) + (256 * v_l_id_74025))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74028 = 0; \n        v__74049[v_l_id_74025] = id(v__74045); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_74029 = get_local_id(0); \n      float v_tmp_74124 = 3.4028235E38f; \n      v__57389 = v_tmp_74124; \n      /* reduce_seq */\n      for (int v_i_74030 = 0; v_i_74030 < v_MWidthC_1; v_i_74030 = (1 + v_i_74030)) {\n        v__57389 = clmin(v__57389, v__74049[(v_i_74030 + (v_MWidthC_1 * v_l_id_74029))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74031 = 0; \n        v__74054[v_wg_id_74024] = doubleMultiplyAdd(v__57389, v__74036, v__74035[v_wg_id_74024], v__74037); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__74032",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74033",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74034",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74035",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74036",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74037",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__74044",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__74054",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__74049",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}