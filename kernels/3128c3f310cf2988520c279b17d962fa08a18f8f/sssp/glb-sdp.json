{
  "name" : "glb-sdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56614, const global float* restrict v__56615, const global float* restrict v__56616, const global float* restrict v__56617, float v__56618, float v__56619, global float* v__56632, global float* v__56626, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__56622; \n  float v__56627; \n  /* Private Memory */\n  float v__56624_0;\n  \n  for (int v_gl_id_56610 = get_global_id(0); v_gl_id_56610 < v_MHeight_2; v_gl_id_56610 = (v_gl_id_56610 + get_global_size(0))) {\n    /* map_seq */\n    for (int v_i_56611 = 0; v_i_56611 < v_MWidthC_1; v_i_56611 = (1 + v_i_56611)) {\n      float v_tmp_56664 = 3.4028235E38f; \n      v__56622 = v_tmp_56664; \n      int v_index_56665 = v__56614[(v_i_56611 + (v_MWidthC_1 * v_gl_id_56610))]; \n      if (v_index_56665 < 0) {\n        v__56624_0 = v__56622; \n      } else {\n        if (v_index_56665 >= v_VLength_3) {\n          v__56624_0 = v__56622; \n        } else {\n          v__56624_0 = v__56616[v_index_56665]; \n        }\n      }\n      v__56626[(-1 + v_MWidthC_1 + (-1 * v_i_56611) + (v_MWidthC_1 * v_gl_id_56610))] = absadd(v__56624_0, v__56615[(v_i_56611 + (v_MWidthC_1 * v_gl_id_56610))]); \n    }\n    /* end map_seq */\n    float v_tmp_56666 = 3.4028235E38f; \n    v__56627 = v_tmp_56666; \n    /* reduce_seq */\n    for (int v_i_56612 = 0; v_i_56612 < v_MWidthC_1; v_i_56612 = (1 + v_i_56612)) {\n      v__56627 = clmin(v__56627, v__56626[(v_i_56612 + (v_MWidthC_1 * v_gl_id_56610))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_56613 = 0; \n      v__56632[v_gl_id_56610] = doubleMultiplyAdd(v__56627, v__56618, v__56617[v_gl_id_56610], v__56619); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__56614",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56615",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56616",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56617",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56618",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56619",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56626",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__56632",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}