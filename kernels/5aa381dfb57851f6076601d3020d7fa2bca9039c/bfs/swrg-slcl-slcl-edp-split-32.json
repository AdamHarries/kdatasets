{
  "name" : "swrg-slcl-slcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nkernel void KERNEL(const global int* restrict v__40261, const global int* restrict v__40262, const global int* restrict v__40263, const global int* restrict v__40264, int v__40265, int v__40266, global int* v__40285, local int* v__40280, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__40269; \n  int v__40271; \n  int v__33398; \n  /* Private Memory */\n  int v__40273_0;\n  \n  int v__40275_0;\n  \n  int v__40279_0;\n  \n  for (int v_wg_id_40254 = get_group_id(0); v_wg_id_40254 < v_MHeight_2; v_wg_id_40254 = (v_wg_id_40254 + get_num_groups(0))) {\n    for (int v_l_id_40255 = get_local_id(0); v_l_id_40255 < v_MWidthC_1; v_l_id_40255 = (v_l_id_40255 + get_local_size(0))) {\n      int v_tmp_40353 = 0; \n      v__40269 = v_tmp_40353; \n      /* reduce_while_seq */\n      for (int v_i_40256 = 0; v_i_40256 < 32; v_i_40256 = (1 + v_i_40256)) {\n        v__40279_0 = check(v__40269, v__40261[(v_l_id_40255 + (32 * v_MWidthC_1 * v_wg_id_40254) + (v_MWidthC_1 * v_i_40256))]); \n        if (v__40279_0) {\n        } else {\n          break;\n        }\n        int v_tmp_40354 = 0; \n        v__40271 = v_tmp_40354; \n        int v_index_40355 = v__40261[(v_l_id_40255 + (32 * v_MWidthC_1 * v_wg_id_40254) + (v_MWidthC_1 * v_i_40256))]; \n        if (v_index_40355 < 0) {\n          v__40273_0 = v__40271; \n        } else {\n          if (v_index_40355 >= v_VLength_3) {\n            v__40273_0 = v__40271; \n          } else {\n            v__40273_0 = v__40263[v_index_40355]; \n          }\n        }\n        v__40275_0 = bool_and(v__40273_0, v__40262[(v_l_id_40255 + (32 * v_MWidthC_1 * v_wg_id_40254) + (v_MWidthC_1 * v_i_40256))]); \n        v__40269 = bool_or(v__40275_0, v__40269); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40257 = 0; \n        v__40280[v_l_id_40255] = id(v__40269); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_40258 = get_local_id(0); \n      int v_tmp_40358 = 0; \n      v__33398 = v_tmp_40358; \n      /* reduce_seq */\n      for (int v_i_40259 = 0; v_i_40259 < v_MWidthC_1; v_i_40259 = (1 + v_i_40259)) {\n        v__33398 = bool_or(v__33398, v__40280[(v_i_40259 + (v_MWidthC_1 * v_l_id_40258))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40260 = 0; \n        v__40285[v_wg_id_40254] = doubleAndOr(v__33398, v__40265, v__40264[v_wg_id_40254], v__40266); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__40261",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40262",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40263",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__40264",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__40265",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__40266",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__40285",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__40280",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}