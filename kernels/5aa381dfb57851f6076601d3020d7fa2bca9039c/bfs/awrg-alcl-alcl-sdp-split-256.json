{
  "name" : "awrg-alcl-alcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__52868, const global int* restrict v__52869, const global int* restrict v__52870, const global int* restrict v__52871, int v__52872, int v__52873, global int* v__52891, global int* v__52875, global int* v__52881, local int* v__52886, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__52877; \n  int v__52882; \n  int v__33398; \n  /* Private Memory */\n  int v__52879_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4114 = v__52875; \n    local int v_w_id_52860; \n    if (get_local_id(0) == 0) {\n      v_w_id_52860 = atomic_inc(v_work_idx_4114); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_52860 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4112; \n        v_work_idx_4112 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_52861 = atomic_inc(&(v_work_idx_4112)); \n        while((v_l_id_52861 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_52862 = 0; v_i_52862 < 256; v_i_52862 = (1 + v_i_52862)) {\n            int v_tmp_52942 = 0; \n            v__52877 = v_tmp_52942; \n            int v_index_52943 = v__52868[(v_l_id_52861 + (256 * v_MWidthC_1 * v_w_id_52860) + (v_MWidthC_1 * v_i_52862))]; \n            if (v_index_52943 < 0) {\n              v__52879_0 = v__52877; \n            } else {\n              if (v_index_52943 >= v_VLength_3) {\n                v__52879_0 = v__52877; \n              } else {\n                v__52879_0 = v__52870[v_index_52943]; \n              }\n            }\n            v__52881[(v_i_52862 + (256 * v_MWidthC_1 * v_w_id_52860) + (256 * v_l_id_52861))] = bool_and(v__52879_0, v__52869[(v_l_id_52861 + (256 * v_MWidthC_1 * v_w_id_52860) + (v_MWidthC_1 * v_i_52862))]); \n          }\n          /* end map_seq */\n          int v_tmp_52944 = 0; \n          v__52882 = v_tmp_52944; \n          /* reduce_seq */\n          for (int v_i_52863 = 0; v_i_52863 < 256; v_i_52863 = (1 + v_i_52863)) {\n            v__52882 = bool_or(v__52882, v__52881[(v_i_52863 + (256 * v_MWidthC_1 * v_w_id_52860) + (256 * v_l_id_52861))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52864 = 0; \n            v__52886[v_l_id_52861] = id(v__52882); \n          }\n          /* end map_seq */\n          v_l_id_52861 = atomic_inc(&(v_work_idx_4112)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4106; \n        v_work_idx_4106 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_52865 = atomic_inc(&(v_work_idx_4106)); \n        while((v_l_id_52865 < 1)){\n          int v_tmp_52947 = 0; \n          v__33398 = v_tmp_52947; \n          /* reduce_seq */\n          for (int v_i_52866 = 0; v_i_52866 < v_MWidthC_1; v_i_52866 = (1 + v_i_52866)) {\n            v__33398 = bool_or(v__33398, v__52886[(v_i_52866 + (v_MWidthC_1 * v_l_id_52865))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52867 = 0; \n            v__52891[v_w_id_52860] = doubleAndOr(v__33398, v__52872, v__52871[v_w_id_52860], v__52873); \n          }\n          /* end map_seq */\n          v_l_id_52865 = atomic_inc(&(v_work_idx_4106)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_52860 = atomic_inc(v_work_idx_4114); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__52868",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52869",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52870",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__52871",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__52872",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__52873",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__52875",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__52881",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__52891",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__52886",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}