{
  "name" : "awrg-alcl-slcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nkernel void KERNEL(const global int* restrict v__42763, const global int* restrict v__42764, const global int* restrict v__42765, const global int* restrict v__42766, int v__42767, int v__42768, global int* v__42788, global int* v__42770, local int* v__42783, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__42772; \n  int v__42774; \n  int v__33398; \n  /* Private Memory */\n  int v__42776_0;\n  \n  int v__42778_0;\n  \n  int v__42782_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3166 = v__42770; \n    local int v_w_id_42756; \n    if (get_local_id(0) == 0) {\n      v_w_id_42756 = atomic_inc(v_work_idx_3166); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42756 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3164; \n        v_work_idx_3164 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_42757 = atomic_inc(&(v_work_idx_3164)); \n        while((v_l_id_42757 < v_MWidthC_1)){\n          int v_tmp_42846 = 0; \n          v__42772 = v_tmp_42846; \n          /* reduce_while_seq */\n          for (int v_i_42758 = 0; v_i_42758 < 32; v_i_42758 = (1 + v_i_42758)) {\n            v__42782_0 = check(v__42772, v__42763[(v_l_id_42757 + (32 * v_MWidthC_1 * v_w_id_42756) + (v_MWidthC_1 * v_i_42758))]); \n            if (v__42782_0) {\n            } else {\n              break;\n            }\n            int v_tmp_42847 = 0; \n            v__42774 = v_tmp_42847; \n            int v_index_42848 = v__42763[(v_l_id_42757 + (32 * v_MWidthC_1 * v_w_id_42756) + (v_MWidthC_1 * v_i_42758))]; \n            if (v_index_42848 < 0) {\n              v__42776_0 = v__42774; \n            } else {\n              if (v_index_42848 >= v_VLength_3) {\n                v__42776_0 = v__42774; \n              } else {\n                v__42776_0 = v__42765[v_index_42848]; \n              }\n            }\n            v__42778_0 = bool_and(v__42776_0, v__42764[(v_l_id_42757 + (32 * v_MWidthC_1 * v_w_id_42756) + (v_MWidthC_1 * v_i_42758))]); \n            v__42772 = bool_or(v__42778_0, v__42772); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_42759 = 0; \n            v__42783[v_l_id_42757] = id(v__42772); \n          }\n          /* end map_seq */\n          v_l_id_42757 = atomic_inc(&(v_work_idx_3164)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* iteration count is exactly 1 or less, no loop emitted */\n      if (get_local_id(0) < 1) {\n        int v_l_id_42760 = get_local_id(0); \n        int v_tmp_42851 = 0; \n        v__33398 = v_tmp_42851; \n        /* reduce_seq */\n        for (int v_i_42761 = 0; v_i_42761 < v_MWidthC_1; v_i_42761 = (1 + v_i_42761)) {\n          v__33398 = bool_or(v__33398, v__42783[(v_i_42761 + (v_MWidthC_1 * v_l_id_42760))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_42762 = 0; \n          v__42788[v_w_id_42756] = doubleAndOr(v__33398, v__42767, v__42766[v_w_id_42756], v__42768); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42756 = atomic_inc(v_work_idx_3166); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__42763",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42764",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42765",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__42766",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__42767",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__42768",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__42770",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__42788",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__42783",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}