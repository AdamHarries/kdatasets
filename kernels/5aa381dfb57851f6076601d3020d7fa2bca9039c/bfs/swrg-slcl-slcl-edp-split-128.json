{
  "name" : "swrg-slcl-slcl-edp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nkernel void KERNEL(const global int* restrict v__46929, const global int* restrict v__46930, const global int* restrict v__46931, const global int* restrict v__46932, int v__46933, int v__46934, global int* v__46953, local int* v__46948, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46937; \n  int v__46939; \n  int v__33398; \n  /* Private Memory */\n  int v__46941_0;\n  \n  int v__46943_0;\n  \n  int v__46947_0;\n  \n  for (int v_wg_id_46922 = get_group_id(0); v_wg_id_46922 < v_MHeight_2; v_wg_id_46922 = (v_wg_id_46922 + get_num_groups(0))) {\n    for (int v_l_id_46923 = get_local_id(0); v_l_id_46923 < v_MWidthC_1; v_l_id_46923 = (v_l_id_46923 + get_local_size(0))) {\n      int v_tmp_47021 = 0; \n      v__46937 = v_tmp_47021; \n      /* reduce_while_seq */\n      for (int v_i_46924 = 0; v_i_46924 < 128; v_i_46924 = (1 + v_i_46924)) {\n        v__46947_0 = check(v__46937, v__46929[(v_l_id_46923 + (128 * v_MWidthC_1 * v_wg_id_46922) + (v_MWidthC_1 * v_i_46924))]); \n        if (v__46947_0) {\n        } else {\n          break;\n        }\n        int v_tmp_47022 = 0; \n        v__46939 = v_tmp_47022; \n        int v_index_47023 = v__46929[(v_l_id_46923 + (128 * v_MWidthC_1 * v_wg_id_46922) + (v_MWidthC_1 * v_i_46924))]; \n        if (v_index_47023 < 0) {\n          v__46941_0 = v__46939; \n        } else {\n          if (v_index_47023 >= v_VLength_3) {\n            v__46941_0 = v__46939; \n          } else {\n            v__46941_0 = v__46931[v_index_47023]; \n          }\n        }\n        v__46943_0 = bool_and(v__46941_0, v__46930[(v_l_id_46923 + (128 * v_MWidthC_1 * v_wg_id_46922) + (v_MWidthC_1 * v_i_46924))]); \n        v__46937 = bool_or(v__46943_0, v__46937); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46925 = 0; \n        v__46948[v_l_id_46923] = id(v__46937); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_46926 = get_local_id(0); \n      int v_tmp_47026 = 0; \n      v__33398 = v_tmp_47026; \n      /* reduce_seq */\n      for (int v_i_46927 = 0; v_i_46927 < v_MWidthC_1; v_i_46927 = (1 + v_i_46927)) {\n        v__33398 = bool_or(v__33398, v__46948[(v_i_46927 + (v_MWidthC_1 * v_l_id_46926))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46928 = 0; \n        v__46953[v_wg_id_46922] = doubleAndOr(v__33398, v__46933, v__46932[v_wg_id_46922], v__46934); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__46929",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46930",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46931",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46932",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46933",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46934",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__46953",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__46948",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}