{
  "name" : "awrg-slcl-alcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__42043, const global int* restrict v__42044, const global int* restrict v__42045, const global int* restrict v__42046, int v__42047, int v__42048, global int* v__42066, global int* v__42050, global int* v__42056, local int* v__42061, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__42052; \n  int v__42057; \n  int v__33398; \n  /* Private Memory */\n  int v__42054_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3093 = v__42050; \n    local int v_w_id_42035; \n    if (get_local_id(0) == 0) {\n      v_w_id_42035 = atomic_inc(v_work_idx_3093); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_42035 < v_MHeight_2)){\n      for (int v_l_id_42036 = get_local_id(0); v_l_id_42036 < v_MWidthC_1; v_l_id_42036 = (v_l_id_42036 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_42037 = 0; v_i_42037 < 32; v_i_42037 = (1 + v_i_42037)) {\n          int v_tmp_42125 = 0; \n          v__42052 = v_tmp_42125; \n          int v_index_42126 = v__42043[(v_l_id_42036 + (32 * v_MWidthC_1 * v_w_id_42035) + (v_MWidthC_1 * v_i_42037))]; \n          if (v_index_42126 < 0) {\n            v__42054_0 = v__42052; \n          } else {\n            if (v_index_42126 >= v_VLength_3) {\n              v__42054_0 = v__42052; \n            } else {\n              v__42054_0 = v__42045[v_index_42126]; \n            }\n          }\n          v__42056[(v_i_42037 + (32 * v_MWidthC_1 * v_w_id_42035) + (32 * v_l_id_42036))] = bool_and(v__42054_0, v__42044[(v_l_id_42036 + (32 * v_MWidthC_1 * v_w_id_42035) + (v_MWidthC_1 * v_i_42037))]); \n        }\n        /* end map_seq */\n        int v_tmp_42127 = 0; \n        v__42057 = v_tmp_42127; \n        /* reduce_seq */\n        for (int v_i_42038 = 0; v_i_42038 < 32; v_i_42038 = (1 + v_i_42038)) {\n          v__42057 = bool_or(v__42057, v__42056[(v_i_42038 + (32 * v_MWidthC_1 * v_w_id_42035) + (32 * v_l_id_42036))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_42039 = 0; \n          v__42061[v_l_id_42036] = id(v__42057); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3086; \n        v_work_idx_3086 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_42040 = atomic_inc(&(v_work_idx_3086)); \n        while((v_l_id_42040 < 1)){\n          int v_tmp_42130 = 0; \n          v__33398 = v_tmp_42130; \n          /* reduce_seq */\n          for (int v_i_42041 = 0; v_i_42041 < v_MWidthC_1; v_i_42041 = (1 + v_i_42041)) {\n            v__33398 = bool_or(v__33398, v__42061[(v_i_42041 + (v_MWidthC_1 * v_l_id_42040))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_42042 = 0; \n            v__42066[v_w_id_42035] = doubleAndOr(v__33398, v__42047, v__42046[v_w_id_42035], v__42048); \n          }\n          /* end map_seq */\n          v_l_id_42040 = atomic_inc(&(v_work_idx_3086)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_42035 = atomic_inc(v_work_idx_3093); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__42043",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42044",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__42045",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__42046",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__42047",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__42048",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__42050",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__42056",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__42066",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__42061",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}