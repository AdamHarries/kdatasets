{
  "name" : "awrg-alcl-alcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56202, const global int* restrict v__56203, const global int* restrict v__56204, const global int* restrict v__56205, int v__56206, int v__56207, global int* v__56225, global int* v__56209, global int* v__56215, local int* v__56220, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__56211; \n  int v__56216; \n  int v__33398; \n  /* Private Memory */\n  int v__56213_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4426 = v__56209; \n    local int v_w_id_56194; \n    if (get_local_id(0) == 0) {\n      v_w_id_56194 = atomic_inc(v_work_idx_4426); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_56194 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4424; \n        v_work_idx_4424 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_56195 = atomic_inc(&(v_work_idx_4424)); \n        while((v_l_id_56195 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_56196 = 0; v_i_56196 < 512; v_i_56196 = (1 + v_i_56196)) {\n            int v_tmp_56276 = 0; \n            v__56211 = v_tmp_56276; \n            int v_index_56277 = v__56202[(v_l_id_56195 + (512 * v_MWidthC_1 * v_w_id_56194) + (v_MWidthC_1 * v_i_56196))]; \n            if (v_index_56277 < 0) {\n              v__56213_0 = v__56211; \n            } else {\n              if (v_index_56277 >= v_VLength_3) {\n                v__56213_0 = v__56211; \n              } else {\n                v__56213_0 = v__56204[v_index_56277]; \n              }\n            }\n            v__56215[(v_i_56196 + (512 * v_MWidthC_1 * v_w_id_56194) + (512 * v_l_id_56195))] = bool_and(v__56213_0, v__56203[(v_l_id_56195 + (512 * v_MWidthC_1 * v_w_id_56194) + (v_MWidthC_1 * v_i_56196))]); \n          }\n          /* end map_seq */\n          int v_tmp_56278 = 0; \n          v__56216 = v_tmp_56278; \n          /* reduce_seq */\n          for (int v_i_56197 = 0; v_i_56197 < 512; v_i_56197 = (1 + v_i_56197)) {\n            v__56216 = bool_or(v__56216, v__56215[(v_i_56197 + (512 * v_MWidthC_1 * v_w_id_56194) + (512 * v_l_id_56195))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56198 = 0; \n            v__56220[v_l_id_56195] = id(v__56216); \n          }\n          /* end map_seq */\n          v_l_id_56195 = atomic_inc(&(v_work_idx_4424)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4418; \n        v_work_idx_4418 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_56199 = atomic_inc(&(v_work_idx_4418)); \n        while((v_l_id_56199 < 1)){\n          int v_tmp_56281 = 0; \n          v__33398 = v_tmp_56281; \n          /* reduce_seq */\n          for (int v_i_56200 = 0; v_i_56200 < v_MWidthC_1; v_i_56200 = (1 + v_i_56200)) {\n            v__33398 = bool_or(v__33398, v__56220[(v_i_56200 + (v_MWidthC_1 * v_l_id_56199))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56201 = 0; \n            v__56225[v_w_id_56194] = doubleAndOr(v__33398, v__56206, v__56205[v_w_id_56194], v__56207); \n          }\n          /* end map_seq */\n          v_l_id_56199 = atomic_inc(&(v_work_idx_4418)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_56194 = atomic_inc(v_work_idx_4426); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__56202",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56203",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56204",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56205",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56206",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56207",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56209",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__56215",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__56225",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__56220",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}