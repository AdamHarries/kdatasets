{
  "name" : "awrg-alcl-alcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__46200, const global int* restrict v__46201, const global int* restrict v__46202, const global int* restrict v__46203, int v__46204, int v__46205, global int* v__46223, global int* v__46207, global int* v__46213, local int* v__46218, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46209; \n  int v__46214; \n  int v__33398; \n  /* Private Memory */\n  int v__46211_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3490 = v__46207; \n    local int v_w_id_46192; \n    if (get_local_id(0) == 0) {\n      v_w_id_46192 = atomic_inc(v_work_idx_3490); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_46192 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3488; \n        v_work_idx_3488 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_46193 = atomic_inc(&(v_work_idx_3488)); \n        while((v_l_id_46193 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_46194 = 0; v_i_46194 < 64; v_i_46194 = (1 + v_i_46194)) {\n            int v_tmp_46274 = 0; \n            v__46209 = v_tmp_46274; \n            int v_index_46275 = v__46200[(v_l_id_46193 + (64 * v_MWidthC_1 * v_w_id_46192) + (v_MWidthC_1 * v_i_46194))]; \n            if (v_index_46275 < 0) {\n              v__46211_0 = v__46209; \n            } else {\n              if (v_index_46275 >= v_VLength_3) {\n                v__46211_0 = v__46209; \n              } else {\n                v__46211_0 = v__46202[v_index_46275]; \n              }\n            }\n            v__46213[(v_i_46194 + (64 * v_MWidthC_1 * v_w_id_46192) + (64 * v_l_id_46193))] = bool_and(v__46211_0, v__46201[(v_l_id_46193 + (64 * v_MWidthC_1 * v_w_id_46192) + (v_MWidthC_1 * v_i_46194))]); \n          }\n          /* end map_seq */\n          int v_tmp_46276 = 0; \n          v__46214 = v_tmp_46276; \n          /* reduce_seq */\n          for (int v_i_46195 = 0; v_i_46195 < 64; v_i_46195 = (1 + v_i_46195)) {\n            v__46214 = bool_or(v__46214, v__46213[(v_i_46195 + (64 * v_MWidthC_1 * v_w_id_46192) + (64 * v_l_id_46193))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_46196 = 0; \n            v__46218[v_l_id_46193] = id(v__46214); \n          }\n          /* end map_seq */\n          v_l_id_46193 = atomic_inc(&(v_work_idx_3488)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3482; \n        v_work_idx_3482 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_46197 = atomic_inc(&(v_work_idx_3482)); \n        while((v_l_id_46197 < 1)){\n          int v_tmp_46279 = 0; \n          v__33398 = v_tmp_46279; \n          /* reduce_seq */\n          for (int v_i_46198 = 0; v_i_46198 < v_MWidthC_1; v_i_46198 = (1 + v_i_46198)) {\n            v__33398 = bool_or(v__33398, v__46218[(v_i_46198 + (v_MWidthC_1 * v_l_id_46197))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_46199 = 0; \n            v__46223[v_w_id_46192] = doubleAndOr(v__33398, v__46204, v__46203[v_w_id_46192], v__46205); \n          }\n          /* end map_seq */\n          v_l_id_46197 = atomic_inc(&(v_work_idx_3482)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_46192 = atomic_inc(v_work_idx_3490); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__46200",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46201",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46202",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46203",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46204",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46205",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__46207",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__46213",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__46223",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__46218",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}