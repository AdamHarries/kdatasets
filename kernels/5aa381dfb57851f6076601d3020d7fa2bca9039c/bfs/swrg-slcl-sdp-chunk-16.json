{
  "name" : "swrg-slcl-sdp-chunk-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__36480, const global int* restrict v__36481, const global int* restrict v__36482, const global int* restrict v__36483, int v__36484, int v__36485, global int* v__36498, global int* v__36492, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__36488; \n  int v__36493; \n  /* Private Memory */\n  int v__36490_0;\n  \n  for (int v_wg_id_36475 = get_group_id(0); v_wg_id_36475 < v_MHeight_2; v_wg_id_36475 = (v_wg_id_36475 + get_num_groups(0))) {\n    for (int v_l_id_36476 = get_local_id(0); v_l_id_36476 < 16; v_l_id_36476 = (v_l_id_36476 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_36477 = 0; v_i_36477 < v_MWidthC_1; v_i_36477 = (1 + v_i_36477)) {\n        int v_tmp_36542 = 0; \n        v__36488 = v_tmp_36542; \n        int v_index_36543 = v__36480[(v_i_36477 + (16 * v_MWidthC_1 * v_wg_id_36475) + (v_MWidthC_1 * v_l_id_36476))]; \n        if (v_index_36543 < 0) {\n          v__36490_0 = v__36488; \n        } else {\n          if (v_index_36543 >= v_VLength_3) {\n            v__36490_0 = v__36488; \n          } else {\n            v__36490_0 = v__36482[v_index_36543]; \n          }\n        }\n        v__36492[(v_i_36477 + (16 * v_MWidthC_1 * v_wg_id_36475) + (v_MWidthC_1 * v_l_id_36476))] = bool_and(v__36490_0, v__36481[(v_i_36477 + (16 * v_MWidthC_1 * v_wg_id_36475) + (v_MWidthC_1 * v_l_id_36476))]); \n      }\n      /* end map_seq */\n      int v_tmp_36544 = 0; \n      v__36493 = v_tmp_36544; \n      /* reduce_seq */\n      for (int v_i_36478 = 0; v_i_36478 < v_MWidthC_1; v_i_36478 = (1 + v_i_36478)) {\n        v__36493 = bool_or(v__36493, v__36492[(v_i_36478 + (16 * v_MWidthC_1 * v_wg_id_36475) + (v_MWidthC_1 * v_l_id_36476))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36479 = 0; \n        v__36498[(v_l_id_36476 + (16 * v_wg_id_36475))] = doubleAndOr(v__36493, v__36484, v__36483[(v_l_id_36476 + (16 * v_wg_id_36475))], v__36485); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "16",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__36480",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36481",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36482",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__36483",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2)"
  }, {
    "variable" : "v__36484",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__36485",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__36492",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__36498",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}