{
  "name" : "swrg-slcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__40049, const global int* restrict v__40050, const global int* restrict v__40051, const global int* restrict v__40052, int v__40053, int v__40054, global int* v__40071, global int* v__40061, local int* v__40066, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__40057; \n  int v__40062; \n  int v__33398; \n  /* Private Memory */\n  int v__40059_0;\n  \n  for (int v_wg_id_40041 = get_group_id(0); v_wg_id_40041 < v_MHeight_2; v_wg_id_40041 = (v_wg_id_40041 + get_num_groups(0))) {\n    for (int v_l_id_40042 = get_local_id(0); v_l_id_40042 < v_MWidthC_1; v_l_id_40042 = (v_l_id_40042 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_40043 = 0; v_i_40043 < 32; v_i_40043 = (1 + v_i_40043)) {\n        int v_tmp_40136 = 0; \n        v__40057 = v_tmp_40136; \n        int v_index_40137 = v__40049[(v_l_id_40042 + (32 * v_MWidthC_1 * v_wg_id_40041) + (v_MWidthC_1 * v_i_40043))]; \n        if (v_index_40137 < 0) {\n          v__40059_0 = v__40057; \n        } else {\n          if (v_index_40137 >= v_VLength_3) {\n            v__40059_0 = v__40057; \n          } else {\n            v__40059_0 = v__40051[v_index_40137]; \n          }\n        }\n        v__40061[(v_i_40043 + (32 * v_MWidthC_1 * v_wg_id_40041) + (32 * v_l_id_40042))] = bool_and(v__40059_0, v__40050[(v_l_id_40042 + (32 * v_MWidthC_1 * v_wg_id_40041) + (v_MWidthC_1 * v_i_40043))]); \n      }\n      /* end map_seq */\n      int v_tmp_40138 = 0; \n      v__40062 = v_tmp_40138; \n      /* reduce_seq */\n      for (int v_i_40044 = 0; v_i_40044 < 32; v_i_40044 = (1 + v_i_40044)) {\n        v__40062 = bool_or(v__40062, v__40061[(v_i_40044 + (32 * v_MWidthC_1 * v_wg_id_40041) + (32 * v_l_id_40042))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40045 = 0; \n        v__40066[v_l_id_40042] = id(v__40062); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_40046 = get_local_id(0); \n      int v_tmp_40141 = 0; \n      v__33398 = v_tmp_40141; \n      /* reduce_seq */\n      for (int v_i_40047 = 0; v_i_40047 < v_MWidthC_1; v_i_40047 = (1 + v_i_40047)) {\n        v__33398 = bool_or(v__33398, v__40066[(v_i_40047 + (v_MWidthC_1 * v_l_id_40046))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_40048 = 0; \n        v__40071[v_wg_id_40041] = doubleAndOr(v__33398, v__40053, v__40052[v_wg_id_40041], v__40054); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__40049",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40050",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__40051",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__40052",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__40053",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__40054",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__40061",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__40071",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__40066",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}