{
  "name" : "awrg-alcl-edp-chunk-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__45822, const global int* restrict v__45823, const global int* restrict v__45824, const global int* restrict v__45825, int v__45826, int v__45827, global int* v__45843, global int* v__45829, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__45830; \n  int v__45833; \n  /* Private Memory */\n  int v__45835_0;\n  \n  int v__45837_0;\n  \n  int v__45841_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3447 = v__45829; \n    local int v_w_id_45818; \n    if (get_local_id(0) == 0) {\n      v_w_id_45818 = atomic_inc(v_work_idx_3447); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_45818 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3445; \n        v_work_idx_3445 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_45819 = atomic_inc(&(v_work_idx_3445)); \n        while((v_l_id_45819 < 64)){\n          int v_tmp_45886 = 0; \n          v__45830 = v_tmp_45886; \n          /* reduce_while_seq */\n          for (int v_i_45820 = 0; v_i_45820 < v_MWidthC_1; v_i_45820 = (1 + v_i_45820)) {\n            v__45841_0 = check(v__45830, v__45822[(v_i_45820 + (64 * v_MWidthC_1 * v_w_id_45818) + (v_MWidthC_1 * v_l_id_45819))]); \n            if (v__45841_0) {\n            } else {\n              break;\n            }\n            int v_tmp_45887 = 0; \n            v__45833 = v_tmp_45887; \n            int v_index_45888 = v__45822[(v_i_45820 + (64 * v_MWidthC_1 * v_w_id_45818) + (v_MWidthC_1 * v_l_id_45819))]; \n            if (v_index_45888 < 0) {\n              v__45835_0 = v__45833; \n            } else {\n              if (v_index_45888 >= v_VLength_3) {\n                v__45835_0 = v__45833; \n              } else {\n                v__45835_0 = v__45824[v_index_45888]; \n              }\n            }\n            v__45837_0 = bool_and(v__45835_0, v__45823[(v_i_45820 + (64 * v_MWidthC_1 * v_w_id_45818) + (v_MWidthC_1 * v_l_id_45819))]); \n            v__45830 = bool_or(v__45837_0, v__45830); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_45821 = 0; \n            v__45843[(v_l_id_45819 + (64 * v_w_id_45818))] = doubleAndOr(v__45830, v__45826, v__45825[(v_l_id_45819 + (64 * v_w_id_45818))], v__45827); \n          }\n          /* end map_seq */\n          v_l_id_45819 = atomic_inc(&(v_work_idx_3445)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_45818 = atomic_inc(v_work_idx_3447); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "64",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__45822",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45823",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45824",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__45825",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2)"
  }, {
    "variable" : "v__45826",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__45827",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__45829",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__45843",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}