{
  "name" : "awrg-alcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49534, const global int* restrict v__49535, const global int* restrict v__49536, const global int* restrict v__49537, int v__49538, int v__49539, global int* v__49557, global int* v__49541, global int* v__49547, local int* v__49552, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49543; \n  int v__49548; \n  int v__33398; \n  /* Private Memory */\n  int v__49545_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3802 = v__49541; \n    local int v_w_id_49526; \n    if (get_local_id(0) == 0) {\n      v_w_id_49526 = atomic_inc(v_work_idx_3802); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_49526 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3800; \n        v_work_idx_3800 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_49527 = atomic_inc(&(v_work_idx_3800)); \n        while((v_l_id_49527 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_49528 = 0; v_i_49528 < 128; v_i_49528 = (1 + v_i_49528)) {\n            int v_tmp_49608 = 0; \n            v__49543 = v_tmp_49608; \n            int v_index_49609 = v__49534[(v_l_id_49527 + (128 * v_MWidthC_1 * v_w_id_49526) + (v_MWidthC_1 * v_i_49528))]; \n            if (v_index_49609 < 0) {\n              v__49545_0 = v__49543; \n            } else {\n              if (v_index_49609 >= v_VLength_3) {\n                v__49545_0 = v__49543; \n              } else {\n                v__49545_0 = v__49536[v_index_49609]; \n              }\n            }\n            v__49547[(v_i_49528 + (128 * v_MWidthC_1 * v_w_id_49526) + (128 * v_l_id_49527))] = bool_and(v__49545_0, v__49535[(v_l_id_49527 + (128 * v_MWidthC_1 * v_w_id_49526) + (v_MWidthC_1 * v_i_49528))]); \n          }\n          /* end map_seq */\n          int v_tmp_49610 = 0; \n          v__49548 = v_tmp_49610; \n          /* reduce_seq */\n          for (int v_i_49529 = 0; v_i_49529 < 128; v_i_49529 = (1 + v_i_49529)) {\n            v__49548 = bool_or(v__49548, v__49547[(v_i_49529 + (128 * v_MWidthC_1 * v_w_id_49526) + (128 * v_l_id_49527))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49530 = 0; \n            v__49552[v_l_id_49527] = id(v__49548); \n          }\n          /* end map_seq */\n          v_l_id_49527 = atomic_inc(&(v_work_idx_3800)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3794; \n        v_work_idx_3794 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_49531 = atomic_inc(&(v_work_idx_3794)); \n        while((v_l_id_49531 < 1)){\n          int v_tmp_49613 = 0; \n          v__33398 = v_tmp_49613; \n          /* reduce_seq */\n          for (int v_i_49532 = 0; v_i_49532 < v_MWidthC_1; v_i_49532 = (1 + v_i_49532)) {\n            v__33398 = bool_or(v__33398, v__49552[(v_i_49532 + (v_MWidthC_1 * v_l_id_49531))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_49533 = 0; \n            v__49557[v_w_id_49526] = doubleAndOr(v__33398, v__49538, v__49537[v_w_id_49526], v__49539); \n          }\n          /* end map_seq */\n          v_l_id_49531 = atomic_inc(&(v_work_idx_3794)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_49526 = atomic_inc(v_work_idx_3802); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__49534",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49535",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49536",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49537",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49538",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49539",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49541",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__49547",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__49557",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__49552",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}