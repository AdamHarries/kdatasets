{
  "name" : "swrg-alcl-slcl-fdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__41003, const global int* restrict v__41004, const global int* restrict v__41005, const global int* restrict v__41006, int v__41007, int v__41008, global int* v__41025, local int* v__41020, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__41011; \n  int v__41013; \n  int v__33398; \n  /* Private Memory */\n  int v__41015_0;\n  \n  int v__41017_0;\n  \n  for (int v_wg_id_40996 = get_group_id(0); v_wg_id_40996 < v_MHeight_2; v_wg_id_40996 = (v_wg_id_40996 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_2994; \n      v_work_idx_2994 = 0; \n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      int v_l_id_40997 = atomic_inc(&(v_work_idx_2994)); \n      while((v_l_id_40997 < v_MWidthC_1)){\n        int v_tmp_41082 = 0; \n        v__41011 = v_tmp_41082; \n        /* reduce_seq */\n        for (int v_i_40998 = 0; v_i_40998 < 32; v_i_40998 = (1 + v_i_40998)) {\n          int v_tmp_41083 = 0; \n          v__41013 = v_tmp_41083; \n          int v_index_41084 = v__41003[(v_l_id_40997 + (32 * v_MWidthC_1 * v_wg_id_40996) + (v_MWidthC_1 * v_i_40998))]; \n          if (v_index_41084 < 0) {\n            v__41015_0 = v__41013; \n          } else {\n            if (v_index_41084 >= v_VLength_3) {\n              v__41015_0 = v__41013; \n            } else {\n              v__41015_0 = v__41005[v_index_41084]; \n            }\n          }\n          v__41017_0 = bool_and(v__41015_0, v__41004[(v_l_id_40997 + (32 * v_MWidthC_1 * v_wg_id_40996) + (v_MWidthC_1 * v_i_40998))]); \n          v__41011 = bool_or(v__41017_0, v__41011); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_40999 = 0; \n          v__41020[v_l_id_40997] = id(v__41011); \n        }\n        /* end map_seq */\n        v_l_id_40997 = atomic_inc(&(v_work_idx_2994)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_41000 = get_local_id(0); \n      int v_tmp_41087 = 0; \n      v__33398 = v_tmp_41087; \n      /* reduce_seq */\n      for (int v_i_41001 = 0; v_i_41001 < v_MWidthC_1; v_i_41001 = (1 + v_i_41001)) {\n        v__33398 = bool_or(v__33398, v__41020[(v_i_41001 + (v_MWidthC_1 * v_l_id_41000))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_41002 = 0; \n        v__41025[v_wg_id_40996] = doubleAndOr(v__33398, v__41007, v__41006[v_wg_id_40996], v__41008); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__41003",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__41004",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__41005",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__41006",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__41007",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__41008",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__41025",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__41020",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}