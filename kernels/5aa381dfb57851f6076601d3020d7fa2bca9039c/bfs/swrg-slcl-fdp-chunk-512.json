{
  "name" : "swrg-slcl-fdp-chunk-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__53225, const global int* restrict v__53226, const global int* restrict v__53227, const global int* restrict v__53228, int v__53229, int v__53230, global int* v__53243, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53233; \n  int v__53235; \n  /* Private Memory */\n  int v__53237_0;\n  \n  int v__53239_0;\n  \n  for (int v_wg_id_53221 = get_group_id(0); v_wg_id_53221 < v_MHeight_2; v_wg_id_53221 = (v_wg_id_53221 + get_num_groups(0))) {\n    for (int v_l_id_53222 = get_local_id(0); v_l_id_53222 < 512; v_l_id_53222 = (v_l_id_53222 + get_local_size(0))) {\n      int v_tmp_53286 = 0; \n      v__53233 = v_tmp_53286; \n      /* reduce_seq */\n      for (int v_i_53223 = 0; v_i_53223 < v_MWidthC_1; v_i_53223 = (1 + v_i_53223)) {\n        int v_tmp_53287 = 0; \n        v__53235 = v_tmp_53287; \n        int v_index_53288 = v__53225[(v_i_53223 + (512 * v_MWidthC_1 * v_wg_id_53221) + (v_MWidthC_1 * v_l_id_53222))]; \n        if (v_index_53288 < 0) {\n          v__53237_0 = v__53235; \n        } else {\n          if (v_index_53288 >= v_VLength_3) {\n            v__53237_0 = v__53235; \n          } else {\n            v__53237_0 = v__53227[v_index_53288]; \n          }\n        }\n        v__53239_0 = bool_and(v__53237_0, v__53226[(v_i_53223 + (512 * v_MWidthC_1 * v_wg_id_53221) + (v_MWidthC_1 * v_l_id_53222))]); \n        v__53233 = bool_or(v__53239_0, v__53233); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53224 = 0; \n        v__53243[(v_l_id_53222 + (512 * v_wg_id_53221))] = doubleAndOr(v__53233, v__53229, v__53228[(v_l_id_53222 + (512 * v_wg_id_53221))], v__53230); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__53225",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53226",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53227",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53228",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2)"
  }, {
    "variable" : "v__53229",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53230",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__53243",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}