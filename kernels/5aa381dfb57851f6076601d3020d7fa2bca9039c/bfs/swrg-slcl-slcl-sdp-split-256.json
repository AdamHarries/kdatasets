{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__50051, const global int* restrict v__50052, const global int* restrict v__50053, const global int* restrict v__50054, int v__50055, int v__50056, global int* v__50073, global int* v__50063, local int* v__50068, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__50059; \n  int v__50064; \n  int v__33398; \n  /* Private Memory */\n  int v__50061_0;\n  \n  for (int v_wg_id_50043 = get_group_id(0); v_wg_id_50043 < v_MHeight_2; v_wg_id_50043 = (v_wg_id_50043 + get_num_groups(0))) {\n    for (int v_l_id_50044 = get_local_id(0); v_l_id_50044 < v_MWidthC_1; v_l_id_50044 = (v_l_id_50044 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_50045 = 0; v_i_50045 < 256; v_i_50045 = (1 + v_i_50045)) {\n        int v_tmp_50138 = 0; \n        v__50059 = v_tmp_50138; \n        int v_index_50139 = v__50051[(v_l_id_50044 + (256 * v_MWidthC_1 * v_wg_id_50043) + (v_MWidthC_1 * v_i_50045))]; \n        if (v_index_50139 < 0) {\n          v__50061_0 = v__50059; \n        } else {\n          if (v_index_50139 >= v_VLength_3) {\n            v__50061_0 = v__50059; \n          } else {\n            v__50061_0 = v__50053[v_index_50139]; \n          }\n        }\n        v__50063[(v_i_50045 + (256 * v_MWidthC_1 * v_wg_id_50043) + (256 * v_l_id_50044))] = bool_and(v__50061_0, v__50052[(v_l_id_50044 + (256 * v_MWidthC_1 * v_wg_id_50043) + (v_MWidthC_1 * v_i_50045))]); \n      }\n      /* end map_seq */\n      int v_tmp_50140 = 0; \n      v__50064 = v_tmp_50140; \n      /* reduce_seq */\n      for (int v_i_50046 = 0; v_i_50046 < 256; v_i_50046 = (1 + v_i_50046)) {\n        v__50064 = bool_or(v__50064, v__50063[(v_i_50046 + (256 * v_MWidthC_1 * v_wg_id_50043) + (256 * v_l_id_50044))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_50047 = 0; \n        v__50068[v_l_id_50044] = id(v__50064); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_50048 = get_local_id(0); \n      int v_tmp_50143 = 0; \n      v__33398 = v_tmp_50143; \n      /* reduce_seq */\n      for (int v_i_50049 = 0; v_i_50049 < v_MWidthC_1; v_i_50049 = (1 + v_i_50049)) {\n        v__33398 = bool_or(v__33398, v__50068[(v_i_50049 + (v_MWidthC_1 * v_l_id_50048))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_50050 = 0; \n        v__50073[v_wg_id_50043] = doubleAndOr(v__33398, v__50055, v__50054[v_wg_id_50043], v__50056); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__50051",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__50052",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__50053",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__50054",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__50055",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__50056",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__50063",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__50073",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__50068",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}