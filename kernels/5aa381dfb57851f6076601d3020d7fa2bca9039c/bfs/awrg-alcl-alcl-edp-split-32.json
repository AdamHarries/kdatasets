{
  "name" : "awrg-alcl-alcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nkernel void KERNEL(const global int* restrict v__43052, const global int* restrict v__43053, const global int* restrict v__43054, const global int* restrict v__43055, int v__43056, int v__43057, global int* v__43077, global int* v__43059, local int* v__43072, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__43061; \n  int v__43063; \n  int v__33398; \n  /* Private Memory */\n  int v__43065_0;\n  \n  int v__43067_0;\n  \n  int v__43071_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3200 = v__43059; \n    local int v_w_id_43045; \n    if (get_local_id(0) == 0) {\n      v_w_id_43045 = atomic_inc(v_work_idx_3200); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_43045 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3198; \n        v_work_idx_3198 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_43046 = atomic_inc(&(v_work_idx_3198)); \n        while((v_l_id_43046 < v_MWidthC_1)){\n          int v_tmp_43131 = 0; \n          v__43061 = v_tmp_43131; \n          /* reduce_while_seq */\n          for (int v_i_43047 = 0; v_i_43047 < 32; v_i_43047 = (1 + v_i_43047)) {\n            v__43071_0 = check(v__43061, v__43052[(v_l_id_43046 + (32 * v_MWidthC_1 * v_w_id_43045) + (v_MWidthC_1 * v_i_43047))]); \n            if (v__43071_0) {\n            } else {\n              break;\n            }\n            int v_tmp_43132 = 0; \n            v__43063 = v_tmp_43132; \n            int v_index_43133 = v__43052[(v_l_id_43046 + (32 * v_MWidthC_1 * v_w_id_43045) + (v_MWidthC_1 * v_i_43047))]; \n            if (v_index_43133 < 0) {\n              v__43065_0 = v__43063; \n            } else {\n              if (v_index_43133 >= v_VLength_3) {\n                v__43065_0 = v__43063; \n              } else {\n                v__43065_0 = v__43054[v_index_43133]; \n              }\n            }\n            v__43067_0 = bool_and(v__43065_0, v__43053[(v_l_id_43046 + (32 * v_MWidthC_1 * v_w_id_43045) + (v_MWidthC_1 * v_i_43047))]); \n            v__43061 = bool_or(v__43067_0, v__43061); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43048 = 0; \n            v__43072[v_l_id_43046] = id(v__43061); \n          }\n          /* end map_seq */\n          v_l_id_43046 = atomic_inc(&(v_work_idx_3198)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3193; \n        v_work_idx_3193 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_43049 = atomic_inc(&(v_work_idx_3193)); \n        while((v_l_id_43049 < 1)){\n          int v_tmp_43136 = 0; \n          v__33398 = v_tmp_43136; \n          /* reduce_seq */\n          for (int v_i_43050 = 0; v_i_43050 < v_MWidthC_1; v_i_43050 = (1 + v_i_43050)) {\n            v__33398 = bool_or(v__33398, v__43072[(v_i_43050 + (v_MWidthC_1 * v_l_id_43049))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_43051 = 0; \n            v__43077[v_w_id_43045] = doubleAndOr(v__33398, v__43056, v__43055[v_w_id_43045], v__43057); \n          }\n          /* end map_seq */\n          v_l_id_43049 = atomic_inc(&(v_work_idx_3193)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_43045 = atomic_inc(v_work_idx_3200); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__43052",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43053",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__43054",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__43055",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__43056",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__43057",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__43059",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__43077",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__43072",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}