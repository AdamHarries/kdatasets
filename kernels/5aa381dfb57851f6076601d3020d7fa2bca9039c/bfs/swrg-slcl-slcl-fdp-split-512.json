{
  "name" : "swrg-slcl-slcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__53491, const global int* restrict v__53492, const global int* restrict v__53493, const global int* restrict v__53494, int v__53495, int v__53496, global int* v__53513, local int* v__53508, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53499; \n  int v__53501; \n  int v__33398; \n  /* Private Memory */\n  int v__53503_0;\n  \n  int v__53505_0;\n  \n  for (int v_wg_id_53484 = get_group_id(0); v_wg_id_53484 < v_MHeight_2; v_wg_id_53484 = (v_wg_id_53484 + get_num_groups(0))) {\n    for (int v_l_id_53485 = get_local_id(0); v_l_id_53485 < v_MWidthC_1; v_l_id_53485 = (v_l_id_53485 + get_local_size(0))) {\n      int v_tmp_53578 = 0; \n      v__53499 = v_tmp_53578; \n      /* reduce_seq */\n      for (int v_i_53486 = 0; v_i_53486 < 512; v_i_53486 = (1 + v_i_53486)) {\n        int v_tmp_53579 = 0; \n        v__53501 = v_tmp_53579; \n        int v_index_53580 = v__53491[(v_l_id_53485 + (512 * v_MWidthC_1 * v_wg_id_53484) + (v_MWidthC_1 * v_i_53486))]; \n        if (v_index_53580 < 0) {\n          v__53503_0 = v__53501; \n        } else {\n          if (v_index_53580 >= v_VLength_3) {\n            v__53503_0 = v__53501; \n          } else {\n            v__53503_0 = v__53493[v_index_53580]; \n          }\n        }\n        v__53505_0 = bool_and(v__53503_0, v__53492[(v_l_id_53485 + (512 * v_MWidthC_1 * v_wg_id_53484) + (v_MWidthC_1 * v_i_53486))]); \n        v__53499 = bool_or(v__53505_0, v__53499); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53487 = 0; \n        v__53508[v_l_id_53485] = id(v__53499); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_53488 = get_local_id(0); \n      int v_tmp_53583 = 0; \n      v__33398 = v_tmp_53583; \n      /* reduce_seq */\n      for (int v_i_53489 = 0; v_i_53489 < v_MWidthC_1; v_i_53489 = (1 + v_i_53489)) {\n        v__33398 = bool_or(v__33398, v__53508[(v_i_53489 + (v_MWidthC_1 * v_l_id_53488))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53490 = 0; \n        v__53513[v_wg_id_53484] = doubleAndOr(v__33398, v__53495, v__53494[v_wg_id_53484], v__53496); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__53491",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53492",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53493",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53494",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__53495",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53496",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__53513",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__53508",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}