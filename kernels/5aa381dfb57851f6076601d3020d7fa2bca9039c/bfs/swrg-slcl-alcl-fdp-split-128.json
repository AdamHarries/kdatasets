{
  "name" : "swrg-slcl-alcl-fdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__47143, const global int* restrict v__47144, const global int* restrict v__47145, const global int* restrict v__47146, int v__47147, int v__47148, global int* v__47165, local int* v__47160, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__47151; \n  int v__47153; \n  int v__33398; \n  /* Private Memory */\n  int v__47155_0;\n  \n  int v__47157_0;\n  \n  for (int v_wg_id_47136 = get_group_id(0); v_wg_id_47136 < v_MHeight_2; v_wg_id_47136 = (v_wg_id_47136 + get_num_groups(0))) {\n    for (int v_l_id_47137 = get_local_id(0); v_l_id_47137 < v_MWidthC_1; v_l_id_47137 = (v_l_id_47137 + get_local_size(0))) {\n      int v_tmp_47226 = 0; \n      v__47151 = v_tmp_47226; \n      /* reduce_seq */\n      for (int v_i_47138 = 0; v_i_47138 < 128; v_i_47138 = (1 + v_i_47138)) {\n        int v_tmp_47227 = 0; \n        v__47153 = v_tmp_47227; \n        int v_index_47228 = v__47143[(v_l_id_47137 + (128 * v_MWidthC_1 * v_wg_id_47136) + (v_MWidthC_1 * v_i_47138))]; \n        if (v_index_47228 < 0) {\n          v__47155_0 = v__47153; \n        } else {\n          if (v_index_47228 >= v_VLength_3) {\n            v__47155_0 = v__47153; \n          } else {\n            v__47155_0 = v__47145[v_index_47228]; \n          }\n        }\n        v__47157_0 = bool_and(v__47155_0, v__47144[(v_l_id_47137 + (128 * v_MWidthC_1 * v_wg_id_47136) + (v_MWidthC_1 * v_i_47138))]); \n        v__47151 = bool_or(v__47157_0, v__47151); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_47139 = 0; \n        v__47160[v_l_id_47137] = id(v__47151); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_3567; \n      v_work_idx_3567 = 0; \n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      int v_l_id_47140 = atomic_inc(&(v_work_idx_3567)); \n      while((v_l_id_47140 < 1)){\n        int v_tmp_47231 = 0; \n        v__33398 = v_tmp_47231; \n        /* reduce_seq */\n        for (int v_i_47141 = 0; v_i_47141 < v_MWidthC_1; v_i_47141 = (1 + v_i_47141)) {\n          v__33398 = bool_or(v__33398, v__47160[(v_i_47141 + (v_MWidthC_1 * v_l_id_47140))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_47142 = 0; \n          v__47165[v_wg_id_47136] = doubleAndOr(v__33398, v__47147, v__47146[v_wg_id_47136], v__47148); \n        }\n        /* end map_seq */\n        v_l_id_47140 = atomic_inc(&(v_work_idx_3567)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__47143",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__47144",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__47145",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__47146",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__47147",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__47148",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__47165",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__47160",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}