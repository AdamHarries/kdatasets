{
  "name" : "awrg-alcl-alcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__39532, const global int* restrict v__39533, const global int* restrict v__39534, const global int* restrict v__39535, int v__39536, int v__39537, global int* v__39555, global int* v__39539, global int* v__39545, local int* v__39550, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__39541; \n  int v__39546; \n  int v__33398; \n  /* Private Memory */\n  int v__39543_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_2866 = v__39539; \n    local int v_w_id_39524; \n    if (get_local_id(0) == 0) {\n      v_w_id_39524 = atomic_inc(v_work_idx_2866); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_39524 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_2864; \n        v_work_idx_2864 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_39525 = atomic_inc(&(v_work_idx_2864)); \n        while((v_l_id_39525 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_39526 = 0; v_i_39526 < 16; v_i_39526 = (1 + v_i_39526)) {\n            int v_tmp_39606 = 0; \n            v__39541 = v_tmp_39606; \n            int v_index_39607 = v__39532[(v_l_id_39525 + (16 * v_MWidthC_1 * v_w_id_39524) + (v_MWidthC_1 * v_i_39526))]; \n            if (v_index_39607 < 0) {\n              v__39543_0 = v__39541; \n            } else {\n              if (v_index_39607 >= v_VLength_3) {\n                v__39543_0 = v__39541; \n              } else {\n                v__39543_0 = v__39534[v_index_39607]; \n              }\n            }\n            v__39545[(v_i_39526 + (16 * v_MWidthC_1 * v_w_id_39524) + (16 * v_l_id_39525))] = bool_and(v__39543_0, v__39533[(v_l_id_39525 + (16 * v_MWidthC_1 * v_w_id_39524) + (v_MWidthC_1 * v_i_39526))]); \n          }\n          /* end map_seq */\n          int v_tmp_39608 = 0; \n          v__39546 = v_tmp_39608; \n          /* reduce_seq */\n          for (int v_i_39527 = 0; v_i_39527 < 16; v_i_39527 = (1 + v_i_39527)) {\n            v__39546 = bool_or(v__39546, v__39545[(v_i_39527 + (16 * v_MWidthC_1 * v_w_id_39524) + (16 * v_l_id_39525))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_39528 = 0; \n            v__39550[v_l_id_39525] = id(v__39546); \n          }\n          /* end map_seq */\n          v_l_id_39525 = atomic_inc(&(v_work_idx_2864)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_2858; \n        v_work_idx_2858 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_39529 = atomic_inc(&(v_work_idx_2858)); \n        while((v_l_id_39529 < 1)){\n          int v_tmp_39611 = 0; \n          v__33398 = v_tmp_39611; \n          /* reduce_seq */\n          for (int v_i_39530 = 0; v_i_39530 < v_MWidthC_1; v_i_39530 = (1 + v_i_39530)) {\n            v__33398 = bool_or(v__33398, v__39550[(v_i_39530 + (v_MWidthC_1 * v_l_id_39529))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_39531 = 0; \n            v__39555[v_w_id_39524] = doubleAndOr(v__33398, v__39536, v__39535[v_w_id_39524], v__39537); \n          }\n          /* end map_seq */\n          v_l_id_39529 = atomic_inc(&(v_work_idx_2858)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_39524 = atomic_inc(v_work_idx_2866); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__39532",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__39533",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__39534",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__39535",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__39536",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__39537",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__39539",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__39545",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__39555",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__39550",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}