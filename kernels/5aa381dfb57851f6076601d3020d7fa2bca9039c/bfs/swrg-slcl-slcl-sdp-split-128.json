{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__46717, const global int* restrict v__46718, const global int* restrict v__46719, const global int* restrict v__46720, int v__46721, int v__46722, global int* v__46739, global int* v__46729, local int* v__46734, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__46725; \n  int v__46730; \n  int v__33398; \n  /* Private Memory */\n  int v__46727_0;\n  \n  for (int v_wg_id_46709 = get_group_id(0); v_wg_id_46709 < v_MHeight_2; v_wg_id_46709 = (v_wg_id_46709 + get_num_groups(0))) {\n    for (int v_l_id_46710 = get_local_id(0); v_l_id_46710 < v_MWidthC_1; v_l_id_46710 = (v_l_id_46710 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_46711 = 0; v_i_46711 < 128; v_i_46711 = (1 + v_i_46711)) {\n        int v_tmp_46804 = 0; \n        v__46725 = v_tmp_46804; \n        int v_index_46805 = v__46717[(v_l_id_46710 + (128 * v_MWidthC_1 * v_wg_id_46709) + (v_MWidthC_1 * v_i_46711))]; \n        if (v_index_46805 < 0) {\n          v__46727_0 = v__46725; \n        } else {\n          if (v_index_46805 >= v_VLength_3) {\n            v__46727_0 = v__46725; \n          } else {\n            v__46727_0 = v__46719[v_index_46805]; \n          }\n        }\n        v__46729[(v_i_46711 + (128 * v_MWidthC_1 * v_wg_id_46709) + (128 * v_l_id_46710))] = bool_and(v__46727_0, v__46718[(v_l_id_46710 + (128 * v_MWidthC_1 * v_wg_id_46709) + (v_MWidthC_1 * v_i_46711))]); \n      }\n      /* end map_seq */\n      int v_tmp_46806 = 0; \n      v__46730 = v_tmp_46806; \n      /* reduce_seq */\n      for (int v_i_46712 = 0; v_i_46712 < 128; v_i_46712 = (1 + v_i_46712)) {\n        v__46730 = bool_or(v__46730, v__46729[(v_i_46712 + (128 * v_MWidthC_1 * v_wg_id_46709) + (128 * v_l_id_46710))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46713 = 0; \n        v__46734[v_l_id_46710] = id(v__46730); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_46714 = get_local_id(0); \n      int v_tmp_46809 = 0; \n      v__33398 = v_tmp_46809; \n      /* reduce_seq */\n      for (int v_i_46715 = 0; v_i_46715 < v_MWidthC_1; v_i_46715 = (1 + v_i_46715)) {\n        v__33398 = bool_or(v__33398, v__46734[(v_i_46715 + (v_MWidthC_1 * v_l_id_46714))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_46716 = 0; \n        v__46739[v_wg_id_46709] = doubleAndOr(v__33398, v__46721, v__46720[v_wg_id_46709], v__46722); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__46717",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46718",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__46719",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__46720",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__46721",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__46722",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__46729",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__46739",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__46734",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}