{
  "name" : "awrg-alcl-alcl-edp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nkernel void KERNEL(const global int* restrict v__53054, const global int* restrict v__53055, const global int* restrict v__53056, const global int* restrict v__53057, int v__53058, int v__53059, global int* v__53079, global int* v__53061, local int* v__53074, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53063; \n  int v__53065; \n  int v__33398; \n  /* Private Memory */\n  int v__53067_0;\n  \n  int v__53069_0;\n  \n  int v__53073_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4136 = v__53061; \n    local int v_w_id_53047; \n    if (get_local_id(0) == 0) {\n      v_w_id_53047 = atomic_inc(v_work_idx_4136); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_53047 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4134; \n        v_work_idx_4134 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_53048 = atomic_inc(&(v_work_idx_4134)); \n        while((v_l_id_53048 < v_MWidthC_1)){\n          int v_tmp_53133 = 0; \n          v__53063 = v_tmp_53133; \n          /* reduce_while_seq */\n          for (int v_i_53049 = 0; v_i_53049 < 256; v_i_53049 = (1 + v_i_53049)) {\n            v__53073_0 = check(v__53063, v__53054[(v_l_id_53048 + (256 * v_MWidthC_1 * v_w_id_53047) + (v_MWidthC_1 * v_i_53049))]); \n            if (v__53073_0) {\n            } else {\n              break;\n            }\n            int v_tmp_53134 = 0; \n            v__53065 = v_tmp_53134; \n            int v_index_53135 = v__53054[(v_l_id_53048 + (256 * v_MWidthC_1 * v_w_id_53047) + (v_MWidthC_1 * v_i_53049))]; \n            if (v_index_53135 < 0) {\n              v__53067_0 = v__53065; \n            } else {\n              if (v_index_53135 >= v_VLength_3) {\n                v__53067_0 = v__53065; \n              } else {\n                v__53067_0 = v__53056[v_index_53135]; \n              }\n            }\n            v__53069_0 = bool_and(v__53067_0, v__53055[(v_l_id_53048 + (256 * v_MWidthC_1 * v_w_id_53047) + (v_MWidthC_1 * v_i_53049))]); \n            v__53063 = bool_or(v__53069_0, v__53063); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_53050 = 0; \n            v__53074[v_l_id_53048] = id(v__53063); \n          }\n          /* end map_seq */\n          v_l_id_53048 = atomic_inc(&(v_work_idx_4134)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4129; \n        v_work_idx_4129 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_53051 = atomic_inc(&(v_work_idx_4129)); \n        while((v_l_id_53051 < 1)){\n          int v_tmp_53138 = 0; \n          v__33398 = v_tmp_53138; \n          /* reduce_seq */\n          for (int v_i_53052 = 0; v_i_53052 < v_MWidthC_1; v_i_53052 = (1 + v_i_53052)) {\n            v__33398 = bool_or(v__33398, v__53074[(v_i_53052 + (v_MWidthC_1 * v_l_id_53051))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_53053 = 0; \n            v__53079[v_w_id_53047] = doubleAndOr(v__33398, v__53058, v__53057[v_w_id_53047], v__53059); \n          }\n          /* end map_seq */\n          v_l_id_53051 = atomic_inc(&(v_work_idx_4129)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_53047 = atomic_inc(v_work_idx_4136); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__53054",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53055",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53056",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53057",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__53058",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53059",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__53061",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__53079",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__53074",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}