{
  "name" : "awrg-alcl-edp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__52490, const global int* restrict v__52491, const global int* restrict v__52492, const global int* restrict v__52493, int v__52494, int v__52495, global int* v__52511, global int* v__52497, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__52498; \n  int v__52501; \n  /* Private Memory */\n  int v__52503_0;\n  \n  int v__52505_0;\n  \n  int v__52509_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4071 = v__52497; \n    local int v_w_id_52486; \n    if (get_local_id(0) == 0) {\n      v_w_id_52486 = atomic_inc(v_work_idx_4071); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_52486 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4069; \n        v_work_idx_4069 = 0; \n        barrier(CLK_LOCAL_MEM_FENCE);\n        \n        int v_l_id_52487 = atomic_inc(&(v_work_idx_4069)); \n        while((v_l_id_52487 < 256)){\n          int v_tmp_52554 = 0; \n          v__52498 = v_tmp_52554; \n          /* reduce_while_seq */\n          for (int v_i_52488 = 0; v_i_52488 < v_MWidthC_1; v_i_52488 = (1 + v_i_52488)) {\n            v__52509_0 = check(v__52498, v__52490[(v_i_52488 + (256 * v_MWidthC_1 * v_w_id_52486) + (v_MWidthC_1 * v_l_id_52487))]); \n            if (v__52509_0) {\n            } else {\n              break;\n            }\n            int v_tmp_52555 = 0; \n            v__52501 = v_tmp_52555; \n            int v_index_52556 = v__52490[(v_i_52488 + (256 * v_MWidthC_1 * v_w_id_52486) + (v_MWidthC_1 * v_l_id_52487))]; \n            if (v_index_52556 < 0) {\n              v__52503_0 = v__52501; \n            } else {\n              if (v_index_52556 >= v_VLength_3) {\n                v__52503_0 = v__52501; \n              } else {\n                v__52503_0 = v__52492[v_index_52556]; \n              }\n            }\n            v__52505_0 = bool_and(v__52503_0, v__52491[(v_i_52488 + (256 * v_MWidthC_1 * v_w_id_52486) + (v_MWidthC_1 * v_l_id_52487))]); \n            v__52498 = bool_or(v__52505_0, v__52498); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52489 = 0; \n            v__52511[(v_l_id_52487 + (256 * v_w_id_52486))] = doubleAndOr(v__52498, v__52494, v__52493[(v_l_id_52487 + (256 * v_w_id_52486))], v__52495); \n          }\n          /* end map_seq */\n          v_l_id_52487 = atomic_inc(&(v_work_idx_4069)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_52486 = atomic_inc(v_work_idx_4071); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "256",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__52490",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52491",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52492",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__52493",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2)"
  }, {
    "variable" : "v__52494",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__52495",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__52497",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__52511",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}