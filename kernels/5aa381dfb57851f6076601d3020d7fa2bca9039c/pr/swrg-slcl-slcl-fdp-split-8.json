{
  "name" : "swrg-slcl-slcl-fdp-split-8",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__81063, const global float* restrict v__81064, const global float* restrict v__81065, const global float* restrict v__81066, float v__81067, float v__81068, global float* v__81085, local float* v__81080, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__81071; \n  float v__81073; \n  float v__80974; \n  /* Private Memory */\n  float v__81075_0;\n  \n  float v__81077_0;\n  \n  for (int v_wg_id_81056 = get_group_id(0); v_wg_id_81056 < v_MHeight_2; v_wg_id_81056 = (v_wg_id_81056 + get_num_groups(0))) {\n    for (int v_l_id_81057 = get_local_id(0); v_l_id_81057 < v_MWidthC_1; v_l_id_81057 = (v_l_id_81057 + get_local_size(0))) {\n      float v_tmp_81150 = 0.0f; \n      v__81071 = v_tmp_81150; \n      /* reduce_seq */\n      for (int v_i_81058 = 0; v_i_81058 < 8; v_i_81058 = (1 + v_i_81058)) {\n        float v_tmp_81151 = 0.0f; \n        v__81073 = v_tmp_81151; \n        int v_index_81152 = v__81063[(v_l_id_81057 + (8 * v_MWidthC_1 * v_wg_id_81056) + (v_MWidthC_1 * v_i_81058))]; \n        if (v_index_81152 < 0) {\n          v__81075_0 = v__81073; \n        } else {\n          if (v_index_81152 >= v_VLength_3) {\n            v__81075_0 = v__81073; \n          } else {\n            v__81075_0 = v__81065[v_index_81152]; \n          }\n        }\n        v__81077_0 = mult(v__81075_0, v__81064[(v_l_id_81057 + (8 * v_MWidthC_1 * v_wg_id_81056) + (v_MWidthC_1 * v_i_81058))]); \n        v__81071 = add(v__81077_0, v__81071); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_81059 = 0; \n        v__81080[v_l_id_81057] = id(v__81071); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_81060 = get_local_id(0); \n      float v_tmp_81155 = 0.0f; \n      v__80974 = v_tmp_81155; \n      /* reduce_seq */\n      for (int v_i_81061 = 0; v_i_81061 < v_MWidthC_1; v_i_81061 = (1 + v_i_81061)) {\n        v__80974 = add(v__80974, v__81080[(v_i_81061 + (v_MWidthC_1 * v_l_id_81060))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_81062 = 0; \n        v__81085[v_wg_id_81056] = doubleMultiplyAdd(v__80974, v__81067, v__81066[v_wg_id_81056], v__81068); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "8",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__81063",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__81064",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__81065",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__81066",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__81067",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__81068",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__81085",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__81080",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}