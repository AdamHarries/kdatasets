{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__84291, const global float* restrict v__84292, const global float* restrict v__84293, const global float* restrict v__84294, float v__84295, float v__84296, global float* v__84313, global float* v__84303, local float* v__84308, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__84299; \n  float v__84304; \n  float v__80974; \n  /* Private Memory */\n  float v__84301_0;\n  \n  for (int v_wg_id_84283 = get_group_id(0); v_wg_id_84283 < v_MHeight_2; v_wg_id_84283 = (v_wg_id_84283 + get_num_groups(0))) {\n    for (int v_l_id_84284 = get_local_id(0); v_l_id_84284 < v_MWidthC_1; v_l_id_84284 = (v_l_id_84284 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_84285 = 0; v_i_84285 < 16; v_i_84285 = (1 + v_i_84285)) {\n        float v_tmp_84378 = 0.0f; \n        v__84299 = v_tmp_84378; \n        int v_index_84379 = v__84291[(v_l_id_84284 + (16 * v_MWidthC_1 * v_wg_id_84283) + (v_MWidthC_1 * v_i_84285))]; \n        if (v_index_84379 < 0) {\n          v__84301_0 = v__84299; \n        } else {\n          if (v_index_84379 >= v_VLength_3) {\n            v__84301_0 = v__84299; \n          } else {\n            v__84301_0 = v__84293[v_index_84379]; \n          }\n        }\n        v__84303[(v_i_84285 + (16 * v_MWidthC_1 * v_wg_id_84283) + (16 * v_l_id_84284))] = mult(v__84301_0, v__84292[(v_l_id_84284 + (16 * v_MWidthC_1 * v_wg_id_84283) + (v_MWidthC_1 * v_i_84285))]); \n      }\n      /* end map_seq */\n      float v_tmp_84380 = 0.0f; \n      v__84304 = v_tmp_84380; \n      /* reduce_seq */\n      for (int v_i_84286 = 0; v_i_84286 < 16; v_i_84286 = (1 + v_i_84286)) {\n        v__84304 = add(v__84304, v__84303[(v_i_84286 + (16 * v_MWidthC_1 * v_wg_id_84283) + (16 * v_l_id_84284))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_84287 = 0; \n        v__84308[v_l_id_84284] = id(v__84304); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_84288 = get_local_id(0); \n      float v_tmp_84383 = 0.0f; \n      v__80974 = v_tmp_84383; \n      /* reduce_seq */\n      for (int v_i_84289 = 0; v_i_84289 < v_MWidthC_1; v_i_84289 = (1 + v_i_84289)) {\n        v__80974 = add(v__80974, v__84308[(v_i_84289 + (v_MWidthC_1 * v_l_id_84288))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_84290 = 0; \n        v__84313[v_wg_id_84283] = doubleMultiplyAdd(v__80974, v__84295, v__84294[v_wg_id_84283], v__84296); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__84291",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__84292",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__84293",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__84294",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__84295",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__84296",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__84303",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__84313",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__84308",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}