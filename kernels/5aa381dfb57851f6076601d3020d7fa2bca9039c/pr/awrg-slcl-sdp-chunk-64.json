{
  "name" : "awrg-slcl-sdp-chunk-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__92400, const global float* restrict v__92401, const global float* restrict v__92402, const global float* restrict v__92403, float v__92404, float v__92405, global float* v__92419, global int* v__92407, global float* v__92413, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__92409; \n  float v__92414; \n  /* Private Memory */\n  float v__92411_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_7800 = v__92407; \n    local int v_w_id_92395; \n    if (get_local_id(0) == 0) {\n      v_w_id_92395 = atomic_inc(v_work_idx_7800); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_92395 < v_MHeight_2)){\n      for (int v_l_id_92396 = get_local_id(0); v_l_id_92396 < 64; v_l_id_92396 = (v_l_id_92396 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_92397 = 0; v_i_92397 < v_MWidthC_1; v_i_92397 = (1 + v_i_92397)) {\n          float v_tmp_92461 = 0.0f; \n          v__92409 = v_tmp_92461; \n          int v_index_92462 = v__92400[(v_i_92397 + (64 * v_MWidthC_1 * v_w_id_92395) + (v_MWidthC_1 * v_l_id_92396))]; \n          if (v_index_92462 < 0) {\n            v__92411_0 = v__92409; \n          } else {\n            if (v_index_92462 >= v_VLength_3) {\n              v__92411_0 = v__92409; \n            } else {\n              v__92411_0 = v__92402[v_index_92462]; \n            }\n          }\n          v__92413[(v_i_92397 + (64 * v_MWidthC_1 * v_w_id_92395) + (v_MWidthC_1 * v_l_id_92396))] = mult(v__92411_0, v__92401[(v_i_92397 + (64 * v_MWidthC_1 * v_w_id_92395) + (v_MWidthC_1 * v_l_id_92396))]); \n        }\n        /* end map_seq */\n        float v_tmp_92463 = 0.0f; \n        v__92414 = v_tmp_92463; \n        /* reduce_seq */\n        for (int v_i_92398 = 0; v_i_92398 < v_MWidthC_1; v_i_92398 = (1 + v_i_92398)) {\n          v__92414 = add(v__92414, v__92413[(v_i_92398 + (64 * v_MWidthC_1 * v_w_id_92395) + (v_MWidthC_1 * v_l_id_92396))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92399 = 0; \n          v__92419[(v_l_id_92396 + (64 * v_w_id_92395))] = doubleMultiplyAdd(v__92414, v__92404, v__92403[(v_l_id_92396 + (64 * v_w_id_92395))], v__92405); \n        }\n        /* end map_seq */\n      }\n      if (get_local_id(0) == 0) {\n        v_w_id_92395 = atomic_inc(v_work_idx_7800); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "slcl",
    "chunkSize" : "64",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__92400",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92401",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92402",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__92403",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2)"
  }, {
    "variable" : "v__92404",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__92405",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__92407",
    "addressSpace" : "global",
    "size" : "4"
  }, {
    "variable" : "v__92413",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__92419",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}