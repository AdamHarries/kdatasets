{
  "name" : "swrg-alcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__88481, const global float* restrict v__88482, const global float* restrict v__88483, const global float* restrict v__88484, float v__88485, float v__88486, global float* v__88503, global float* v__88493, local float* v__88498, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__88489; \n  float v__88494; \n  float v__80974; \n  /* Private Memory */\n  float v__88491_0;\n  \n  for (int v_wg_id_88473 = get_group_id(0); v_wg_id_88473 < v_MHeight_2; v_wg_id_88473 = (v_wg_id_88473 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_7431; \n      v_work_idx_7431 = 0; \n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      int v_l_id_88474 = atomic_inc(&(v_work_idx_7431)); \n      while((v_l_id_88474 < v_MWidthC_1)){\n        /* map_seq */\n        for (int v_i_88475 = 0; v_i_88475 < 32; v_i_88475 = (1 + v_i_88475)) {\n          float v_tmp_88560 = 0.0f; \n          v__88489 = v_tmp_88560; \n          int v_index_88561 = v__88481[(v_l_id_88474 + (32 * v_MWidthC_1 * v_wg_id_88473) + (v_MWidthC_1 * v_i_88475))]; \n          if (v_index_88561 < 0) {\n            v__88491_0 = v__88489; \n          } else {\n            if (v_index_88561 >= v_VLength_3) {\n              v__88491_0 = v__88489; \n            } else {\n              v__88491_0 = v__88483[v_index_88561]; \n            }\n          }\n          v__88493[(v_i_88475 + (32 * v_MWidthC_1 * v_wg_id_88473) + (32 * v_l_id_88474))] = mult(v__88491_0, v__88482[(v_l_id_88474 + (32 * v_MWidthC_1 * v_wg_id_88473) + (v_MWidthC_1 * v_i_88475))]); \n        }\n        /* end map_seq */\n        float v_tmp_88562 = 0.0f; \n        v__88494 = v_tmp_88562; \n        /* reduce_seq */\n        for (int v_i_88476 = 0; v_i_88476 < 32; v_i_88476 = (1 + v_i_88476)) {\n          v__88494 = add(v__88494, v__88493[(v_i_88476 + (32 * v_MWidthC_1 * v_wg_id_88473) + (32 * v_l_id_88474))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_88477 = 0; \n          v__88498[v_l_id_88474] = id(v__88494); \n        }\n        /* end map_seq */\n        v_l_id_88474 = atomic_inc(&(v_work_idx_7431)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_88478 = get_local_id(0); \n      float v_tmp_88565 = 0.0f; \n      v__80974 = v_tmp_88565; \n      /* reduce_seq */\n      for (int v_i_88479 = 0; v_i_88479 < v_MWidthC_1; v_i_88479 = (1 + v_i_88479)) {\n        v__80974 = add(v__80974, v__88498[(v_i_88479 + (v_MWidthC_1 * v_l_id_88478))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_88480 = 0; \n        v__88503[v_wg_id_88473] = doubleMultiplyAdd(v__80974, v__88485, v__88484[v_wg_id_88473], v__88486); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__88481",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__88482",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__88483",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__88484",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__88485",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__88486",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__88493",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__88503",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__88498",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}