{
  "name" : "swrg-slcl-alcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__91283, const global float* restrict v__91284, const global float* restrict v__91285, const global float* restrict v__91286, float v__91287, float v__91288, global float* v__91305, global float* v__91295, local float* v__91300, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__91291; \n  float v__91296; \n  float v__80974; \n  /* Private Memory */\n  float v__91293_0;\n  \n  for (int v_wg_id_91275 = get_group_id(0); v_wg_id_91275 < v_MHeight_2; v_wg_id_91275 = (v_wg_id_91275 + get_num_groups(0))) {\n    for (int v_l_id_91276 = get_local_id(0); v_l_id_91276 < v_MWidthC_1; v_l_id_91276 = (v_l_id_91276 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_91277 = 0; v_i_91277 < 64; v_i_91277 = (1 + v_i_91277)) {\n        float v_tmp_91366 = 0.0f; \n        v__91291 = v_tmp_91366; \n        int v_index_91367 = v__91283[(v_l_id_91276 + (64 * v_MWidthC_1 * v_wg_id_91275) + (v_MWidthC_1 * v_i_91277))]; \n        if (v_index_91367 < 0) {\n          v__91293_0 = v__91291; \n        } else {\n          if (v_index_91367 >= v_VLength_3) {\n            v__91293_0 = v__91291; \n          } else {\n            v__91293_0 = v__91285[v_index_91367]; \n          }\n        }\n        v__91295[(v_i_91277 + (64 * v_MWidthC_1 * v_wg_id_91275) + (64 * v_l_id_91276))] = mult(v__91293_0, v__91284[(v_l_id_91276 + (64 * v_MWidthC_1 * v_wg_id_91275) + (v_MWidthC_1 * v_i_91277))]); \n      }\n      /* end map_seq */\n      float v_tmp_91368 = 0.0f; \n      v__91296 = v_tmp_91368; \n      /* reduce_seq */\n      for (int v_i_91278 = 0; v_i_91278 < 64; v_i_91278 = (1 + v_i_91278)) {\n        v__91296 = add(v__91296, v__91295[(v_i_91278 + (64 * v_MWidthC_1 * v_wg_id_91275) + (64 * v_l_id_91276))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_91279 = 0; \n        v__91300[v_l_id_91276] = id(v__91296); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7691; \n      v_work_idx_7691 = 0; \n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      int v_l_id_91280 = atomic_inc(&(v_work_idx_7691)); \n      while((v_l_id_91280 < 1)){\n        float v_tmp_91371 = 0.0f; \n        v__80974 = v_tmp_91371; \n        /* reduce_seq */\n        for (int v_i_91281 = 0; v_i_91281 < v_MWidthC_1; v_i_91281 = (1 + v_i_91281)) {\n          v__80974 = add(v__80974, v__91300[(v_i_91281 + (v_MWidthC_1 * v_l_id_91280))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_91282 = 0; \n          v__91305[v_wg_id_91275] = doubleMultiplyAdd(v__80974, v__91287, v__91286[v_wg_id_91275], v__91288); \n        }\n        /* end map_seq */\n        v_l_id_91280 = atomic_inc(&(v_work_idx_7691)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__91283",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91284",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91285",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__91286",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__91287",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__91288",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__91295",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__91305",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__91300",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}