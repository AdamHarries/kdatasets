{
  "name" : "swrg-slcl-edp-chunk-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__97541, const global float* restrict v__97542, const global float* restrict v__97543, const global float* restrict v__97544, float v__97545, float v__97546, global float* v__97561, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__97548; \n  float v__97551; \n  /* Private Memory */\n  float v__97553_0;\n  \n  float v__97555_0;\n  \n  int v__97559_0;\n  \n  for (int v_wg_id_97537 = get_group_id(0); v_wg_id_97537 < v_MHeight_2; v_wg_id_97537 = (v_wg_id_97537 + get_num_groups(0))) {\n    for (int v_l_id_97538 = get_local_id(0); v_l_id_97538 < 256; v_l_id_97538 = (v_l_id_97538 + get_local_size(0))) {\n      float v_tmp_97610 = 0.0f; \n      v__97548 = v_tmp_97610; \n      /* reduce_while_seq */\n      for (int v_i_97539 = 0; v_i_97539 < v_MWidthC_1; v_i_97539 = (1 + v_i_97539)) {\n        v__97559_0 = check(v__97548, v__97541[(v_i_97539 + (256 * v_MWidthC_1 * v_wg_id_97537) + (v_MWidthC_1 * v_l_id_97538))]); \n        if (v__97559_0) {\n        } else {\n          break;\n        }\n        float v_tmp_97611 = 0.0f; \n        v__97551 = v_tmp_97611; \n        int v_index_97612 = v__97541[(v_i_97539 + (256 * v_MWidthC_1 * v_wg_id_97537) + (v_MWidthC_1 * v_l_id_97538))]; \n        if (v_index_97612 < 0) {\n          v__97553_0 = v__97551; \n        } else {\n          if (v_index_97612 >= v_VLength_3) {\n            v__97553_0 = v__97551; \n          } else {\n            v__97553_0 = v__97543[v_index_97612]; \n          }\n        }\n        v__97555_0 = mult(v__97553_0, v__97542[(v_i_97539 + (256 * v_MWidthC_1 * v_wg_id_97537) + (v_MWidthC_1 * v_l_id_97538))]); \n        v__97548 = add(v__97555_0, v__97548); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97540 = 0; \n        v__97561[(v_l_id_97538 + (256 * v_wg_id_97537))] = doubleMultiplyAdd(v__97548, v__97545, v__97544[(v_l_id_97538 + (256 * v_wg_id_97537))], v__97546); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__97541",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97542",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97543",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__97544",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2)"
  }, {
    "variable" : "v__97545",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__97546",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__97561",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}