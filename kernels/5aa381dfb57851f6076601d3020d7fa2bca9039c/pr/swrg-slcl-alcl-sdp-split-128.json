{
  "name" : "swrg-slcl-alcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__94617, const global float* restrict v__94618, const global float* restrict v__94619, const global float* restrict v__94620, float v__94621, float v__94622, global float* v__94639, global float* v__94629, local float* v__94634, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__94625; \n  float v__94630; \n  float v__80974; \n  /* Private Memory */\n  float v__94627_0;\n  \n  for (int v_wg_id_94609 = get_group_id(0); v_wg_id_94609 < v_MHeight_2; v_wg_id_94609 = (v_wg_id_94609 + get_num_groups(0))) {\n    for (int v_l_id_94610 = get_local_id(0); v_l_id_94610 < v_MWidthC_1; v_l_id_94610 = (v_l_id_94610 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_94611 = 0; v_i_94611 < 128; v_i_94611 = (1 + v_i_94611)) {\n        float v_tmp_94700 = 0.0f; \n        v__94625 = v_tmp_94700; \n        int v_index_94701 = v__94617[(v_l_id_94610 + (128 * v_MWidthC_1 * v_wg_id_94609) + (v_MWidthC_1 * v_i_94611))]; \n        if (v_index_94701 < 0) {\n          v__94627_0 = v__94625; \n        } else {\n          if (v_index_94701 >= v_VLength_3) {\n            v__94627_0 = v__94625; \n          } else {\n            v__94627_0 = v__94619[v_index_94701]; \n          }\n        }\n        v__94629[(v_i_94611 + (128 * v_MWidthC_1 * v_wg_id_94609) + (128 * v_l_id_94610))] = mult(v__94627_0, v__94618[(v_l_id_94610 + (128 * v_MWidthC_1 * v_wg_id_94609) + (v_MWidthC_1 * v_i_94611))]); \n      }\n      /* end map_seq */\n      float v_tmp_94702 = 0.0f; \n      v__94630 = v_tmp_94702; \n      /* reduce_seq */\n      for (int v_i_94612 = 0; v_i_94612 < 128; v_i_94612 = (1 + v_i_94612)) {\n        v__94630 = add(v__94630, v__94629[(v_i_94612 + (128 * v_MWidthC_1 * v_wg_id_94609) + (128 * v_l_id_94610))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_94613 = 0; \n        v__94634[v_l_id_94610] = id(v__94630); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_8003; \n      v_work_idx_8003 = 0; \n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      int v_l_id_94614 = atomic_inc(&(v_work_idx_8003)); \n      while((v_l_id_94614 < 1)){\n        float v_tmp_94705 = 0.0f; \n        v__80974 = v_tmp_94705; \n        /* reduce_seq */\n        for (int v_i_94615 = 0; v_i_94615 < v_MWidthC_1; v_i_94615 = (1 + v_i_94615)) {\n          v__80974 = add(v__80974, v__94634[(v_i_94615 + (v_MWidthC_1 * v_l_id_94614))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_94616 = 0; \n          v__94639[v_wg_id_94609] = doubleMultiplyAdd(v__80974, v__94621, v__94620[v_wg_id_94609], v__94622); \n        }\n        /* end map_seq */\n        v_l_id_94614 = atomic_inc(&(v_work_idx_8003)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__94617",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94618",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__94619",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__94620",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__94621",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__94622",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__94629",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__94639",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__94634",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}