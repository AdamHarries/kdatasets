{
  "name" : "swrg-slcl-edp-chunk-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__84205, const global float* restrict v__84206, const global float* restrict v__84207, const global float* restrict v__84208, float v__84209, float v__84210, global float* v__84225, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__84212; \n  float v__84215; \n  /* Private Memory */\n  float v__84217_0;\n  \n  float v__84219_0;\n  \n  int v__84223_0;\n  \n  for (int v_wg_id_84201 = get_group_id(0); v_wg_id_84201 < v_MHeight_2; v_wg_id_84201 = (v_wg_id_84201 + get_num_groups(0))) {\n    for (int v_l_id_84202 = get_local_id(0); v_l_id_84202 < 16; v_l_id_84202 = (v_l_id_84202 + get_local_size(0))) {\n      float v_tmp_84274 = 0.0f; \n      v__84212 = v_tmp_84274; \n      /* reduce_while_seq */\n      for (int v_i_84203 = 0; v_i_84203 < v_MWidthC_1; v_i_84203 = (1 + v_i_84203)) {\n        v__84223_0 = check(v__84212, v__84205[(v_i_84203 + (16 * v_MWidthC_1 * v_wg_id_84201) + (v_MWidthC_1 * v_l_id_84202))]); \n        if (v__84223_0) {\n        } else {\n          break;\n        }\n        float v_tmp_84275 = 0.0f; \n        v__84215 = v_tmp_84275; \n        int v_index_84276 = v__84205[(v_i_84203 + (16 * v_MWidthC_1 * v_wg_id_84201) + (v_MWidthC_1 * v_l_id_84202))]; \n        if (v_index_84276 < 0) {\n          v__84217_0 = v__84215; \n        } else {\n          if (v_index_84276 >= v_VLength_3) {\n            v__84217_0 = v__84215; \n          } else {\n            v__84217_0 = v__84207[v_index_84276]; \n          }\n        }\n        v__84219_0 = mult(v__84217_0, v__84206[(v_i_84203 + (16 * v_MWidthC_1 * v_wg_id_84201) + (v_MWidthC_1 * v_l_id_84202))]); \n        v__84212 = add(v__84219_0, v__84212); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_84204 = 0; \n        v__84225[(v_l_id_84202 + (16 * v_wg_id_84201))] = doubleMultiplyAdd(v__84212, v__84209, v__84208[(v_l_id_84202 + (16 * v_wg_id_84201))], v__84210); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "16",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__84205",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__84206",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__84207",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__84208",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2)"
  }, {
    "variable" : "v__84209",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__84210",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__84225",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}