{
  "name" : "swrg-slcl-edp-chunk-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__87539, const global float* restrict v__87540, const global float* restrict v__87541, const global float* restrict v__87542, float v__87543, float v__87544, global float* v__87559, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__87546; \n  float v__87549; \n  /* Private Memory */\n  float v__87551_0;\n  \n  float v__87553_0;\n  \n  int v__87557_0;\n  \n  for (int v_wg_id_87535 = get_group_id(0); v_wg_id_87535 < v_MHeight_2; v_wg_id_87535 = (v_wg_id_87535 + get_num_groups(0))) {\n    for (int v_l_id_87536 = get_local_id(0); v_l_id_87536 < 32; v_l_id_87536 = (v_l_id_87536 + get_local_size(0))) {\n      float v_tmp_87608 = 0.0f; \n      v__87546 = v_tmp_87608; \n      /* reduce_while_seq */\n      for (int v_i_87537 = 0; v_i_87537 < v_MWidthC_1; v_i_87537 = (1 + v_i_87537)) {\n        v__87557_0 = check(v__87546, v__87539[(v_i_87537 + (32 * v_MWidthC_1 * v_wg_id_87535) + (v_MWidthC_1 * v_l_id_87536))]); \n        if (v__87557_0) {\n        } else {\n          break;\n        }\n        float v_tmp_87609 = 0.0f; \n        v__87549 = v_tmp_87609; \n        int v_index_87610 = v__87539[(v_i_87537 + (32 * v_MWidthC_1 * v_wg_id_87535) + (v_MWidthC_1 * v_l_id_87536))]; \n        if (v_index_87610 < 0) {\n          v__87551_0 = v__87549; \n        } else {\n          if (v_index_87610 >= v_VLength_3) {\n            v__87551_0 = v__87549; \n          } else {\n            v__87551_0 = v__87541[v_index_87610]; \n          }\n        }\n        v__87553_0 = mult(v__87551_0, v__87540[(v_i_87537 + (32 * v_MWidthC_1 * v_wg_id_87535) + (v_MWidthC_1 * v_l_id_87536))]); \n        v__87546 = add(v__87553_0, v__87546); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_87538 = 0; \n        v__87559[(v_l_id_87536 + (32 * v_wg_id_87535))] = doubleMultiplyAdd(v__87546, v__87543, v__87542[(v_l_id_87536 + (32 * v_wg_id_87535))], v__87544); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__87539",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__87540",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__87541",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__87542",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2)"
  }, {
    "variable" : "v__87543",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__87544",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__87559",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}