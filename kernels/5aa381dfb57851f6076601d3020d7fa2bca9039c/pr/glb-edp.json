{
  "name" : "glb-edp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__80392, const global float* restrict v__80393, const global float* restrict v__80394, const global float* restrict v__80395, float v__80396, float v__80397, global float* v__80412, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__80399; \n  float v__80402; \n  /* Private Memory */\n  float v__80404; \n  float v__80406; \n  int v__80410; \n  for (int v_gl_id_80389 = get_global_id(0); v_gl_id_80389 < v_MHeight_2; v_gl_id_80389 = (v_gl_id_80389 + get_global_size(0))) {\n    float v_tmp_80445 = 0.0f; \n    v__80399 = v_tmp_80445; \n    /* reduce_while_seq */\n    for (int v_i_80390 = 0; v_i_80390 < v_MWidthC_1; v_i_80390 = (1 + v_i_80390)) {\n      v__80410 = check(v__80399, v__80392[(v_i_80390 + (v_MWidthC_1 * v_gl_id_80389))]); \n      if (v__80410) {\n      } else {\n        break;\n      }\n      float v_tmp_80446 = 0.0f; \n      v__80402 = v_tmp_80446; \n      int v_index_80447 = v__80392[(v_i_80390 + (v_MWidthC_1 * v_gl_id_80389))]; \n      if (v_index_80447 < 0) {\n        v__80404 = v__80402; \n      } else {\n        if (v_index_80447 >= v_VLength_3) {\n          v__80404 = v__80402; \n        } else {\n          v__80404 = v__80394[v_index_80447]; \n        }\n      }\n      v__80406 = mult(v__80404, v__80393[(v_i_80390 + (v_MWidthC_1 * v_gl_id_80389))]); \n      v__80399 = add(v__80406, v__80399); \n    }\n    /* end reduce_while_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_80391 = 0; \n      v__80412[v_gl_id_80389] = doubleMultiplyAdd(v__80399, v__80396, v__80395[v_gl_id_80389], v__80397); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__80392",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__80393",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__80394",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__80395",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__80396",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__80397",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__80412",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}