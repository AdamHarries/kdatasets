{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__73839, const global float* restrict v__73840, const global float* restrict v__73841, const global float* restrict v__73842, float v__73843, float v__73844, global float* v__73861, global float* v__73851, local float* v__73856, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__73847; \n  float v__73852; \n  float v__57186; \n  /* Private Memory */\n  float v__73849_0;\n  \n  for (int v_wg_id_73831 = get_group_id(0); v_wg_id_73831 < v_MHeight_2; v_wg_id_73831 = (v_wg_id_73831 + get_num_groups(0))) {\n    for (int v_l_id_73832 = get_local_id(0); v_l_id_73832 < v_MWidthC_1; v_l_id_73832 = (v_l_id_73832 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_73833 = 0; v_i_73833 < 256; v_i_73833 = (1 + v_i_73833)) {\n        float v_tmp_73926 = 3.4028235E38f; \n        v__73847 = v_tmp_73926; \n        int v_index_73927 = v__73839[(v_l_id_73832 + (256 * v_MWidthC_1 * v_wg_id_73831) + (v_MWidthC_1 * v_i_73833))]; \n        if (v_index_73927 < 0) {\n          v__73849_0 = v__73847; \n        } else {\n          if (v_index_73927 >= v_VLength_3) {\n            v__73849_0 = v__73847; \n          } else {\n            v__73849_0 = v__73841[v_index_73927]; \n          }\n        }\n        v__73851[(v_i_73833 + (256 * v_MWidthC_1 * v_wg_id_73831) + (256 * v_l_id_73832))] = absadd(v__73849_0, v__73840[(v_l_id_73832 + (256 * v_MWidthC_1 * v_wg_id_73831) + (v_MWidthC_1 * v_i_73833))]); \n      }\n      /* end map_seq */\n      float v_tmp_73928 = 3.4028235E38f; \n      v__73852 = v_tmp_73928; \n      /* reduce_seq */\n      for (int v_i_73834 = 0; v_i_73834 < 256; v_i_73834 = (1 + v_i_73834)) {\n        v__73852 = clmin(v__73852, v__73851[(v_i_73834 + (256 * v_MWidthC_1 * v_wg_id_73831) + (256 * v_l_id_73832))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_73835 = 0; \n        v__73856[v_l_id_73832] = id(v__73852); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_73836 = get_local_id(0); \n      float v_tmp_73931 = 3.4028235E38f; \n      v__57186 = v_tmp_73931; \n      /* reduce_seq */\n      for (int v_i_73837 = 0; v_i_73837 < v_MWidthC_1; v_i_73837 = (1 + v_i_73837)) {\n        v__57186 = clmin(v__57186, v__73856[(v_i_73837 + (v_MWidthC_1 * v_l_id_73836))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_73838 = 0; \n        v__73861[v_wg_id_73831] = doubleMultiplyAdd(v__57186, v__73843, v__73842[v_wg_id_73831], v__73844); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__73839",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__73840",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__73841",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__73842",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__73843",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__73844",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__73851",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__73861",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__73856",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}