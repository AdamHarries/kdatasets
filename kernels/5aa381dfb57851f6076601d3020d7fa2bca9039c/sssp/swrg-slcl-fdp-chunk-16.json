{
  "name" : "swrg-slcl-fdp-chunk-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__60343, const global float* restrict v__60344, const global float* restrict v__60345, const global float* restrict v__60346, float v__60347, float v__60348, global float* v__60361, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__60351; \n  float v__60353; \n  /* Private Memory */\n  float v__60355_0;\n  \n  float v__60357_0;\n  \n  for (int v_wg_id_60339 = get_group_id(0); v_wg_id_60339 < v_MHeight_2; v_wg_id_60339 = (v_wg_id_60339 + get_num_groups(0))) {\n    for (int v_l_id_60340 = get_local_id(0); v_l_id_60340 < 16; v_l_id_60340 = (v_l_id_60340 + get_local_size(0))) {\n      float v_tmp_60404 = 3.4028235E38f; \n      v__60351 = v_tmp_60404; \n      /* reduce_seq */\n      for (int v_i_60341 = 0; v_i_60341 < v_MWidthC_1; v_i_60341 = (1 + v_i_60341)) {\n        float v_tmp_60405 = 3.4028235E38f; \n        v__60353 = v_tmp_60405; \n        int v_index_60406 = v__60343[(v_i_60341 + (16 * v_MWidthC_1 * v_wg_id_60339) + (v_MWidthC_1 * v_l_id_60340))]; \n        if (v_index_60406 < 0) {\n          v__60355_0 = v__60353; \n        } else {\n          if (v_index_60406 >= v_VLength_3) {\n            v__60355_0 = v__60353; \n          } else {\n            v__60355_0 = v__60345[v_index_60406]; \n          }\n        }\n        v__60357_0 = absadd(v__60355_0, v__60344[(v_i_60341 + (16 * v_MWidthC_1 * v_wg_id_60339) + (v_MWidthC_1 * v_l_id_60340))]); \n        v__60351 = clmin(v__60357_0, v__60351); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_60342 = 0; \n        v__60361[(v_l_id_60340 + (16 * v_wg_id_60339))] = doubleMultiplyAdd(v__60351, v__60347, v__60346[(v_l_id_60340 + (16 * v_wg_id_60339))], v__60348); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "16",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__60343",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__60344",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__60345",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__60346",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2)"
  }, {
    "variable" : "v__60347",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__60348",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__60361",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}