{
  "name" : "swrg-slcl-slcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nkernel void KERNEL(const global int* restrict v__77385, const global float* restrict v__77386, const global float* restrict v__77387, const global float* restrict v__77388, float v__77389, float v__77390, global float* v__77409, local float* v__77404, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77393; \n  float v__77395; \n  float v__57186; \n  /* Private Memory */\n  float v__77397_0;\n  \n  float v__77399_0;\n  \n  int v__77403_0;\n  \n  for (int v_wg_id_77378 = get_group_id(0); v_wg_id_77378 < v_MHeight_2; v_wg_id_77378 = (v_wg_id_77378 + get_num_groups(0))) {\n    for (int v_l_id_77379 = get_local_id(0); v_l_id_77379 < v_MWidthC_1; v_l_id_77379 = (v_l_id_77379 + get_local_size(0))) {\n      float v_tmp_77477 = 3.4028235E38f; \n      v__77393 = v_tmp_77477; \n      /* reduce_while_seq */\n      for (int v_i_77380 = 0; v_i_77380 < 512; v_i_77380 = (1 + v_i_77380)) {\n        v__77403_0 = check(v__77393, v__77385[(v_l_id_77379 + (512 * v_MWidthC_1 * v_wg_id_77378) + (v_MWidthC_1 * v_i_77380))]); \n        if (v__77403_0) {\n        } else {\n          break;\n        }\n        float v_tmp_77478 = 3.4028235E38f; \n        v__77395 = v_tmp_77478; \n        int v_index_77479 = v__77385[(v_l_id_77379 + (512 * v_MWidthC_1 * v_wg_id_77378) + (v_MWidthC_1 * v_i_77380))]; \n        if (v_index_77479 < 0) {\n          v__77397_0 = v__77395; \n        } else {\n          if (v_index_77479 >= v_VLength_3) {\n            v__77397_0 = v__77395; \n          } else {\n            v__77397_0 = v__77387[v_index_77479]; \n          }\n        }\n        v__77399_0 = absadd(v__77397_0, v__77386[(v_l_id_77379 + (512 * v_MWidthC_1 * v_wg_id_77378) + (v_MWidthC_1 * v_i_77380))]); \n        v__77393 = clmin(v__77399_0, v__77393); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77381 = 0; \n        v__77404[v_l_id_77379] = id(v__77393); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_77382 = get_local_id(0); \n      float v_tmp_77482 = 3.4028235E38f; \n      v__57186 = v_tmp_77482; \n      /* reduce_seq */\n      for (int v_i_77383 = 0; v_i_77383 < v_MWidthC_1; v_i_77383 = (1 + v_i_77383)) {\n        v__57186 = clmin(v__57186, v__77404[(v_i_77383 + (v_MWidthC_1 * v_l_id_77382))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77384 = 0; \n        v__77409[v_wg_id_77378] = doubleMultiplyAdd(v__57186, v__77389, v__77388[v_wg_id_77378], v__77390); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__77385",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77386",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77387",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77388",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__77389",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77390",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__77409",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__77404",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}