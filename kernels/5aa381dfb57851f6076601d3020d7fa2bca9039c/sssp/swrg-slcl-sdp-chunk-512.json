{
  "name" : "swrg-slcl-sdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__76938, const global float* restrict v__76939, const global float* restrict v__76940, const global float* restrict v__76941, float v__76942, float v__76943, global float* v__76956, global float* v__76950, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__76946; \n  float v__76951; \n  /* Private Memory */\n  float v__76948_0;\n  \n  for (int v_wg_id_76933 = get_group_id(0); v_wg_id_76933 < v_MHeight_2; v_wg_id_76933 = (v_wg_id_76933 + get_num_groups(0))) {\n    for (int v_l_id_76934 = get_local_id(0); v_l_id_76934 < 512; v_l_id_76934 = (v_l_id_76934 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_76935 = 0; v_i_76935 < v_MWidthC_1; v_i_76935 = (1 + v_i_76935)) {\n        float v_tmp_77000 = 3.4028235E38f; \n        v__76946 = v_tmp_77000; \n        int v_index_77001 = v__76938[(v_i_76935 + (512 * v_MWidthC_1 * v_wg_id_76933) + (v_MWidthC_1 * v_l_id_76934))]; \n        if (v_index_77001 < 0) {\n          v__76948_0 = v__76946; \n        } else {\n          if (v_index_77001 >= v_VLength_3) {\n            v__76948_0 = v__76946; \n          } else {\n            v__76948_0 = v__76940[v_index_77001]; \n          }\n        }\n        v__76950[(v_i_76935 + (512 * v_MWidthC_1 * v_wg_id_76933) + (v_MWidthC_1 * v_l_id_76934))] = absadd(v__76948_0, v__76939[(v_i_76935 + (512 * v_MWidthC_1 * v_wg_id_76933) + (v_MWidthC_1 * v_l_id_76934))]); \n      }\n      /* end map_seq */\n      float v_tmp_77002 = 3.4028235E38f; \n      v__76951 = v_tmp_77002; \n      /* reduce_seq */\n      for (int v_i_76936 = 0; v_i_76936 < v_MWidthC_1; v_i_76936 = (1 + v_i_76936)) {\n        v__76951 = clmin(v__76951, v__76950[(v_i_76936 + (512 * v_MWidthC_1 * v_wg_id_76933) + (v_MWidthC_1 * v_l_id_76934))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_76937 = 0; \n        v__76956[(v_l_id_76934 + (512 * v_wg_id_76933))] = doubleMultiplyAdd(v__76951, v__76942, v__76941[(v_l_id_76934 + (512 * v_wg_id_76933))], v__76943); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__76938",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__76939",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__76940",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__76941",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2)"
  }, {
    "variable" : "v__76942",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__76943",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__76950",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__76956",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}