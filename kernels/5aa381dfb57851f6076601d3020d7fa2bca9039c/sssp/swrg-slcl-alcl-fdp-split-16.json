{
  "name" : "swrg-slcl-alcl-fdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__60929, const global float* restrict v__60930, const global float* restrict v__60931, const global float* restrict v__60932, float v__60933, float v__60934, global float* v__60951, local float* v__60946, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__60937; \n  float v__60939; \n  float v__57186; \n  /* Private Memory */\n  float v__60941_0;\n  \n  float v__60943_0;\n  \n  for (int v_wg_id_60922 = get_group_id(0); v_wg_id_60922 < v_MHeight_2; v_wg_id_60922 = (v_wg_id_60922 + get_num_groups(0))) {\n    for (int v_l_id_60923 = get_local_id(0); v_l_id_60923 < v_MWidthC_1; v_l_id_60923 = (v_l_id_60923 + get_local_size(0))) {\n      float v_tmp_61012 = 3.4028235E38f; \n      v__60937 = v_tmp_61012; \n      /* reduce_seq */\n      for (int v_i_60924 = 0; v_i_60924 < 16; v_i_60924 = (1 + v_i_60924)) {\n        float v_tmp_61013 = 3.4028235E38f; \n        v__60939 = v_tmp_61013; \n        int v_index_61014 = v__60929[(v_l_id_60923 + (16 * v_MWidthC_1 * v_wg_id_60922) + (v_MWidthC_1 * v_i_60924))]; \n        if (v_index_61014 < 0) {\n          v__60941_0 = v__60939; \n        } else {\n          if (v_index_61014 >= v_VLength_3) {\n            v__60941_0 = v__60939; \n          } else {\n            v__60941_0 = v__60931[v_index_61014]; \n          }\n        }\n        v__60943_0 = absadd(v__60941_0, v__60930[(v_l_id_60923 + (16 * v_MWidthC_1 * v_wg_id_60922) + (v_MWidthC_1 * v_i_60924))]); \n        v__60937 = clmin(v__60943_0, v__60937); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_60925 = 0; \n        v__60946[v_l_id_60923] = id(v__60937); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_4854; \n      v_work_idx_4854 = 0; \n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      int v_l_id_60926 = atomic_inc(&(v_work_idx_4854)); \n      while((v_l_id_60926 < 1)){\n        float v_tmp_61017 = 3.4028235E38f; \n        v__57186 = v_tmp_61017; \n        /* reduce_seq */\n        for (int v_i_60927 = 0; v_i_60927 < v_MWidthC_1; v_i_60927 = (1 + v_i_60927)) {\n          v__57186 = clmin(v__57186, v__60946[(v_i_60927 + (v_MWidthC_1 * v_l_id_60926))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_60928 = 0; \n          v__60951[v_wg_id_60922] = doubleMultiplyAdd(v__57186, v__60933, v__60932[v_wg_id_60922], v__60934); \n        }\n        /* end map_seq */\n        v_l_id_60926 = atomic_inc(&(v_work_idx_4854)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__60929",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__60930",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__60931",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__60932",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__60933",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__60934",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__60951",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__60946",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}