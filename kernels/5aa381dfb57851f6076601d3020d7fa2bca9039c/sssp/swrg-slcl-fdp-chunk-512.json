{
  "name" : "swrg-slcl-fdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__77013, const global float* restrict v__77014, const global float* restrict v__77015, const global float* restrict v__77016, float v__77017, float v__77018, global float* v__77031, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__77021; \n  float v__77023; \n  /* Private Memory */\n  float v__77025_0;\n  \n  float v__77027_0;\n  \n  for (int v_wg_id_77009 = get_group_id(0); v_wg_id_77009 < v_MHeight_2; v_wg_id_77009 = (v_wg_id_77009 + get_num_groups(0))) {\n    for (int v_l_id_77010 = get_local_id(0); v_l_id_77010 < 512; v_l_id_77010 = (v_l_id_77010 + get_local_size(0))) {\n      float v_tmp_77074 = 3.4028235E38f; \n      v__77021 = v_tmp_77074; \n      /* reduce_seq */\n      for (int v_i_77011 = 0; v_i_77011 < v_MWidthC_1; v_i_77011 = (1 + v_i_77011)) {\n        float v_tmp_77075 = 3.4028235E38f; \n        v__77023 = v_tmp_77075; \n        int v_index_77076 = v__77013[(v_i_77011 + (512 * v_MWidthC_1 * v_wg_id_77009) + (v_MWidthC_1 * v_l_id_77010))]; \n        if (v_index_77076 < 0) {\n          v__77025_0 = v__77023; \n        } else {\n          if (v_index_77076 >= v_VLength_3) {\n            v__77025_0 = v__77023; \n          } else {\n            v__77025_0 = v__77015[v_index_77076]; \n          }\n        }\n        v__77027_0 = absadd(v__77025_0, v__77014[(v_i_77011 + (512 * v_MWidthC_1 * v_wg_id_77009) + (v_MWidthC_1 * v_l_id_77010))]); \n        v__77021 = clmin(v__77027_0, v__77021); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_77012 = 0; \n        v__77031[(v_l_id_77010 + (512 * v_wg_id_77009))] = doubleMultiplyAdd(v__77021, v__77017, v__77016[(v_l_id_77010 + (512 * v_wg_id_77009))], v__77018); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__77013",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77014",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__77015",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__77016",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2)"
  }, {
    "variable" : "v__77017",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__77018",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__77031",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}