{
  "name" : "swrg-slcl-slcl-sdp-split-8",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__57168, const global float* restrict v__57169, const global float* restrict v__57170, const global float* restrict v__57171, float v__57172, float v__57173, global float* v__57191, global float* v__57180, local float* v__57185, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__57176; \n  float v__57181; \n  float v__57186; \n  /* Private Memory */\n  float v__57178_0;\n  \n  for (int v_wg_id_57160 = get_group_id(0); v_wg_id_57160 < v_MHeight_2; v_wg_id_57160 = (v_wg_id_57160 + get_num_groups(0))) {\n    for (int v_l_id_57161 = get_local_id(0); v_l_id_57161 < v_MWidthC_1; v_l_id_57161 = (v_l_id_57161 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_57162 = 0; v_i_57162 < 8; v_i_57162 = (1 + v_i_57162)) {\n        float v_tmp_57256 = 3.4028235E38f; \n        v__57176 = v_tmp_57256; \n        int v_index_57257 = v__57168[(v_l_id_57161 + (8 * v_MWidthC_1 * v_wg_id_57160) + (v_MWidthC_1 * v_i_57162))]; \n        if (v_index_57257 < 0) {\n          v__57178_0 = v__57176; \n        } else {\n          if (v_index_57257 >= v_VLength_3) {\n            v__57178_0 = v__57176; \n          } else {\n            v__57178_0 = v__57170[v_index_57257]; \n          }\n        }\n        v__57180[(v_i_57162 + (8 * v_MWidthC_1 * v_wg_id_57160) + (8 * v_l_id_57161))] = absadd(v__57178_0, v__57169[(v_l_id_57161 + (8 * v_MWidthC_1 * v_wg_id_57160) + (v_MWidthC_1 * v_i_57162))]); \n      }\n      /* end map_seq */\n      float v_tmp_57258 = 3.4028235E38f; \n      v__57181 = v_tmp_57258; \n      /* reduce_seq */\n      for (int v_i_57163 = 0; v_i_57163 < 8; v_i_57163 = (1 + v_i_57163)) {\n        v__57181 = clmin(v__57181, v__57180[(v_i_57163 + (8 * v_MWidthC_1 * v_wg_id_57160) + (8 * v_l_id_57161))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_57164 = 0; \n        v__57185[v_l_id_57161] = id(v__57181); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_57165 = get_local_id(0); \n      float v_tmp_57261 = 3.4028235E38f; \n      v__57186 = v_tmp_57261; \n      /* reduce_seq */\n      for (int v_i_57166 = 0; v_i_57166 < v_MWidthC_1; v_i_57166 = (1 + v_i_57166)) {\n        v__57186 = clmin(v__57186, v__57185[(v_i_57166 + (v_MWidthC_1 * v_l_id_57165))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_57167 = 0; \n        v__57191[v_wg_id_57160] = doubleMultiplyAdd(v__57186, v__57172, v__57171[v_wg_id_57160], v__57173); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "8",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__57168",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57169",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57170",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__57171",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57172",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57173",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__57180",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__57191",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__57185",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}