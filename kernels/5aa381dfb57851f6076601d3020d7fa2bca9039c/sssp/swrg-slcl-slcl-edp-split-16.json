{
  "name" : "swrg-slcl-slcl-edp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nkernel void KERNEL(const global int* restrict v__60715, const global float* restrict v__60716, const global float* restrict v__60717, const global float* restrict v__60718, float v__60719, float v__60720, global float* v__60739, local float* v__60734, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__60723; \n  float v__60725; \n  float v__57186; \n  /* Private Memory */\n  float v__60727_0;\n  \n  float v__60729_0;\n  \n  int v__60733_0;\n  \n  for (int v_wg_id_60708 = get_group_id(0); v_wg_id_60708 < v_MHeight_2; v_wg_id_60708 = (v_wg_id_60708 + get_num_groups(0))) {\n    for (int v_l_id_60709 = get_local_id(0); v_l_id_60709 < v_MWidthC_1; v_l_id_60709 = (v_l_id_60709 + get_local_size(0))) {\n      float v_tmp_60807 = 3.4028235E38f; \n      v__60723 = v_tmp_60807; \n      /* reduce_while_seq */\n      for (int v_i_60710 = 0; v_i_60710 < 16; v_i_60710 = (1 + v_i_60710)) {\n        v__60733_0 = check(v__60723, v__60715[(v_l_id_60709 + (16 * v_MWidthC_1 * v_wg_id_60708) + (v_MWidthC_1 * v_i_60710))]); \n        if (v__60733_0) {\n        } else {\n          break;\n        }\n        float v_tmp_60808 = 3.4028235E38f; \n        v__60725 = v_tmp_60808; \n        int v_index_60809 = v__60715[(v_l_id_60709 + (16 * v_MWidthC_1 * v_wg_id_60708) + (v_MWidthC_1 * v_i_60710))]; \n        if (v_index_60809 < 0) {\n          v__60727_0 = v__60725; \n        } else {\n          if (v_index_60809 >= v_VLength_3) {\n            v__60727_0 = v__60725; \n          } else {\n            v__60727_0 = v__60717[v_index_60809]; \n          }\n        }\n        v__60729_0 = absadd(v__60727_0, v__60716[(v_l_id_60709 + (16 * v_MWidthC_1 * v_wg_id_60708) + (v_MWidthC_1 * v_i_60710))]); \n        v__60723 = clmin(v__60729_0, v__60723); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_60711 = 0; \n        v__60734[v_l_id_60709] = id(v__60723); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_60712 = get_local_id(0); \n      float v_tmp_60812 = 3.4028235E38f; \n      v__57186 = v_tmp_60812; \n      /* reduce_seq */\n      for (int v_i_60713 = 0; v_i_60713 < v_MWidthC_1; v_i_60713 = (1 + v_i_60713)) {\n        v__57186 = clmin(v__57186, v__60734[(v_i_60713 + (v_MWidthC_1 * v_l_id_60712))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_60714 = 0; \n        v__60739[v_wg_id_60708] = doubleMultiplyAdd(v__57186, v__60719, v__60718[v_wg_id_60708], v__60720); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__60715",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__60716",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__60717",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__60718",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__60719",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__60720",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__60739",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__60734",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}