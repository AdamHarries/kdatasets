{
  "name" : "glb-fdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__8968, const global float* restrict v__8969, const global float* restrict v__8970, const global float* restrict v__8971, float v__8972, float v__8973, global float* v__8986, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__8976; \n  float v__8978; \n  /* Private Memory */\n  float v__8980; \n  float v__8982; \n  for (int v_gl_id_8965 = get_global_id(0); v_gl_id_8965 < v_MHeight_2; v_gl_id_8965 = (v_gl_id_8965 + get_global_size(0))) {\n    float v_tmp_9016 = 0.0f; \n    v__8976 = v_tmp_9016; \n    /* reduce_seq */\n    for (int v_i_8966 = 0; v_i_8966 < v_MWidthC_1; v_i_8966 = (1 + v_i_8966)) {\n      float v_tmp_9017 = 0.0f; \n      v__8978 = v_tmp_9017; \n      int v_index_9018 = v__8968[(v_i_8966 + (v_MWidthC_1 * v_gl_id_8965))]; \n      if (v_index_9018 < 0) {\n        v__8980 = v__8978; \n      } else {\n        if (v_index_9018 >= v_VLength_3) {\n          v__8980 = v__8978; \n        } else {\n          v__8980 = v__8970[v_index_9018]; \n        }\n      }\n      v__8982 = mult(v__8980, v__8969[(v_i_8966 + (v_MWidthC_1 * v_gl_id_8965))]); \n      v__8976 = add(v__8982, v__8976); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_8967 = 0; \n      v__8986[v_gl_id_8965] = doubleMultiplyAdd(v__8976, v__8972, v__8971[v_gl_id_8965], v__8973); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__8968",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__8969",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__8970",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__8971",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__8972",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__8973",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__8986",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}