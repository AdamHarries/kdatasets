{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__22929, const global float* restrict v__22930, const global float* restrict v__22931, const global float* restrict v__22932, float v__22933, float v__22934, global float* v__22951, global float* v__22941, local float* v__22946, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__22937; \n  float v__22942; \n  float v__9610; \n  /* Private Memory */\n  float v__22939_0;\n  \n  for (int v_wg_id_22921 = get_group_id(0); v_wg_id_22921 < v_MHeight_2; v_wg_id_22921 = (v_wg_id_22921 + get_num_groups(0))) {\n    for (int v_l_id_22922 = get_local_id(0); v_l_id_22922 < v_MWidthC_1; v_l_id_22922 = (v_l_id_22922 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_22923 = 0; v_i_22923 < 128; v_i_22923 = (1 + v_i_22923)) {\n        float v_tmp_23016 = 0.0f; \n        v__22937 = v_tmp_23016; \n        int v_index_23017 = v__22929[(v_l_id_22922 + (128 * v_MWidthC_1 * v_wg_id_22921) + (v_MWidthC_1 * v_i_22923))]; \n        if (v_index_23017 < 0) {\n          v__22939_0 = v__22937; \n        } else {\n          if (v_index_23017 >= v_VLength_3) {\n            v__22939_0 = v__22937; \n          } else {\n            v__22939_0 = v__22931[v_index_23017]; \n          }\n        }\n        v__22941[(v_i_22923 + (128 * v_MWidthC_1 * v_wg_id_22921) + (128 * v_l_id_22922))] = mult(v__22939_0, v__22930[(v_l_id_22922 + (128 * v_MWidthC_1 * v_wg_id_22921) + (v_MWidthC_1 * v_i_22923))]); \n      }\n      /* end map_seq */\n      float v_tmp_23018 = 0.0f; \n      v__22942 = v_tmp_23018; \n      /* reduce_seq */\n      for (int v_i_22924 = 0; v_i_22924 < 128; v_i_22924 = (1 + v_i_22924)) {\n        v__22942 = add(v__22942, v__22941[(v_i_22924 + (128 * v_MWidthC_1 * v_wg_id_22921) + (128 * v_l_id_22922))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22925 = 0; \n        v__22946[v_l_id_22922] = id(v__22942); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_22926 = get_local_id(0); \n      float v_tmp_23021 = 0.0f; \n      v__9610 = v_tmp_23021; \n      /* reduce_seq */\n      for (int v_i_22927 = 0; v_i_22927 < v_MWidthC_1; v_i_22927 = (1 + v_i_22927)) {\n        v__9610 = add(v__9610, v__22946[(v_i_22927 + (v_MWidthC_1 * v_l_id_22926))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22928 = 0; \n        v__22951[v_wg_id_22921] = doubleMultiplyAdd(v__9610, v__22933, v__22932[v_wg_id_22921], v__22934); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__22929",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22930",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22931",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__22932",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__22933",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__22934",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__22941",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__22951",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__22946",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}