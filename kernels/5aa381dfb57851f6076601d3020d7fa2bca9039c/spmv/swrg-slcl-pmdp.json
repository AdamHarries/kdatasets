{
  "name" : "swrg-slcl-pmdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__9094, const global float* restrict v__9095, const global float* restrict v__9096, const global float* restrict v__9097, float v__9098, float v__9099, global float* v__9112, global float* v__9106, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__9102; \n  float v__9107; \n  /* Private Memory */\n  float v__9104_0;\n  \n  for (int v_wg_id_9090 = get_group_id(0); v_wg_id_9090 < v_MHeight_2; v_wg_id_9090 = (v_wg_id_9090 + get_num_groups(0))) {\n    for (int v_l_id_9091 = get_local_id(0); v_l_id_9091 < v_MWidthC_1; v_l_id_9091 = (v_l_id_9091 + get_local_size(0))) {\n      float v_tmp_9151 = 0.0f; \n      v__9102 = v_tmp_9151; \n      int v_index_9152 = v__9094[(v_l_id_9091 + (v_MWidthC_1 * v_wg_id_9090))]; \n      if (v_index_9152 < 0) {\n        v__9104_0 = v__9102; \n      } else {\n        if (v_index_9152 >= v_VLength_3) {\n          v__9104_0 = v__9102; \n        } else {\n          v__9104_0 = v__9096[v_index_9152]; \n        }\n      }\n      v__9106[(v_l_id_9091 + (v_MWidthC_1 * v_wg_id_9090))] = mult(v__9104_0, v__9095[(v_l_id_9091 + (v_MWidthC_1 * v_wg_id_9090))]); \n    }\n    float v_tmp_9153 = 0.0f; \n    v__9107 = v_tmp_9153; \n    /* reduce_seq */\n    for (int v_i_9092 = 0; v_i_9092 < v_MWidthC_1; v_i_9092 = (1 + v_i_9092)) {\n      v__9107 = add(v__9107, v__9106[(v_i_9092 + (v_MWidthC_1 * v_wg_id_9090))]); \n    }\n    /* end reduce_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_9093 = 0; \n      v__9112[v_wg_id_9090] = doubleMultiplyAdd(v__9107, v__9098, v__9097[v_wg_id_9090], v__9099); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__9094",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__9095",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__9096",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__9097",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__9098",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__9099",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__9106",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__9112",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}