{
  "name" : "swrg-slcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__16261, const global float* restrict v__16262, const global float* restrict v__16263, const global float* restrict v__16264, float v__16265, float v__16266, global float* v__16283, global float* v__16273, local float* v__16278, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__16269; \n  float v__16274; \n  float v__9610; \n  /* Private Memory */\n  float v__16271_0;\n  \n  for (int v_wg_id_16253 = get_group_id(0); v_wg_id_16253 < v_MHeight_2; v_wg_id_16253 = (v_wg_id_16253 + get_num_groups(0))) {\n    for (int v_l_id_16254 = get_local_id(0); v_l_id_16254 < v_MWidthC_1; v_l_id_16254 = (v_l_id_16254 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_16255 = 0; v_i_16255 < 32; v_i_16255 = (1 + v_i_16255)) {\n        float v_tmp_16348 = 0.0f; \n        v__16269 = v_tmp_16348; \n        int v_index_16349 = v__16261[(v_l_id_16254 + (32 * v_MWidthC_1 * v_wg_id_16253) + (v_MWidthC_1 * v_i_16255))]; \n        if (v_index_16349 < 0) {\n          v__16271_0 = v__16269; \n        } else {\n          if (v_index_16349 >= v_VLength_3) {\n            v__16271_0 = v__16269; \n          } else {\n            v__16271_0 = v__16263[v_index_16349]; \n          }\n        }\n        v__16273[(v_i_16255 + (32 * v_MWidthC_1 * v_wg_id_16253) + (32 * v_l_id_16254))] = mult(v__16271_0, v__16262[(v_l_id_16254 + (32 * v_MWidthC_1 * v_wg_id_16253) + (v_MWidthC_1 * v_i_16255))]); \n      }\n      /* end map_seq */\n      float v_tmp_16350 = 0.0f; \n      v__16274 = v_tmp_16350; \n      /* reduce_seq */\n      for (int v_i_16256 = 0; v_i_16256 < 32; v_i_16256 = (1 + v_i_16256)) {\n        v__16274 = add(v__16274, v__16273[(v_i_16256 + (32 * v_MWidthC_1 * v_wg_id_16253) + (32 * v_l_id_16254))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_16257 = 0; \n        v__16278[v_l_id_16254] = id(v__16274); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_16258 = get_local_id(0); \n      float v_tmp_16353 = 0.0f; \n      v__9610 = v_tmp_16353; \n      /* reduce_seq */\n      for (int v_i_16259 = 0; v_i_16259 < v_MWidthC_1; v_i_16259 = (1 + v_i_16259)) {\n        v__9610 = add(v__9610, v__16278[(v_i_16259 + (v_MWidthC_1 * v_l_id_16258))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_16260 = 0; \n        v__16283[v_wg_id_16253] = doubleMultiplyAdd(v__9610, v__16265, v__16264[v_wg_id_16253], v__16266); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__16261",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__16262",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__16263",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__16264",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__16265",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__16266",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__16273",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__16283",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__16278",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MWidthC", "MHeight", "VLength" ]
}