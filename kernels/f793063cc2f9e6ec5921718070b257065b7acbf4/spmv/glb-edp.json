{
  "name" : "glb-edp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__13792, const global float* restrict v__13793, const global float* restrict v__13794, const global float* restrict v__13795, float v__13796, float v__13797, global float* v__13812, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__13799; \n  float v__13802; \n  /* Private Memory */\n  float v__13804; \n  float v__13806; \n  int v__13810; \n  for (int v_gl_id_13789 = get_global_id(0); v_gl_id_13789 < v_MHeight_2; v_gl_id_13789 = (v_gl_id_13789 + get_global_size(0))) {\n    float v_tmp_13845 = 0.0f; \n    v__13799 = v_tmp_13845; \n    /* reduce_while_seq */\n    for (int v_i_13790 = 0; v_i_13790 < v_MWidthC_1; v_i_13790 = (1 + v_i_13790)) {\n      v__13810 = check(v__13799, v__13792[(v_i_13790 + (v_MWidthC_1 * v_gl_id_13789))]); \n      if (v__13810) {\n      } else {\n        break;\n      }\n      float v_tmp_13846 = 0.0f; \n      v__13802 = v_tmp_13846; \n      int v_index_13847 = v__13792[(v_i_13790 + (v_MWidthC_1 * v_gl_id_13789))]; \n      if (v_index_13847 < 0) {\n        v__13804 = v__13802; \n      } else {\n        if (v_index_13847 >= v_VLength_3) {\n          v__13804 = v__13802; \n        } else {\n          v__13804 = v__13794[v_index_13847]; \n        }\n      }\n      v__13806 = mult(v__13804, v__13793[(v_i_13790 + (v_MWidthC_1 * v_gl_id_13789))]); \n      v__13799 = add(v__13806, v__13799); \n    }\n    /* end reduce_while_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_13791 = 0; \n      v__13812[v_gl_id_13789] = doubleMultiplyAdd(v__13799, v__13796, v__13795[v_gl_id_13789], v__13797); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__13792",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__13793",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__13794",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__13795",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__13796",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__13797",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__13812",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}