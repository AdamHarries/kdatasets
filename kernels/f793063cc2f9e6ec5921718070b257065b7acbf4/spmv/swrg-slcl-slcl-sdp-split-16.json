{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__18966, const global float* restrict v__18967, const global float* restrict v__18968, const global float* restrict v__18969, float v__18970, float v__18971, global float* v__18988, global float* v__18978, local float* v__18983, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__18974; \n  float v__18979; \n  float v__14691; \n  /* Private Memory */\n  float v__18976_0;\n  \n  for (int v_wg_id_18958 = get_group_id(0); v_wg_id_18958 < v_MHeight_2; v_wg_id_18958 = (v_wg_id_18958 + get_num_groups(0))) {\n    for (int v_l_id_18959 = get_local_id(0); v_l_id_18959 < v_MWidthC_1; v_l_id_18959 = (v_l_id_18959 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_18960 = 0; v_i_18960 < 16; v_i_18960 = (1 + v_i_18960)) {\n        float v_tmp_19053 = 0.0f; \n        v__18974 = v_tmp_19053; \n        int v_index_19054 = v__18966[(v_l_id_18959 + (16 * v_MWidthC_1 * v_wg_id_18958) + (v_MWidthC_1 * v_i_18960))]; \n        if (v_index_19054 < 0) {\n          v__18976_0 = v__18974; \n        } else {\n          if (v_index_19054 >= v_VLength_3) {\n            v__18976_0 = v__18974; \n          } else {\n            v__18976_0 = v__18968[v_index_19054]; \n          }\n        }\n        v__18978[(15 + (16 * v_MWidthC_1 * v_wg_id_18958) + (-1 * v_i_18960) + (16 * v_l_id_18959))] = mult(v__18976_0, v__18967[(v_l_id_18959 + (16 * v_MWidthC_1 * v_wg_id_18958) + (v_MWidthC_1 * v_i_18960))]); \n      }\n      /* end map_seq */\n      float v_tmp_19055 = 0.0f; \n      v__18979 = v_tmp_19055; \n      /* reduce_seq */\n      for (int v_i_18961 = 0; v_i_18961 < 16; v_i_18961 = (1 + v_i_18961)) {\n        v__18979 = add(v__18979, v__18978[(v_i_18961 + (16 * v_MWidthC_1 * v_wg_id_18958) + (16 * v_l_id_18959))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_18962 = 0; \n        v__18983[v_l_id_18959] = id(v__18979); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_18963 = get_local_id(0); \n      float v_tmp_19058 = 0.0f; \n      v__14691 = v_tmp_19058; \n      /* reduce_seq */\n      for (int v_i_18964 = 0; v_i_18964 < v_MWidthC_1; v_i_18964 = (1 + v_i_18964)) {\n        v__14691 = add(v__14691, v__18983[(v_i_18964 + (v_MWidthC_1 * v_l_id_18963))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_18965 = 0; \n        v__18988[v_wg_id_18958] = doubleMultiplyAdd(v__14691, v__18970, v__18969[v_wg_id_18958], v__18971); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__18966",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__18967",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__18968",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__18969",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__18970",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__18971",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__18978",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__18988",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__18983",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}