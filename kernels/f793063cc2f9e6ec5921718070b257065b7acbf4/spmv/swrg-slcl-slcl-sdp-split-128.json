{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__31842, const global float* restrict v__31843, const global float* restrict v__31844, const global float* restrict v__31845, float v__31846, float v__31847, global float* v__31864, global float* v__31854, local float* v__31859, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__31850; \n  float v__31855; \n  float v__14691; \n  /* Private Memory */\n  float v__31852_0;\n  \n  for (int v_wg_id_31834 = get_group_id(0); v_wg_id_31834 < v_MHeight_2; v_wg_id_31834 = (v_wg_id_31834 + get_num_groups(0))) {\n    for (int v_l_id_31835 = get_local_id(0); v_l_id_31835 < v_MWidthC_1; v_l_id_31835 = (v_l_id_31835 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_31836 = 0; v_i_31836 < 128; v_i_31836 = (1 + v_i_31836)) {\n        float v_tmp_31929 = 0.0f; \n        v__31850 = v_tmp_31929; \n        int v_index_31930 = v__31842[(v_l_id_31835 + (128 * v_MWidthC_1 * v_wg_id_31834) + (v_MWidthC_1 * v_i_31836))]; \n        if (v_index_31930 < 0) {\n          v__31852_0 = v__31850; \n        } else {\n          if (v_index_31930 >= v_VLength_3) {\n            v__31852_0 = v__31850; \n          } else {\n            v__31852_0 = v__31844[v_index_31930]; \n          }\n        }\n        v__31854[(127 + (128 * v_MWidthC_1 * v_wg_id_31834) + (-1 * v_i_31836) + (128 * v_l_id_31835))] = mult(v__31852_0, v__31843[(v_l_id_31835 + (128 * v_MWidthC_1 * v_wg_id_31834) + (v_MWidthC_1 * v_i_31836))]); \n      }\n      /* end map_seq */\n      float v_tmp_31931 = 0.0f; \n      v__31855 = v_tmp_31931; \n      /* reduce_seq */\n      for (int v_i_31837 = 0; v_i_31837 < 128; v_i_31837 = (1 + v_i_31837)) {\n        v__31855 = add(v__31855, v__31854[(v_i_31837 + (128 * v_MWidthC_1 * v_wg_id_31834) + (128 * v_l_id_31835))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_31838 = 0; \n        v__31859[v_l_id_31835] = id(v__31855); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_31839 = get_local_id(0); \n      float v_tmp_31934 = 0.0f; \n      v__14691 = v_tmp_31934; \n      /* reduce_seq */\n      for (int v_i_31840 = 0; v_i_31840 < v_MWidthC_1; v_i_31840 = (1 + v_i_31840)) {\n        v__14691 = add(v__14691, v__31859[(v_i_31840 + (v_MWidthC_1 * v_l_id_31839))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_31841 = 0; \n        v__31864[v_wg_id_31834] = doubleMultiplyAdd(v__14691, v__31846, v__31845[v_wg_id_31834], v__31847); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__31842",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__31843",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__31844",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__31845",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__31846",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__31847",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__31854",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__31864",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__31859",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}