{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__36134, const global float* restrict v__36135, const global float* restrict v__36136, const global float* restrict v__36137, float v__36138, float v__36139, global float* v__36156, global float* v__36146, local float* v__36151, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__36142; \n  float v__36147; \n  float v__14691; \n  /* Private Memory */\n  float v__36144_0;\n  \n  for (int v_wg_id_36126 = get_group_id(0); v_wg_id_36126 < v_MHeight_2; v_wg_id_36126 = (v_wg_id_36126 + get_num_groups(0))) {\n    for (int v_l_id_36127 = get_local_id(0); v_l_id_36127 < v_MWidthC_1; v_l_id_36127 = (v_l_id_36127 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_36128 = 0; v_i_36128 < 256; v_i_36128 = (1 + v_i_36128)) {\n        float v_tmp_36221 = 0.0f; \n        v__36142 = v_tmp_36221; \n        int v_index_36222 = v__36134[(v_l_id_36127 + (256 * v_MWidthC_1 * v_wg_id_36126) + (v_MWidthC_1 * v_i_36128))]; \n        if (v_index_36222 < 0) {\n          v__36144_0 = v__36142; \n        } else {\n          if (v_index_36222 >= v_VLength_3) {\n            v__36144_0 = v__36142; \n          } else {\n            v__36144_0 = v__36136[v_index_36222]; \n          }\n        }\n        v__36146[(255 + (256 * v_MWidthC_1 * v_wg_id_36126) + (-1 * v_i_36128) + (256 * v_l_id_36127))] = mult(v__36144_0, v__36135[(v_l_id_36127 + (256 * v_MWidthC_1 * v_wg_id_36126) + (v_MWidthC_1 * v_i_36128))]); \n      }\n      /* end map_seq */\n      float v_tmp_36223 = 0.0f; \n      v__36147 = v_tmp_36223; \n      /* reduce_seq */\n      for (int v_i_36129 = 0; v_i_36129 < 256; v_i_36129 = (1 + v_i_36129)) {\n        v__36147 = add(v__36147, v__36146[(v_i_36129 + (256 * v_MWidthC_1 * v_wg_id_36126) + (256 * v_l_id_36127))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36130 = 0; \n        v__36151[v_l_id_36127] = id(v__36147); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_36131 = get_local_id(0); \n      float v_tmp_36226 = 0.0f; \n      v__14691 = v_tmp_36226; \n      /* reduce_seq */\n      for (int v_i_36132 = 0; v_i_36132 < v_MWidthC_1; v_i_36132 = (1 + v_i_36132)) {\n        v__14691 = add(v__14691, v__36151[(v_i_36132 + (v_MWidthC_1 * v_l_id_36131))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_36133 = 0; \n        v__36156[v_wg_id_36126] = doubleMultiplyAdd(v__14691, v__36138, v__36137[v_wg_id_36126], v__36139); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__36134",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36135",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__36136",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__36137",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__36138",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__36139",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__36146",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__36156",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__36151",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}