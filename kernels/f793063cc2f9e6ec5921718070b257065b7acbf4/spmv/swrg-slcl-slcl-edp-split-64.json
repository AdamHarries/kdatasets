{
  "name" : "swrg-slcl-slcl-edp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat id(float x){\n  { return x; }\n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__27762, const global float* restrict v__27763, const global float* restrict v__27764, const global float* restrict v__27765, float v__27766, float v__27767, global float* v__27786, local float* v__27781, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__27770; \n  float v__27772; \n  float v__14691; \n  /* Private Memory */\n  float v__27774_0;\n  \n  float v__27776_0;\n  \n  int v__27780_0;\n  \n  for (int v_wg_id_27755 = get_group_id(0); v_wg_id_27755 < v_MHeight_2; v_wg_id_27755 = (v_wg_id_27755 + get_num_groups(0))) {\n    for (int v_l_id_27756 = get_local_id(0); v_l_id_27756 < v_MWidthC_1; v_l_id_27756 = (v_l_id_27756 + get_local_size(0))) {\n      float v_tmp_27854 = 0.0f; \n      v__27770 = v_tmp_27854; \n      /* reduce_while_seq */\n      for (int v_i_27757 = 0; v_i_27757 < 64; v_i_27757 = (1 + v_i_27757)) {\n        v__27780_0 = check(v__27770, v__27762[(v_l_id_27756 + (64 * v_MWidthC_1 * v_wg_id_27755) + (v_MWidthC_1 * v_i_27757))]); \n        if (v__27780_0) {\n        } else {\n          break;\n        }\n        float v_tmp_27855 = 0.0f; \n        v__27772 = v_tmp_27855; \n        int v_index_27856 = v__27762[(v_l_id_27756 + (64 * v_MWidthC_1 * v_wg_id_27755) + (v_MWidthC_1 * v_i_27757))]; \n        if (v_index_27856 < 0) {\n          v__27774_0 = v__27772; \n        } else {\n          if (v_index_27856 >= v_VLength_3) {\n            v__27774_0 = v__27772; \n          } else {\n            v__27774_0 = v__27764[v_index_27856]; \n          }\n        }\n        v__27776_0 = mult(v__27774_0, v__27763[(v_l_id_27756 + (64 * v_MWidthC_1 * v_wg_id_27755) + (v_MWidthC_1 * v_i_27757))]); \n        v__27770 = add(v__27776_0, v__27770); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_27758 = 0; \n        v__27781[v_l_id_27756] = id(v__27770); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_27759 = get_local_id(0); \n      float v_tmp_27859 = 0.0f; \n      v__14691 = v_tmp_27859; \n      /* reduce_seq */\n      for (int v_i_27760 = 0; v_i_27760 < v_MWidthC_1; v_i_27760 = (1 + v_i_27760)) {\n        v__14691 = add(v__14691, v__27781[(v_i_27760 + (v_MWidthC_1 * v_l_id_27759))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_27761 = 0; \n        v__27786[v_wg_id_27755] = doubleMultiplyAdd(v__14691, v__27766, v__27765[v_wg_id_27755], v__27767); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__27762",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__27763",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__27764",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__27765",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__27766",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__27767",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__27786",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__27781",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}