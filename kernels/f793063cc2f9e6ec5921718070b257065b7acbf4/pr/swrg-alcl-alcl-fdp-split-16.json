{
  "name" : "swrg-alcl-alcl-fdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__111727, const global float* restrict v__111728, const global float* restrict v__111729, const global float* restrict v__111730, float v__111731, float v__111732, global float* v__111749, local float* v__111744, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__111735; \n  float v__111737; \n  float v__105970; \n  /* Private Memory */\n  float v__111739_0;\n  \n  float v__111741_0;\n  \n  for (int v_wg_id_111720 = get_group_id(0); v_wg_id_111720 < v_MHeight_2; v_wg_id_111720 = (v_wg_id_111720 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_8791; \n      v_work_idx_8791 = 0; \n      int v_l_id_111721 = atomic_inc(&(v_work_idx_8791)); \n      while((v_l_id_111721 < v_MWidthC_1)){\n        float v_tmp_111802 = 0.0f; \n        v__111735 = v_tmp_111802; \n        /* reduce_seq */\n        for (int v_i_111722 = 0; v_i_111722 < 16; v_i_111722 = (1 + v_i_111722)) {\n          float v_tmp_111803 = 0.0f; \n          v__111737 = v_tmp_111803; \n          int v_index_111804 = v__111727[(v_l_id_111721 + (16 * v_MWidthC_1 * v_wg_id_111720) + (v_MWidthC_1 * v_i_111722))]; \n          if (v_index_111804 < 0) {\n            v__111739_0 = v__111737; \n          } else {\n            if (v_index_111804 >= v_VLength_3) {\n              v__111739_0 = v__111737; \n            } else {\n              v__111739_0 = v__111729[v_index_111804]; \n            }\n          }\n          v__111741_0 = mult(v__111739_0, v__111728[(v_l_id_111721 + (16 * v_MWidthC_1 * v_wg_id_111720) + (v_MWidthC_1 * v_i_111722))]); \n          v__111735 = add(v__111741_0, v__111735); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_111723 = 0; \n          v__111744[v_l_id_111721] = id(v__111735); \n        }\n        /* end map_seq */\n        v_l_id_111721 = atomic_inc(&(v_work_idx_8791)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_8786; \n      v_work_idx_8786 = 0; \n      int v_l_id_111724 = atomic_inc(&(v_work_idx_8786)); \n      while((v_l_id_111724 < 1)){\n        float v_tmp_111807 = 0.0f; \n        v__105970 = v_tmp_111807; \n        /* reduce_seq */\n        for (int v_i_111725 = 0; v_i_111725 < v_MWidthC_1; v_i_111725 = (1 + v_i_111725)) {\n          v__105970 = add(v__105970, v__111744[(v_i_111725 + (v_MWidthC_1 * v_l_id_111724))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_111726 = 0; \n          v__111749[v_wg_id_111720] = doubleMultiplyAdd(v__105970, v__111731, v__111730[v_wg_id_111720], v__111732); \n        }\n        /* end map_seq */\n        v_l_id_111724 = atomic_inc(&(v_work_idx_8786)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__111727",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__111728",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__111729",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__111730",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__111731",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__111732",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__111749",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__111744",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}