{
  "name" : "swrg-slcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__114537, const global float* restrict v__114538, const global float* restrict v__114539, const global float* restrict v__114540, float v__114541, float v__114542, global float* v__114559, global float* v__114549, local float* v__114554, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__114545; \n  float v__114550; \n  float v__105970; \n  /* Private Memory */\n  float v__114547_0;\n  \n  for (int v_wg_id_114529 = get_group_id(0); v_wg_id_114529 < v_MHeight_2; v_wg_id_114529 = (v_wg_id_114529 + get_num_groups(0))) {\n    for (int v_l_id_114530 = get_local_id(0); v_l_id_114530 < v_MWidthC_1; v_l_id_114530 = (v_l_id_114530 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_114531 = 0; v_i_114531 < 32; v_i_114531 = (1 + v_i_114531)) {\n        float v_tmp_114624 = 0.0f; \n        v__114545 = v_tmp_114624; \n        int v_index_114625 = v__114537[(v_l_id_114530 + (32 * v_MWidthC_1 * v_wg_id_114529) + (v_MWidthC_1 * v_i_114531))]; \n        if (v_index_114625 < 0) {\n          v__114547_0 = v__114545; \n        } else {\n          if (v_index_114625 >= v_VLength_3) {\n            v__114547_0 = v__114545; \n          } else {\n            v__114547_0 = v__114539[v_index_114625]; \n          }\n        }\n        v__114549[(31 + (32 * v_MWidthC_1 * v_wg_id_114529) + (-1 * v_i_114531) + (32 * v_l_id_114530))] = mult(v__114547_0, v__114538[(v_l_id_114530 + (32 * v_MWidthC_1 * v_wg_id_114529) + (v_MWidthC_1 * v_i_114531))]); \n      }\n      /* end map_seq */\n      float v_tmp_114626 = 0.0f; \n      v__114550 = v_tmp_114626; \n      /* reduce_seq */\n      for (int v_i_114532 = 0; v_i_114532 < 32; v_i_114532 = (1 + v_i_114532)) {\n        v__114550 = add(v__114550, v__114549[(v_i_114532 + (32 * v_MWidthC_1 * v_wg_id_114529) + (32 * v_l_id_114530))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_114533 = 0; \n        v__114554[v_l_id_114530] = id(v__114550); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_114534 = get_local_id(0); \n      float v_tmp_114629 = 0.0f; \n      v__105970 = v_tmp_114629; \n      /* reduce_seq */\n      for (int v_i_114535 = 0; v_i_114535 < v_MWidthC_1; v_i_114535 = (1 + v_i_114535)) {\n        v__105970 = add(v__105970, v__114554[(v_i_114535 + (v_MWidthC_1 * v_l_id_114534))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_114536 = 0; \n        v__114559[v_wg_id_114529] = doubleMultiplyAdd(v__105970, v__114541, v__114540[v_wg_id_114529], v__114542); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__114537",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__114538",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__114539",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__114540",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__114541",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__114542",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__114549",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__114559",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__114554",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}