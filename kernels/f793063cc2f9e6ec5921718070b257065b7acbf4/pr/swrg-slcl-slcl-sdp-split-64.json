{
  "name" : "swrg-slcl-slcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__118829, const global float* restrict v__118830, const global float* restrict v__118831, const global float* restrict v__118832, float v__118833, float v__118834, global float* v__118851, global float* v__118841, local float* v__118846, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__118837; \n  float v__118842; \n  float v__105970; \n  /* Private Memory */\n  float v__118839_0;\n  \n  for (int v_wg_id_118821 = get_group_id(0); v_wg_id_118821 < v_MHeight_2; v_wg_id_118821 = (v_wg_id_118821 + get_num_groups(0))) {\n    for (int v_l_id_118822 = get_local_id(0); v_l_id_118822 < v_MWidthC_1; v_l_id_118822 = (v_l_id_118822 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_118823 = 0; v_i_118823 < 64; v_i_118823 = (1 + v_i_118823)) {\n        float v_tmp_118916 = 0.0f; \n        v__118837 = v_tmp_118916; \n        int v_index_118917 = v__118829[(v_l_id_118822 + (64 * v_MWidthC_1 * v_wg_id_118821) + (v_MWidthC_1 * v_i_118823))]; \n        if (v_index_118917 < 0) {\n          v__118839_0 = v__118837; \n        } else {\n          if (v_index_118917 >= v_VLength_3) {\n            v__118839_0 = v__118837; \n          } else {\n            v__118839_0 = v__118831[v_index_118917]; \n          }\n        }\n        v__118841[(63 + (64 * v_MWidthC_1 * v_wg_id_118821) + (-1 * v_i_118823) + (64 * v_l_id_118822))] = mult(v__118839_0, v__118830[(v_l_id_118822 + (64 * v_MWidthC_1 * v_wg_id_118821) + (v_MWidthC_1 * v_i_118823))]); \n      }\n      /* end map_seq */\n      float v_tmp_118918 = 0.0f; \n      v__118842 = v_tmp_118918; \n      /* reduce_seq */\n      for (int v_i_118824 = 0; v_i_118824 < 64; v_i_118824 = (1 + v_i_118824)) {\n        v__118842 = add(v__118842, v__118841[(v_i_118824 + (64 * v_MWidthC_1 * v_wg_id_118821) + (64 * v_l_id_118822))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_118825 = 0; \n        v__118846[v_l_id_118822] = id(v__118842); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_118826 = get_local_id(0); \n      float v_tmp_118921 = 0.0f; \n      v__105970 = v_tmp_118921; \n      /* reduce_seq */\n      for (int v_i_118827 = 0; v_i_118827 < v_MWidthC_1; v_i_118827 = (1 + v_i_118827)) {\n        v__105970 = add(v__105970, v__118846[(v_i_118827 + (v_MWidthC_1 * v_l_id_118826))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_118828 = 0; \n        v__118851[v_wg_id_118821] = doubleMultiplyAdd(v__105970, v__118833, v__118832[v_wg_id_118821], v__118834); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__118829",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__118830",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__118831",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__118832",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__118833",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__118834",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__118841",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__118851",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__118846",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}