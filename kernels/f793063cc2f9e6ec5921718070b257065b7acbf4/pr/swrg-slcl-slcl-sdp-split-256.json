{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__127413, const global float* restrict v__127414, const global float* restrict v__127415, const global float* restrict v__127416, float v__127417, float v__127418, global float* v__127435, global float* v__127425, local float* v__127430, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__127421; \n  float v__127426; \n  float v__105970; \n  /* Private Memory */\n  float v__127423_0;\n  \n  for (int v_wg_id_127405 = get_group_id(0); v_wg_id_127405 < v_MHeight_2; v_wg_id_127405 = (v_wg_id_127405 + get_num_groups(0))) {\n    for (int v_l_id_127406 = get_local_id(0); v_l_id_127406 < v_MWidthC_1; v_l_id_127406 = (v_l_id_127406 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_127407 = 0; v_i_127407 < 256; v_i_127407 = (1 + v_i_127407)) {\n        float v_tmp_127500 = 0.0f; \n        v__127421 = v_tmp_127500; \n        int v_index_127501 = v__127413[(v_l_id_127406 + (256 * v_MWidthC_1 * v_wg_id_127405) + (v_MWidthC_1 * v_i_127407))]; \n        if (v_index_127501 < 0) {\n          v__127423_0 = v__127421; \n        } else {\n          if (v_index_127501 >= v_VLength_3) {\n            v__127423_0 = v__127421; \n          } else {\n            v__127423_0 = v__127415[v_index_127501]; \n          }\n        }\n        v__127425[(255 + (256 * v_MWidthC_1 * v_wg_id_127405) + (-1 * v_i_127407) + (256 * v_l_id_127406))] = mult(v__127423_0, v__127414[(v_l_id_127406 + (256 * v_MWidthC_1 * v_wg_id_127405) + (v_MWidthC_1 * v_i_127407))]); \n      }\n      /* end map_seq */\n      float v_tmp_127502 = 0.0f; \n      v__127426 = v_tmp_127502; \n      /* reduce_seq */\n      for (int v_i_127408 = 0; v_i_127408 < 256; v_i_127408 = (1 + v_i_127408)) {\n        v__127426 = add(v__127426, v__127425[(v_i_127408 + (256 * v_MWidthC_1 * v_wg_id_127405) + (256 * v_l_id_127406))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_127409 = 0; \n        v__127430[v_l_id_127406] = id(v__127426); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_127410 = get_local_id(0); \n      float v_tmp_127505 = 0.0f; \n      v__105970 = v_tmp_127505; \n      /* reduce_seq */\n      for (int v_i_127411 = 0; v_i_127411 < v_MWidthC_1; v_i_127411 = (1 + v_i_127411)) {\n        v__105970 = add(v__105970, v__127430[(v_i_127411 + (v_MWidthC_1 * v_l_id_127410))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_127412 = 0; \n        v__127435[v_wg_id_127405] = doubleMultiplyAdd(v__105970, v__127417, v__127416[v_wg_id_127405], v__127418); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__127413",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__127414",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__127415",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__127416",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__127417",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__127418",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__127425",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__127435",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__127430",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}