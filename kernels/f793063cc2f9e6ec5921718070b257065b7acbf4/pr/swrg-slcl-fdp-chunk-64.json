{
  "name" : "swrg-slcl-fdp-chunk-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__118425, const global float* restrict v__118426, const global float* restrict v__118427, const global float* restrict v__118428, float v__118429, float v__118430, global float* v__118443, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__118433; \n  float v__118435; \n  /* Private Memory */\n  float v__118437_0;\n  \n  float v__118439_0;\n  \n  for (int v_wg_id_118421 = get_group_id(0); v_wg_id_118421 < ((v_MHeight_2)/(64)); v_wg_id_118421 = (v_wg_id_118421 + get_num_groups(0))) {\n    for (int v_l_id_118422 = get_local_id(0); v_l_id_118422 < 64; v_l_id_118422 = (v_l_id_118422 + get_local_size(0))) {\n      float v_tmp_118485 = 0.0f; \n      v__118433 = v_tmp_118485; \n      /* reduce_seq */\n      for (int v_i_118423 = 0; v_i_118423 < v_MWidthC_1; v_i_118423 = (1 + v_i_118423)) {\n        float v_tmp_118486 = 0.0f; \n        v__118435 = v_tmp_118486; \n        int v_index_118487 = v__118425[(v_i_118423 + (64 * v_MWidthC_1 * v_wg_id_118421) + (v_MWidthC_1 * v_l_id_118422))]; \n        if (v_index_118487 < 0) {\n          v__118437_0 = v__118435; \n        } else {\n          if (v_index_118487 >= v_VLength_3) {\n            v__118437_0 = v__118435; \n          } else {\n            v__118437_0 = v__118427[v_index_118487]; \n          }\n        }\n        v__118439_0 = mult(v__118437_0, v__118426[(v_i_118423 + (64 * v_MWidthC_1 * v_wg_id_118421) + (v_MWidthC_1 * v_l_id_118422))]); \n        v__118433 = add(v__118439_0, v__118433); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_118424 = 0; \n        v__118443[(v_l_id_118422 + (64 * v_wg_id_118421))] = doubleMultiplyAdd(v__118433, v__118429, v__118428[(v_l_id_118422 + (64 * v_wg_id_118421))], v__118430); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "64",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__118425",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__118426",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__118427",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__118428",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__118429",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__118430",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__118443",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}