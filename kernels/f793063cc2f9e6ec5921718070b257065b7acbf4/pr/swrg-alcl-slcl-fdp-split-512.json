{
  "name" : "swrg-alcl-slcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__132891, const global float* restrict v__132892, const global float* restrict v__132893, const global float* restrict v__132894, float v__132895, float v__132896, global float* v__132913, local float* v__132908, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__132899; \n  float v__132901; \n  float v__105970; \n  /* Private Memory */\n  float v__132903_0;\n  \n  float v__132905_0;\n  \n  for (int v_wg_id_132884 = get_group_id(0); v_wg_id_132884 < v_MHeight_2; v_wg_id_132884 = (v_wg_id_132884 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_10681; \n      v_work_idx_10681 = 0; \n      int v_l_id_132885 = atomic_inc(&(v_work_idx_10681)); \n      while((v_l_id_132885 < v_MWidthC_1)){\n        float v_tmp_132970 = 0.0f; \n        v__132899 = v_tmp_132970; \n        /* reduce_seq */\n        for (int v_i_132886 = 0; v_i_132886 < 512; v_i_132886 = (1 + v_i_132886)) {\n          float v_tmp_132971 = 0.0f; \n          v__132901 = v_tmp_132971; \n          int v_index_132972 = v__132891[(v_l_id_132885 + (512 * v_MWidthC_1 * v_wg_id_132884) + (v_MWidthC_1 * v_i_132886))]; \n          if (v_index_132972 < 0) {\n            v__132903_0 = v__132901; \n          } else {\n            if (v_index_132972 >= v_VLength_3) {\n              v__132903_0 = v__132901; \n            } else {\n              v__132903_0 = v__132893[v_index_132972]; \n            }\n          }\n          v__132905_0 = mult(v__132903_0, v__132892[(v_l_id_132885 + (512 * v_MWidthC_1 * v_wg_id_132884) + (v_MWidthC_1 * v_i_132886))]); \n          v__132899 = add(v__132905_0, v__132899); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_132887 = 0; \n          v__132908[v_l_id_132885] = id(v__132899); \n        }\n        /* end map_seq */\n        v_l_id_132885 = atomic_inc(&(v_work_idx_10681)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_132888 = get_local_id(0); \n      float v_tmp_132975 = 0.0f; \n      v__105970 = v_tmp_132975; \n      /* reduce_seq */\n      for (int v_i_132889 = 0; v_i_132889 < v_MWidthC_1; v_i_132889 = (1 + v_i_132889)) {\n        v__105970 = add(v__105970, v__132908[(v_i_132889 + (v_MWidthC_1 * v_l_id_132888))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_132890 = 0; \n        v__132913[v_wg_id_132884] = doubleMultiplyAdd(v__105970, v__132895, v__132894[v_wg_id_132884], v__132896); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__132891",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__132892",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__132893",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__132894",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__132895",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__132896",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__132913",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__132908",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}