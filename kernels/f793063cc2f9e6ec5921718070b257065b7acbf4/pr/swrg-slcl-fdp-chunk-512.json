{
  "name" : "swrg-slcl-fdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__131301, const global float* restrict v__131302, const global float* restrict v__131303, const global float* restrict v__131304, float v__131305, float v__131306, global float* v__131319, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__131309; \n  float v__131311; \n  /* Private Memory */\n  float v__131313_0;\n  \n  float v__131315_0;\n  \n  for (int v_wg_id_131297 = get_group_id(0); v_wg_id_131297 < ((v_MHeight_2)/(512)); v_wg_id_131297 = (v_wg_id_131297 + get_num_groups(0))) {\n    for (int v_l_id_131298 = get_local_id(0); v_l_id_131298 < 512; v_l_id_131298 = (v_l_id_131298 + get_local_size(0))) {\n      float v_tmp_131361 = 0.0f; \n      v__131309 = v_tmp_131361; \n      /* reduce_seq */\n      for (int v_i_131299 = 0; v_i_131299 < v_MWidthC_1; v_i_131299 = (1 + v_i_131299)) {\n        float v_tmp_131362 = 0.0f; \n        v__131311 = v_tmp_131362; \n        int v_index_131363 = v__131301[(v_i_131299 + (512 * v_MWidthC_1 * v_wg_id_131297) + (v_MWidthC_1 * v_l_id_131298))]; \n        if (v_index_131363 < 0) {\n          v__131313_0 = v__131311; \n        } else {\n          if (v_index_131363 >= v_VLength_3) {\n            v__131313_0 = v__131311; \n          } else {\n            v__131313_0 = v__131303[v_index_131363]; \n          }\n        }\n        v__131315_0 = mult(v__131313_0, v__131302[(v_i_131299 + (512 * v_MWidthC_1 * v_wg_id_131297) + (v_MWidthC_1 * v_l_id_131298))]); \n        v__131309 = add(v__131315_0, v__131309); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_131300 = 0; \n        v__131319[(v_l_id_131298 + (512 * v_wg_id_131297))] = doubleMultiplyAdd(v__131309, v__131305, v__131304[(v_l_id_131298 + (512 * v_wg_id_131297))], v__131306); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__131301",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__131302",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__131303",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__131304",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__131305",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__131306",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__131319",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}