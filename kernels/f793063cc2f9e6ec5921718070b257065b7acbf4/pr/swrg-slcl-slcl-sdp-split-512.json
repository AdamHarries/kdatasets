{
  "name" : "swrg-slcl-slcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__131705, const global float* restrict v__131706, const global float* restrict v__131707, const global float* restrict v__131708, float v__131709, float v__131710, global float* v__131727, global float* v__131717, local float* v__131722, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__131713; \n  float v__131718; \n  float v__105970; \n  /* Private Memory */\n  float v__131715_0;\n  \n  for (int v_wg_id_131697 = get_group_id(0); v_wg_id_131697 < v_MHeight_2; v_wg_id_131697 = (v_wg_id_131697 + get_num_groups(0))) {\n    for (int v_l_id_131698 = get_local_id(0); v_l_id_131698 < v_MWidthC_1; v_l_id_131698 = (v_l_id_131698 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_131699 = 0; v_i_131699 < 512; v_i_131699 = (1 + v_i_131699)) {\n        float v_tmp_131792 = 0.0f; \n        v__131713 = v_tmp_131792; \n        int v_index_131793 = v__131705[(v_l_id_131698 + (512 * v_MWidthC_1 * v_wg_id_131697) + (v_MWidthC_1 * v_i_131699))]; \n        if (v_index_131793 < 0) {\n          v__131715_0 = v__131713; \n        } else {\n          if (v_index_131793 >= v_VLength_3) {\n            v__131715_0 = v__131713; \n          } else {\n            v__131715_0 = v__131707[v_index_131793]; \n          }\n        }\n        v__131717[(511 + (512 * v_MWidthC_1 * v_wg_id_131697) + (-1 * v_i_131699) + (512 * v_l_id_131698))] = mult(v__131715_0, v__131706[(v_l_id_131698 + (512 * v_MWidthC_1 * v_wg_id_131697) + (v_MWidthC_1 * v_i_131699))]); \n      }\n      /* end map_seq */\n      float v_tmp_131794 = 0.0f; \n      v__131718 = v_tmp_131794; \n      /* reduce_seq */\n      for (int v_i_131700 = 0; v_i_131700 < 512; v_i_131700 = (1 + v_i_131700)) {\n        v__131718 = add(v__131718, v__131717[(v_i_131700 + (512 * v_MWidthC_1 * v_wg_id_131697) + (512 * v_l_id_131698))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_131701 = 0; \n        v__131722[v_l_id_131698] = id(v__131718); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_131702 = get_local_id(0); \n      float v_tmp_131797 = 0.0f; \n      v__105970 = v_tmp_131797; \n      /* reduce_seq */\n      for (int v_i_131703 = 0; v_i_131703 < v_MWidthC_1; v_i_131703 = (1 + v_i_131703)) {\n        v__105970 = add(v__105970, v__131722[(v_i_131703 + (v_MWidthC_1 * v_l_id_131702))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_131704 = 0; \n        v__131727[v_wg_id_131697] = doubleMultiplyAdd(v__105970, v__131709, v__131708[v_wg_id_131697], v__131710); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__131705",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__131706",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__131707",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__131708",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__131709",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__131710",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__131717",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__131727",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__131722",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}