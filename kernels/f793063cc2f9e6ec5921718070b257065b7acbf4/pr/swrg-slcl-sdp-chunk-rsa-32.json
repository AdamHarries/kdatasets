{
  "name" : "swrg-slcl-sdp-chunk-rsa-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nfloat id(float x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__114288, const global float* restrict v__114289, const global float* restrict v__114290, const global float* restrict v__114291, float v__114292, float v__114293, global float* v__114307, global float* v__114306, int v_MHeight_2, int v_MWidthC_1){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__114295; \n  float v__114298; \n  /* Private Memory */\n  float v__114300_0;\n  \n  float v__114302_0;\n  \n  for (int v_wg_id_114283 = get_group_id(0); v_wg_id_114283 < ((v_MHeight_2)/(32)); v_wg_id_114283 = (v_wg_id_114283 + get_num_groups(0))) {\n    for (int v_l_id_114284 = get_local_id(0); v_l_id_114284 < 32; v_l_id_114284 = (v_l_id_114284 + get_local_size(0))) {\n      float v_tmp_114344 = 0.0f; \n      v__114295 = v_tmp_114344; \n      /* reduce_seq */\n      int v_stop_114345 = min(v__114288[(1 + (v__114288[(v_l_id_114284 + (32 * v_wg_id_114283))] / 4))], ((global int*)(v__114289 + (((global int*)(v__114289))[(v_l_id_114284 + (32 * v_wg_id_114283))] / 4)))[1]); \n      for (int v_i_114285 = 0; v_i_114285 < v_stop_114345; v_i_114285 = (1 + v_i_114285)) {\n        float v_tmp_114353 = 0.0f; \n        v__114298 = v_tmp_114353; \n        int v_index_114355 = v__114288[(2 + v_i_114285 + (v__114288[(v_l_id_114284 + (32 * v_wg_id_114283))] / 4))]; \n        if (v_index_114355 < 0) {\n          v__114300_0 = v__114298; \n        } else {\n          if (v_index_114355 >= v_MWidthC_1) {\n            v__114300_0 = v__114298; \n          } else {\n            v__114300_0 = v__114290[v_index_114355]; \n          }\n        }\n        v__114302_0 = mult(v__114289[(2 + v_i_114285 + (((global int*)(v__114289))[(v_l_id_114284 + (32 * v_wg_id_114283))] / 4))], v__114300_0); \n        v__114295 = add(v__114295, v__114302_0); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_114286 = 0; \n        v__114306[(v_l_id_114284 + (32 * v_wg_id_114283))] = doubleMultiplyAdd(v__114295, v__114292, v__114291[(v_l_id_114284 + (32 * v_wg_id_114283))], v__114293); \n      }\n      /* end map_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_114287 = 0; \n        v__114307[(v_l_id_114284 + (32 * v_wg_id_114283))] = id(v__114306[(v_l_id_114284 + (32 * v_wg_id_114283))]); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "chunkSize" : "32",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "arrayType" : "ragged",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__114288",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__114289",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__114290",
    "addressSpace" : "global",
    "size" : "(4*v_MWidthC_1)"
  }, {
    "variable" : "v__114291",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__114292",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__114293",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__114306",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  } ],
  "outputArg" : {
    "variable" : "v__114307",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC" ],
  "outputSize" : "(4*v_MHeight_2)"
}