{
  "name" : "swrg-slcl-fdp-chunk-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__127009, const global float* restrict v__127010, const global float* restrict v__127011, const global float* restrict v__127012, float v__127013, float v__127014, global float* v__127027, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__127017; \n  float v__127019; \n  /* Private Memory */\n  float v__127021_0;\n  \n  float v__127023_0;\n  \n  for (int v_wg_id_127005 = get_group_id(0); v_wg_id_127005 < ((v_MHeight_2)/(256)); v_wg_id_127005 = (v_wg_id_127005 + get_num_groups(0))) {\n    for (int v_l_id_127006 = get_local_id(0); v_l_id_127006 < 256; v_l_id_127006 = (v_l_id_127006 + get_local_size(0))) {\n      float v_tmp_127069 = 0.0f; \n      v__127017 = v_tmp_127069; \n      /* reduce_seq */\n      for (int v_i_127007 = 0; v_i_127007 < v_MWidthC_1; v_i_127007 = (1 + v_i_127007)) {\n        float v_tmp_127070 = 0.0f; \n        v__127019 = v_tmp_127070; \n        int v_index_127071 = v__127009[(v_i_127007 + (256 * v_MWidthC_1 * v_wg_id_127005) + (v_MWidthC_1 * v_l_id_127006))]; \n        if (v_index_127071 < 0) {\n          v__127021_0 = v__127019; \n        } else {\n          if (v_index_127071 >= v_VLength_3) {\n            v__127021_0 = v__127019; \n          } else {\n            v__127021_0 = v__127011[v_index_127071]; \n          }\n        }\n        v__127023_0 = mult(v__127021_0, v__127010[(v_i_127007 + (256 * v_MWidthC_1 * v_wg_id_127005) + (v_MWidthC_1 * v_l_id_127006))]); \n        v__127017 = add(v__127023_0, v__127017); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_127008 = 0; \n        v__127027[(v_l_id_127006 + (256 * v_wg_id_127005))] = doubleMultiplyAdd(v__127017, v__127013, v__127012[(v_l_id_127006 + (256 * v_wg_id_127005))], v__127014); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__127009",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__127010",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__127011",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__127012",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__127013",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__127014",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__127027",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}