{
  "name" : "glb-edp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__105071, const global float* restrict v__105072, const global float* restrict v__105073, const global float* restrict v__105074, float v__105075, float v__105076, global float* v__105091, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__105078; \n  float v__105081; \n  /* Private Memory */\n  float v__105083; \n  float v__105085; \n  int v__105089; \n  for (int v_gl_id_105068 = get_global_id(0); v_gl_id_105068 < v_MHeight_2; v_gl_id_105068 = (v_gl_id_105068 + get_global_size(0))) {\n    float v_tmp_105124 = 0.0f; \n    v__105078 = v_tmp_105124; \n    /* reduce_while_seq */\n    for (int v_i_105069 = 0; v_i_105069 < v_MWidthC_1; v_i_105069 = (1 + v_i_105069)) {\n      v__105089 = check(v__105078, v__105071[(v_i_105069 + (v_MWidthC_1 * v_gl_id_105068))]); \n      if (v__105089) {\n      } else {\n        break;\n      }\n      float v_tmp_105125 = 0.0f; \n      v__105081 = v_tmp_105125; \n      int v_index_105126 = v__105071[(v_i_105069 + (v_MWidthC_1 * v_gl_id_105068))]; \n      if (v_index_105126 < 0) {\n        v__105083 = v__105081; \n      } else {\n        if (v_index_105126 >= v_VLength_3) {\n          v__105083 = v__105081; \n        } else {\n          v__105083 = v__105073[v_index_105126]; \n        }\n      }\n      v__105085 = mult(v__105083, v__105072[(v_i_105069 + (v_MWidthC_1 * v_gl_id_105068))]); \n      v__105078 = add(v__105085, v__105078); \n    }\n    /* end reduce_while_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_105070 = 0; \n      v__105091[v_gl_id_105068] = doubleMultiplyAdd(v__105078, v__105075, v__105074[v_gl_id_105068], v__105076); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__105071",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__105072",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__105073",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__105074",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__105075",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__105076",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__105091",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}