{
  "name" : "swrg-slcl-slcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__114749, const global float* restrict v__114750, const global float* restrict v__114751, const global float* restrict v__114752, float v__114753, float v__114754, global float* v__114773, local float* v__114768, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__114757; \n  float v__114759; \n  float v__105970; \n  /* Private Memory */\n  float v__114761_0;\n  \n  float v__114763_0;\n  \n  int v__114767_0;\n  \n  for (int v_wg_id_114742 = get_group_id(0); v_wg_id_114742 < v_MHeight_2; v_wg_id_114742 = (v_wg_id_114742 + get_num_groups(0))) {\n    for (int v_l_id_114743 = get_local_id(0); v_l_id_114743 < v_MWidthC_1; v_l_id_114743 = (v_l_id_114743 + get_local_size(0))) {\n      float v_tmp_114841 = 0.0f; \n      v__114757 = v_tmp_114841; \n      /* reduce_while_seq */\n      for (int v_i_114744 = 0; v_i_114744 < 32; v_i_114744 = (1 + v_i_114744)) {\n        v__114767_0 = check(v__114757, v__114749[(v_l_id_114743 + (32 * v_MWidthC_1 * v_wg_id_114742) + (v_MWidthC_1 * v_i_114744))]); \n        if (v__114767_0) {\n        } else {\n          break;\n        }\n        float v_tmp_114842 = 0.0f; \n        v__114759 = v_tmp_114842; \n        int v_index_114843 = v__114749[(v_l_id_114743 + (32 * v_MWidthC_1 * v_wg_id_114742) + (v_MWidthC_1 * v_i_114744))]; \n        if (v_index_114843 < 0) {\n          v__114761_0 = v__114759; \n        } else {\n          if (v_index_114843 >= v_VLength_3) {\n            v__114761_0 = v__114759; \n          } else {\n            v__114761_0 = v__114751[v_index_114843]; \n          }\n        }\n        v__114763_0 = mult(v__114761_0, v__114750[(v_l_id_114743 + (32 * v_MWidthC_1 * v_wg_id_114742) + (v_MWidthC_1 * v_i_114744))]); \n        v__114757 = add(v__114763_0, v__114757); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_114745 = 0; \n        v__114768[v_l_id_114743] = id(v__114757); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_114746 = get_local_id(0); \n      float v_tmp_114846 = 0.0f; \n      v__105970 = v_tmp_114846; \n      /* reduce_seq */\n      for (int v_i_114747 = 0; v_i_114747 < v_MWidthC_1; v_i_114747 = (1 + v_i_114747)) {\n        v__105970 = add(v__105970, v__114768[(v_i_114747 + (v_MWidthC_1 * v_l_id_114746))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_114748 = 0; \n        v__114773[v_wg_id_114742] = doubleMultiplyAdd(v__105970, v__114753, v__114752[v_wg_id_114742], v__114754); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__114749",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__114750",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__114751",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__114752",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__114753",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__114754",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__114773",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__114768",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}