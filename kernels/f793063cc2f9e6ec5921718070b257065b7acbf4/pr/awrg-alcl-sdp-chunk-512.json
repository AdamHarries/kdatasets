{
  "name" : "awrg-alcl-sdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  { return l * r; }\n}\nfloat add(float x, float y){\n  { return x+y; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  {return (dpRes*alpha)+(rowIdxPair2*beta);}\n}\nkernel void KERNEL(const global int* restrict v__134484, const global float* restrict v__134485, const global float* restrict v__134486, const global float* restrict v__134487, float v__134488, float v__134489, global float* v__134503, global float* v__134497, global int* v__134491, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__134493; \n  float v__134498; \n  /* Private Memory */\n  float v__134495_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_10826 = v__134491; \n    local int v_w_id_134479; \n    if (get_local_id(0) == 0) {\n      v_w_id_134479 = atomic_inc(v_work_idx_10826); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_134479 < ((v_MHeight_2)/(512)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_10824; \n        v_work_idx_10824 = 0; \n        int v_l_id_134480 = atomic_inc(&(v_work_idx_10824)); \n        while((v_l_id_134480 < 512)){\n          /* map_seq */\n          for (int v_i_134481 = 0; v_i_134481 < v_MWidthC_1; v_i_134481 = (1 + v_i_134481)) {\n            float v_tmp_134542 = 0.0f; \n            v__134493 = v_tmp_134542; \n            int v_index_134543 = v__134484[(v_i_134481 + (512 * v_MWidthC_1 * v_w_id_134479) + (v_MWidthC_1 * v_l_id_134480))]; \n            if (v_index_134543 < 0) {\n              v__134495_0 = v__134493; \n            } else {\n              if (v_index_134543 >= v_VLength_3) {\n                v__134495_0 = v__134493; \n              } else {\n                v__134495_0 = v__134486[v_index_134543]; \n              }\n            }\n            v__134497[(-1 + v_MWidthC_1 + (512 * v_MWidthC_1 * v_w_id_134479) + (-1 * v_i_134481) + (v_MWidthC_1 * v_l_id_134480))] = mult(v__134495_0, v__134485[(v_i_134481 + (512 * v_MWidthC_1 * v_w_id_134479) + (v_MWidthC_1 * v_l_id_134480))]); \n          }\n          /* end map_seq */\n          float v_tmp_134544 = 0.0f; \n          v__134498 = v_tmp_134544; \n          /* reduce_seq */\n          for (int v_i_134482 = 0; v_i_134482 < v_MWidthC_1; v_i_134482 = (1 + v_i_134482)) {\n            v__134498 = add(v__134498, v__134497[(v_i_134482 + (512 * v_MWidthC_1 * v_w_id_134479) + (v_MWidthC_1 * v_l_id_134480))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_134483 = 0; \n            v__134503[(v_l_id_134480 + (512 * v_w_id_134479))] = doubleMultiplyAdd(v__134498, v__134488, v__134487[(v_l_id_134480 + (512 * v_w_id_134479))], v__134489); \n          }\n          /* end map_seq */\n          v_l_id_134480 = atomic_inc(&(v_work_idx_10824)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_134479 = atomic_inc(v_work_idx_10826); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "512",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__134484",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__134485",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__134486",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__134487",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__134488",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__134489",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__134497",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__134491",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__134503",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}