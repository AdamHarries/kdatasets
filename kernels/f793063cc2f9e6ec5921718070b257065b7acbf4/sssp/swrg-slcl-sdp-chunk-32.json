{
  "name" : "swrg-slcl-sdp-chunk-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__83490, const global float* restrict v__83491, const global float* restrict v__83492, const global float* restrict v__83493, float v__83494, float v__83495, global float* v__83508, global float* v__83502, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__83498; \n  float v__83503; \n  /* Private Memory */\n  float v__83500_0;\n  \n  for (int v_wg_id_83485 = get_group_id(0); v_wg_id_83485 < ((v_MHeight_2)/(32)); v_wg_id_83485 = (v_wg_id_83485 + get_num_groups(0))) {\n    for (int v_l_id_83486 = get_local_id(0); v_l_id_83486 < 32; v_l_id_83486 = (v_l_id_83486 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_83487 = 0; v_i_83487 < v_MWidthC_1; v_i_83487 = (1 + v_i_83487)) {\n        float v_tmp_83552 = 3.4028235E38f; \n        v__83498 = v_tmp_83552; \n        int v_index_83553 = v__83490[(v_i_83487 + (32 * v_MWidthC_1 * v_wg_id_83485) + (v_MWidthC_1 * v_l_id_83486))]; \n        if (v_index_83553 < 0) {\n          v__83500_0 = v__83498; \n        } else {\n          if (v_index_83553 >= v_VLength_3) {\n            v__83500_0 = v__83498; \n          } else {\n            v__83500_0 = v__83492[v_index_83553]; \n          }\n        }\n        v__83502[(-1 + v_MWidthC_1 + (32 * v_MWidthC_1 * v_wg_id_83485) + (-1 * v_i_83487) + (v_MWidthC_1 * v_l_id_83486))] = absadd(v__83500_0, v__83491[(v_i_83487 + (32 * v_MWidthC_1 * v_wg_id_83485) + (v_MWidthC_1 * v_l_id_83486))]); \n      }\n      /* end map_seq */\n      float v_tmp_83554 = 3.4028235E38f; \n      v__83503 = v_tmp_83554; \n      /* reduce_seq */\n      for (int v_i_83488 = 0; v_i_83488 < v_MWidthC_1; v_i_83488 = (1 + v_i_83488)) {\n        v__83503 = clmin(v__83503, v__83502[(v_i_83488 + (32 * v_MWidthC_1 * v_wg_id_83485) + (v_MWidthC_1 * v_l_id_83486))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_83489 = 0; \n        v__83508[(v_l_id_83486 + (32 * v_wg_id_83485))] = doubleMultiplyAdd(v__83503, v__83494, v__83493[(v_l_id_83486 + (32 * v_wg_id_83485))], v__83495); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__83490",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__83491",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__83492",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__83493",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__83494",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__83495",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__83502",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__83508",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}