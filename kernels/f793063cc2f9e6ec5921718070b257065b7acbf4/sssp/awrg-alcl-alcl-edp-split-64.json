{
  "name" : "awrg-alcl-alcl-edp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__91978, const global float* restrict v__91979, const global float* restrict v__91980, const global float* restrict v__91981, float v__91982, float v__91983, global float* v__92003, global int* v__91985, local float* v__91998, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__91987; \n  float v__91989; \n  float v__75402; \n  /* Private Memory */\n  float v__91991_0;\n  \n  float v__91993_0;\n  \n  int v__91997_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_7043 = v__91985; \n    local int v_w_id_91971; \n    if (get_local_id(0) == 0) {\n      v_w_id_91971 = atomic_inc(v_work_idx_7043); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_91971 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_7041; \n        v_work_idx_7041 = 0; \n        int v_l_id_91972 = atomic_inc(&(v_work_idx_7041)); \n        while((v_l_id_91972 < v_MWidthC_1)){\n          float v_tmp_92057 = 3.4028235E38f; \n          v__91987 = v_tmp_92057; \n          /* reduce_while_seq */\n          for (int v_i_91973 = 0; v_i_91973 < 64; v_i_91973 = (1 + v_i_91973)) {\n            v__91997_0 = check(v__91987, v__91978[(v_l_id_91972 + (64 * v_MWidthC_1 * v_w_id_91971) + (v_MWidthC_1 * v_i_91973))]); \n            if (v__91997_0) {\n            } else {\n              break;\n            }\n            float v_tmp_92058 = 3.4028235E38f; \n            v__91989 = v_tmp_92058; \n            int v_index_92059 = v__91978[(v_l_id_91972 + (64 * v_MWidthC_1 * v_w_id_91971) + (v_MWidthC_1 * v_i_91973))]; \n            if (v_index_92059 < 0) {\n              v__91991_0 = v__91989; \n            } else {\n              if (v_index_92059 >= v_VLength_3) {\n                v__91991_0 = v__91989; \n              } else {\n                v__91991_0 = v__91980[v_index_92059]; \n              }\n            }\n            v__91993_0 = absadd(v__91991_0, v__91979[(v_l_id_91972 + (64 * v_MWidthC_1 * v_w_id_91971) + (v_MWidthC_1 * v_i_91973))]); \n            v__91987 = clmin(v__91993_0, v__91987); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_91974 = 0; \n            v__91998[v_l_id_91972] = id(v__91987); \n          }\n          /* end map_seq */\n          v_l_id_91972 = atomic_inc(&(v_work_idx_7041)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_7036; \n        v_work_idx_7036 = 0; \n        int v_l_id_91975 = atomic_inc(&(v_work_idx_7036)); \n        while((v_l_id_91975 < 1)){\n          float v_tmp_92062 = 3.4028235E38f; \n          v__75402 = v_tmp_92062; \n          /* reduce_seq */\n          for (int v_i_91976 = 0; v_i_91976 < v_MWidthC_1; v_i_91976 = (1 + v_i_91976)) {\n            v__75402 = clmin(v__75402, v__91998[(v_i_91976 + (v_MWidthC_1 * v_l_id_91975))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_91977 = 0; \n            v__92003[v_w_id_91971] = doubleMultiplyAdd(v__75402, v__91982, v__91981[v_w_id_91971], v__91983); \n          }\n          /* end map_seq */\n          v_l_id_91975 = atomic_inc(&(v_work_idx_7036)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_91971 = atomic_inc(v_work_idx_7043); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__91978",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91979",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__91980",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__91981",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__91982",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__91983",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__91985",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__92003",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__91998",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}