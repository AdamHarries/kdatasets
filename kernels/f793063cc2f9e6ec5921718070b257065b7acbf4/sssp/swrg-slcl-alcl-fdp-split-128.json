{
  "name" : "swrg-slcl-alcl-fdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__92979, const global float* restrict v__92980, const global float* restrict v__92981, const global float* restrict v__92982, float v__92983, float v__92984, global float* v__93001, local float* v__92996, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__92987; \n  float v__92989; \n  float v__75402; \n  /* Private Memory */\n  float v__92991_0;\n  \n  float v__92993_0;\n  \n  for (int v_wg_id_92972 = get_group_id(0); v_wg_id_92972 < v_MHeight_2; v_wg_id_92972 = (v_wg_id_92972 + get_num_groups(0))) {\n    for (int v_l_id_92973 = get_local_id(0); v_l_id_92973 < v_MWidthC_1; v_l_id_92973 = (v_l_id_92973 + get_local_size(0))) {\n      float v_tmp_93062 = 3.4028235E38f; \n      v__92987 = v_tmp_93062; \n      /* reduce_seq */\n      for (int v_i_92974 = 0; v_i_92974 < 128; v_i_92974 = (1 + v_i_92974)) {\n        float v_tmp_93063 = 3.4028235E38f; \n        v__92989 = v_tmp_93063; \n        int v_index_93064 = v__92979[(v_l_id_92973 + (128 * v_MWidthC_1 * v_wg_id_92972) + (v_MWidthC_1 * v_i_92974))]; \n        if (v_index_93064 < 0) {\n          v__92991_0 = v__92989; \n        } else {\n          if (v_index_93064 >= v_VLength_3) {\n            v__92991_0 = v__92989; \n          } else {\n            v__92991_0 = v__92981[v_index_93064]; \n          }\n        }\n        v__92993_0 = absadd(v__92991_0, v__92980[(v_l_id_92973 + (128 * v_MWidthC_1 * v_wg_id_92972) + (v_MWidthC_1 * v_i_92974))]); \n        v__92987 = clmin(v__92993_0, v__92987); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_92975 = 0; \n        v__92996[v_l_id_92973] = id(v__92987); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7113; \n      v_work_idx_7113 = 0; \n      int v_l_id_92976 = atomic_inc(&(v_work_idx_7113)); \n      while((v_l_id_92976 < 1)){\n        float v_tmp_93067 = 3.4028235E38f; \n        v__75402 = v_tmp_93067; \n        /* reduce_seq */\n        for (int v_i_92977 = 0; v_i_92977 < v_MWidthC_1; v_i_92977 = (1 + v_i_92977)) {\n          v__75402 = clmin(v__75402, v__92996[(v_i_92977 + (v_MWidthC_1 * v_l_id_92976))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_92978 = 0; \n          v__93001[v_wg_id_92972] = doubleMultiplyAdd(v__75402, v__92983, v__92982[v_wg_id_92972], v__92984); \n        }\n        /* end map_seq */\n        v_l_id_92976 = atomic_inc(&(v_work_idx_7113)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__92979",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92980",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92981",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__92982",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__92983",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__92984",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__93001",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__92996",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}