{
  "name" : "swrg-slcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__83969, const global float* restrict v__83970, const global float* restrict v__83971, const global float* restrict v__83972, float v__83973, float v__83974, global float* v__83991, global float* v__83981, local float* v__83986, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__83977; \n  float v__83982; \n  float v__75402; \n  /* Private Memory */\n  float v__83979_0;\n  \n  for (int v_wg_id_83961 = get_group_id(0); v_wg_id_83961 < v_MHeight_2; v_wg_id_83961 = (v_wg_id_83961 + get_num_groups(0))) {\n    for (int v_l_id_83962 = get_local_id(0); v_l_id_83962 < v_MWidthC_1; v_l_id_83962 = (v_l_id_83962 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_83963 = 0; v_i_83963 < 32; v_i_83963 = (1 + v_i_83963)) {\n        float v_tmp_84056 = 3.4028235E38f; \n        v__83977 = v_tmp_84056; \n        int v_index_84057 = v__83969[(v_l_id_83962 + (32 * v_MWidthC_1 * v_wg_id_83961) + (v_MWidthC_1 * v_i_83963))]; \n        if (v_index_84057 < 0) {\n          v__83979_0 = v__83977; \n        } else {\n          if (v_index_84057 >= v_VLength_3) {\n            v__83979_0 = v__83977; \n          } else {\n            v__83979_0 = v__83971[v_index_84057]; \n          }\n        }\n        v__83981[(31 + (32 * v_MWidthC_1 * v_wg_id_83961) + (-1 * v_i_83963) + (32 * v_l_id_83962))] = absadd(v__83979_0, v__83970[(v_l_id_83962 + (32 * v_MWidthC_1 * v_wg_id_83961) + (v_MWidthC_1 * v_i_83963))]); \n      }\n      /* end map_seq */\n      float v_tmp_84058 = 3.4028235E38f; \n      v__83982 = v_tmp_84058; \n      /* reduce_seq */\n      for (int v_i_83964 = 0; v_i_83964 < 32; v_i_83964 = (1 + v_i_83964)) {\n        v__83982 = clmin(v__83982, v__83981[(v_i_83964 + (32 * v_MWidthC_1 * v_wg_id_83961) + (32 * v_l_id_83962))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_83965 = 0; \n        v__83986[v_l_id_83962] = id(v__83982); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_83966 = get_local_id(0); \n      float v_tmp_84061 = 3.4028235E38f; \n      v__75402 = v_tmp_84061; \n      /* reduce_seq */\n      for (int v_i_83967 = 0; v_i_83967 < v_MWidthC_1; v_i_83967 = (1 + v_i_83967)) {\n        v__75402 = clmin(v__75402, v__83986[(v_i_83967 + (v_MWidthC_1 * v_l_id_83966))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_83968 = 0; \n        v__83991[v_wg_id_83961] = doubleMultiplyAdd(v__75402, v__83973, v__83972[v_wg_id_83961], v__83974); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__83969",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__83970",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__83971",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__83972",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__83973",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__83974",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__83981",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__83991",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__83986",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}