{
  "name" : "swrg-slcl-slcl-sdp-split-8",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__75384, const global float* restrict v__75385, const global float* restrict v__75386, const global float* restrict v__75387, float v__75388, float v__75389, global float* v__75407, global float* v__75396, local float* v__75401, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__75392; \n  float v__75397; \n  float v__75402; \n  /* Private Memory */\n  float v__75394_0;\n  \n  for (int v_wg_id_75376 = get_group_id(0); v_wg_id_75376 < v_MHeight_2; v_wg_id_75376 = (v_wg_id_75376 + get_num_groups(0))) {\n    for (int v_l_id_75377 = get_local_id(0); v_l_id_75377 < v_MWidthC_1; v_l_id_75377 = (v_l_id_75377 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_75378 = 0; v_i_75378 < 8; v_i_75378 = (1 + v_i_75378)) {\n        float v_tmp_75472 = 3.4028235E38f; \n        v__75392 = v_tmp_75472; \n        int v_index_75473 = v__75384[(v_l_id_75377 + (8 * v_MWidthC_1 * v_wg_id_75376) + (v_MWidthC_1 * v_i_75378))]; \n        if (v_index_75473 < 0) {\n          v__75394_0 = v__75392; \n        } else {\n          if (v_index_75473 >= v_VLength_3) {\n            v__75394_0 = v__75392; \n          } else {\n            v__75394_0 = v__75386[v_index_75473]; \n          }\n        }\n        v__75396[(7 + (8 * v_MWidthC_1 * v_wg_id_75376) + (-1 * v_i_75378) + (8 * v_l_id_75377))] = absadd(v__75394_0, v__75385[(v_l_id_75377 + (8 * v_MWidthC_1 * v_wg_id_75376) + (v_MWidthC_1 * v_i_75378))]); \n      }\n      /* end map_seq */\n      float v_tmp_75474 = 3.4028235E38f; \n      v__75397 = v_tmp_75474; \n      /* reduce_seq */\n      for (int v_i_75379 = 0; v_i_75379 < 8; v_i_75379 = (1 + v_i_75379)) {\n        v__75397 = clmin(v__75397, v__75396[(v_i_75379 + (8 * v_MWidthC_1 * v_wg_id_75376) + (8 * v_l_id_75377))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_75380 = 0; \n        v__75401[v_l_id_75377] = id(v__75397); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_75381 = get_local_id(0); \n      float v_tmp_75477 = 3.4028235E38f; \n      v__75402 = v_tmp_75477; \n      /* reduce_seq */\n      for (int v_i_75382 = 0; v_i_75382 < v_MWidthC_1; v_i_75382 = (1 + v_i_75382)) {\n        v__75402 = clmin(v__75402, v__75401[(v_i_75382 + (v_MWidthC_1 * v_l_id_75381))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_75383 = 0; \n        v__75407[v_wg_id_75376] = doubleMultiplyAdd(v__75402, v__75388, v__75387[v_wg_id_75376], v__75389); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "8",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__75384",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__75385",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__75386",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__75387",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__75388",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__75389",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__75396",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__75407",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__75401",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}