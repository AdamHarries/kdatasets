{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__79677, const global float* restrict v__79678, const global float* restrict v__79679, const global float* restrict v__79680, float v__79681, float v__79682, global float* v__79699, global float* v__79689, local float* v__79694, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__79685; \n  float v__79690; \n  float v__75402; \n  /* Private Memory */\n  float v__79687_0;\n  \n  for (int v_wg_id_79669 = get_group_id(0); v_wg_id_79669 < v_MHeight_2; v_wg_id_79669 = (v_wg_id_79669 + get_num_groups(0))) {\n    for (int v_l_id_79670 = get_local_id(0); v_l_id_79670 < v_MWidthC_1; v_l_id_79670 = (v_l_id_79670 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_79671 = 0; v_i_79671 < 16; v_i_79671 = (1 + v_i_79671)) {\n        float v_tmp_79764 = 3.4028235E38f; \n        v__79685 = v_tmp_79764; \n        int v_index_79765 = v__79677[(v_l_id_79670 + (16 * v_MWidthC_1 * v_wg_id_79669) + (v_MWidthC_1 * v_i_79671))]; \n        if (v_index_79765 < 0) {\n          v__79687_0 = v__79685; \n        } else {\n          if (v_index_79765 >= v_VLength_3) {\n            v__79687_0 = v__79685; \n          } else {\n            v__79687_0 = v__79679[v_index_79765]; \n          }\n        }\n        v__79689[(15 + (16 * v_MWidthC_1 * v_wg_id_79669) + (-1 * v_i_79671) + (16 * v_l_id_79670))] = absadd(v__79687_0, v__79678[(v_l_id_79670 + (16 * v_MWidthC_1 * v_wg_id_79669) + (v_MWidthC_1 * v_i_79671))]); \n      }\n      /* end map_seq */\n      float v_tmp_79766 = 3.4028235E38f; \n      v__79690 = v_tmp_79766; \n      /* reduce_seq */\n      for (int v_i_79672 = 0; v_i_79672 < 16; v_i_79672 = (1 + v_i_79672)) {\n        v__79690 = clmin(v__79690, v__79689[(v_i_79672 + (16 * v_MWidthC_1 * v_wg_id_79669) + (16 * v_l_id_79670))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_79673 = 0; \n        v__79694[v_l_id_79670] = id(v__79690); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_79674 = get_local_id(0); \n      float v_tmp_79769 = 3.4028235E38f; \n      v__75402 = v_tmp_79769; \n      /* reduce_seq */\n      for (int v_i_79675 = 0; v_i_79675 < v_MWidthC_1; v_i_79675 = (1 + v_i_79675)) {\n        v__75402 = clmin(v__75402, v__79694[(v_i_79675 + (v_MWidthC_1 * v_l_id_79674))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_79676 = 0; \n        v__79699[v_wg_id_79669] = doubleMultiplyAdd(v__75402, v__79681, v__79680[v_wg_id_79669], v__79682); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__79677",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__79678",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__79679",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__79680",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__79681",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__79682",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__79689",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__79699",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__79694",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}