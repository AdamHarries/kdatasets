{
  "name" : "swrg-slcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__88687, const global float* restrict v__88688, const global float* restrict v__88689, const global float* restrict v__88690, float v__88691, float v__88692, global float* v__88709, local float* v__88704, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__88695; \n  float v__88697; \n  float v__75402; \n  /* Private Memory */\n  float v__88699_0;\n  \n  float v__88701_0;\n  \n  for (int v_wg_id_88680 = get_group_id(0); v_wg_id_88680 < v_MHeight_2; v_wg_id_88680 = (v_wg_id_88680 + get_num_groups(0))) {\n    for (int v_l_id_88681 = get_local_id(0); v_l_id_88681 < v_MWidthC_1; v_l_id_88681 = (v_l_id_88681 + get_local_size(0))) {\n      float v_tmp_88770 = 3.4028235E38f; \n      v__88695 = v_tmp_88770; \n      /* reduce_seq */\n      for (int v_i_88682 = 0; v_i_88682 < 64; v_i_88682 = (1 + v_i_88682)) {\n        float v_tmp_88771 = 3.4028235E38f; \n        v__88697 = v_tmp_88771; \n        int v_index_88772 = v__88687[(v_l_id_88681 + (64 * v_MWidthC_1 * v_wg_id_88680) + (v_MWidthC_1 * v_i_88682))]; \n        if (v_index_88772 < 0) {\n          v__88699_0 = v__88697; \n        } else {\n          if (v_index_88772 >= v_VLength_3) {\n            v__88699_0 = v__88697; \n          } else {\n            v__88699_0 = v__88689[v_index_88772]; \n          }\n        }\n        v__88701_0 = absadd(v__88699_0, v__88688[(v_l_id_88681 + (64 * v_MWidthC_1 * v_wg_id_88680) + (v_MWidthC_1 * v_i_88682))]); \n        v__88695 = clmin(v__88701_0, v__88695); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_88683 = 0; \n        v__88704[v_l_id_88681] = id(v__88695); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_6729; \n      v_work_idx_6729 = 0; \n      int v_l_id_88684 = atomic_inc(&(v_work_idx_6729)); \n      while((v_l_id_88684 < 1)){\n        float v_tmp_88775 = 3.4028235E38f; \n        v__75402 = v_tmp_88775; \n        /* reduce_seq */\n        for (int v_i_88685 = 0; v_i_88685 < v_MWidthC_1; v_i_88685 = (1 + v_i_88685)) {\n          v__75402 = clmin(v__75402, v__88704[(v_i_88685 + (v_MWidthC_1 * v_l_id_88684))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_88686 = 0; \n          v__88709[v_wg_id_88680] = doubleMultiplyAdd(v__75402, v__88691, v__88690[v_wg_id_88680], v__88692); \n        }\n        /* end map_seq */\n        v_l_id_88684 = atomic_inc(&(v_work_idx_6729)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__88687",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__88688",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__88689",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__88690",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__88691",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__88692",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__88709",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__88704",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}