{
  "name" : "swrg-slcl-slcl-sdp-split-128",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__92553, const global float* restrict v__92554, const global float* restrict v__92555, const global float* restrict v__92556, float v__92557, float v__92558, global float* v__92575, global float* v__92565, local float* v__92570, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__92561; \n  float v__92566; \n  float v__75402; \n  /* Private Memory */\n  float v__92563_0;\n  \n  for (int v_wg_id_92545 = get_group_id(0); v_wg_id_92545 < v_MHeight_2; v_wg_id_92545 = (v_wg_id_92545 + get_num_groups(0))) {\n    for (int v_l_id_92546 = get_local_id(0); v_l_id_92546 < v_MWidthC_1; v_l_id_92546 = (v_l_id_92546 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_92547 = 0; v_i_92547 < 128; v_i_92547 = (1 + v_i_92547)) {\n        float v_tmp_92640 = 3.4028235E38f; \n        v__92561 = v_tmp_92640; \n        int v_index_92641 = v__92553[(v_l_id_92546 + (128 * v_MWidthC_1 * v_wg_id_92545) + (v_MWidthC_1 * v_i_92547))]; \n        if (v_index_92641 < 0) {\n          v__92563_0 = v__92561; \n        } else {\n          if (v_index_92641 >= v_VLength_3) {\n            v__92563_0 = v__92561; \n          } else {\n            v__92563_0 = v__92555[v_index_92641]; \n          }\n        }\n        v__92565[(127 + (128 * v_MWidthC_1 * v_wg_id_92545) + (-1 * v_i_92547) + (128 * v_l_id_92546))] = absadd(v__92563_0, v__92554[(v_l_id_92546 + (128 * v_MWidthC_1 * v_wg_id_92545) + (v_MWidthC_1 * v_i_92547))]); \n      }\n      /* end map_seq */\n      float v_tmp_92642 = 3.4028235E38f; \n      v__92566 = v_tmp_92642; \n      /* reduce_seq */\n      for (int v_i_92548 = 0; v_i_92548 < 128; v_i_92548 = (1 + v_i_92548)) {\n        v__92566 = clmin(v__92566, v__92565[(v_i_92548 + (128 * v_MWidthC_1 * v_wg_id_92545) + (128 * v_l_id_92546))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_92549 = 0; \n        v__92570[v_l_id_92546] = id(v__92566); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_92550 = get_local_id(0); \n      float v_tmp_92645 = 3.4028235E38f; \n      v__75402 = v_tmp_92645; \n      /* reduce_seq */\n      for (int v_i_92551 = 0; v_i_92551 < v_MWidthC_1; v_i_92551 = (1 + v_i_92551)) {\n        v__75402 = clmin(v__75402, v__92570[(v_i_92551 + (v_MWidthC_1 * v_l_id_92550))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_92552 = 0; \n        v__92575[v_wg_id_92545] = doubleMultiplyAdd(v__75402, v__92557, v__92556[v_wg_id_92545], v__92558); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__92553",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92554",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__92555",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__92556",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__92557",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__92558",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__92565",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__92575",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__92570",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}