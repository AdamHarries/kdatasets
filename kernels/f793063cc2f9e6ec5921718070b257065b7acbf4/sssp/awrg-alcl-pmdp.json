{
  "name" : "awrg-alcl-pmdp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__74773, const global float* restrict v__74774, const global float* restrict v__74775, const global float* restrict v__74776, float v__74777, float v__74778, global float* v__74792, global float* v__74786, global int* v__74780, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__74782; \n  float v__74787; \n  /* Private Memory */\n  float v__74784_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_5503 = v__74780; \n    local int v_w_id_74769; \n    if (get_local_id(0) == 0) {\n      v_w_id_74769 = atomic_inc(v_work_idx_5503); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_74769 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_l_id_5501; \n        v_l_id_5501 = 0; \n        int v_l_id_74770 = atomic_inc(&(v_l_id_5501)); \n        while((v_l_id_74770 < v_MWidthC_1)){\n          float v_tmp_74822 = 3.4028235E38f; \n          v__74782 = v_tmp_74822; \n          int v_index_74823 = v__74773[(v_l_id_74770 + (v_MWidthC_1 * v_w_id_74769))]; \n          if (v_index_74823 < 0) {\n            v__74784_0 = v__74782; \n          } else {\n            if (v_index_74823 >= v_VLength_3) {\n              v__74784_0 = v__74782; \n            } else {\n              v__74784_0 = v__74775[v_index_74823]; \n            }\n          }\n          v__74786[(-1 + v_MWidthC_1 + (-1 * v_l_id_74770) + (v_MWidthC_1 * v_w_id_74769))] = absadd(v__74784_0, v__74774[(v_l_id_74770 + (v_MWidthC_1 * v_w_id_74769))]); \n          v_l_id_74770 = atomic_inc(&(v_l_id_5501)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      float v_tmp_74824 = 3.4028235E38f; \n      v__74787 = v_tmp_74824; \n      /* reduce_seq */\n      for (int v_i_74771 = 0; v_i_74771 < v_MWidthC_1; v_i_74771 = (1 + v_i_74771)) {\n        v__74787 = clmin(v__74787, v__74786[(v_i_74771 + (v_MWidthC_1 * v_w_id_74769))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_74772 = 0; \n        v__74792[v_w_id_74769] = doubleMultiplyAdd(v__74787, v__74777, v__74776[v_w_id_74769], v__74778); \n      }\n      /* end map_seq */\n      if (get_local_id(0) == 0) {\n        v_w_id_74769 = atomic_inc(v_work_idx_5503); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__74773",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74774",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74775",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74776",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74777",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74778",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__74786",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74780",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__74792",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}