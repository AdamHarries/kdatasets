{
  "name" : "swrg-slcl-slcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__101137, const global float* restrict v__101138, const global float* restrict v__101139, const global float* restrict v__101140, float v__101141, float v__101142, global float* v__101159, global float* v__101149, local float* v__101154, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__101145; \n  float v__101150; \n  float v__75402; \n  /* Private Memory */\n  float v__101147_0;\n  \n  for (int v_wg_id_101129 = get_group_id(0); v_wg_id_101129 < v_MHeight_2; v_wg_id_101129 = (v_wg_id_101129 + get_num_groups(0))) {\n    for (int v_l_id_101130 = get_local_id(0); v_l_id_101130 < v_MWidthC_1; v_l_id_101130 = (v_l_id_101130 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_101131 = 0; v_i_101131 < 512; v_i_101131 = (1 + v_i_101131)) {\n        float v_tmp_101224 = 3.4028235E38f; \n        v__101145 = v_tmp_101224; \n        int v_index_101225 = v__101137[(v_l_id_101130 + (512 * v_MWidthC_1 * v_wg_id_101129) + (v_MWidthC_1 * v_i_101131))]; \n        if (v_index_101225 < 0) {\n          v__101147_0 = v__101145; \n        } else {\n          if (v_index_101225 >= v_VLength_3) {\n            v__101147_0 = v__101145; \n          } else {\n            v__101147_0 = v__101139[v_index_101225]; \n          }\n        }\n        v__101149[(511 + (512 * v_MWidthC_1 * v_wg_id_101129) + (-1 * v_i_101131) + (512 * v_l_id_101130))] = absadd(v__101147_0, v__101138[(v_l_id_101130 + (512 * v_MWidthC_1 * v_wg_id_101129) + (v_MWidthC_1 * v_i_101131))]); \n      }\n      /* end map_seq */\n      float v_tmp_101226 = 3.4028235E38f; \n      v__101150 = v_tmp_101226; \n      /* reduce_seq */\n      for (int v_i_101132 = 0; v_i_101132 < 512; v_i_101132 = (1 + v_i_101132)) {\n        v__101150 = clmin(v__101150, v__101149[(v_i_101132 + (512 * v_MWidthC_1 * v_wg_id_101129) + (512 * v_l_id_101130))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_101133 = 0; \n        v__101154[v_l_id_101130] = id(v__101150); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_101134 = get_local_id(0); \n      float v_tmp_101229 = 3.4028235E38f; \n      v__75402 = v_tmp_101229; \n      /* reduce_seq */\n      for (int v_i_101135 = 0; v_i_101135 < v_MWidthC_1; v_i_101135 = (1 + v_i_101135)) {\n        v__75402 = clmin(v__75402, v__101154[(v_i_101135 + (v_MWidthC_1 * v_l_id_101134))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_101136 = 0; \n        v__101159[v_wg_id_101129] = doubleMultiplyAdd(v__75402, v__101141, v__101140[v_wg_id_101129], v__101142); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__101137",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__101138",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__101139",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__101140",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__101141",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__101142",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__101149",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__101159",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__101154",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}