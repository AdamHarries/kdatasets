{
  "name" : "swrg-slcl-alcl-fdp-split-256",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat clmin(float a, float b){\n  { return fabs(a) < fabs(b) ? fabs(a) : fabs(b); }\n}\nfloat absadd(float a, float b){\n  { return fabs(a) + fabs(b); }\n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n  float a = fabs(dpRes) + fabs(alpha);\n  float b = fabs(rowIdxPair2) + fabs(beta);\n  return fabs(a) < fabs(b) ? fabs(a) : fabs(b);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__97271, const global float* restrict v__97272, const global float* restrict v__97273, const global float* restrict v__97274, float v__97275, float v__97276, global float* v__97293, local float* v__97288, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__97279; \n  float v__97281; \n  float v__75402; \n  /* Private Memory */\n  float v__97283_0;\n  \n  float v__97285_0;\n  \n  for (int v_wg_id_97264 = get_group_id(0); v_wg_id_97264 < v_MHeight_2; v_wg_id_97264 = (v_wg_id_97264 + get_num_groups(0))) {\n    for (int v_l_id_97265 = get_local_id(0); v_l_id_97265 < v_MWidthC_1; v_l_id_97265 = (v_l_id_97265 + get_local_size(0))) {\n      float v_tmp_97354 = 3.4028235E38f; \n      v__97279 = v_tmp_97354; \n      /* reduce_seq */\n      for (int v_i_97266 = 0; v_i_97266 < 256; v_i_97266 = (1 + v_i_97266)) {\n        float v_tmp_97355 = 3.4028235E38f; \n        v__97281 = v_tmp_97355; \n        int v_index_97356 = v__97271[(v_l_id_97265 + (256 * v_MWidthC_1 * v_wg_id_97264) + (v_MWidthC_1 * v_i_97266))]; \n        if (v_index_97356 < 0) {\n          v__97283_0 = v__97281; \n        } else {\n          if (v_index_97356 >= v_VLength_3) {\n            v__97283_0 = v__97281; \n          } else {\n            v__97283_0 = v__97273[v_index_97356]; \n          }\n        }\n        v__97285_0 = absadd(v__97283_0, v__97272[(v_l_id_97265 + (256 * v_MWidthC_1 * v_wg_id_97264) + (v_MWidthC_1 * v_i_97266))]); \n        v__97279 = clmin(v__97285_0, v__97279); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_97267 = 0; \n        v__97288[v_l_id_97265] = id(v__97279); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_7497; \n      v_work_idx_7497 = 0; \n      int v_l_id_97268 = atomic_inc(&(v_work_idx_7497)); \n      while((v_l_id_97268 < 1)){\n        float v_tmp_97359 = 3.4028235E38f; \n        v__75402 = v_tmp_97359; \n        /* reduce_seq */\n        for (int v_i_97269 = 0; v_i_97269 < v_MWidthC_1; v_i_97269 = (1 + v_i_97269)) {\n          v__75402 = clmin(v__75402, v__97288[(v_i_97269 + (v_MWidthC_1 * v_l_id_97268))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_97270 = 0; \n          v__97293[v_wg_id_97264] = doubleMultiplyAdd(v__75402, v__97275, v__97274[v_wg_id_97264], v__97276); \n        }\n        /* end map_seq */\n        v_l_id_97268 = atomic_inc(&(v_work_idx_7497)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__97271",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97272",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__97273",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__97274",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__97275",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__97276",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__97293",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__97288",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}