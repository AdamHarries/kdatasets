{
  "name" : "awrg-alcl-alcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__69868, const global int* restrict v__69869, const global int* restrict v__69870, const global int* restrict v__69871, int v__69872, int v__69873, global int* v__69891, global int* v__69881, global int* v__69875, local int* v__69886, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__69877; \n  int v__69882; \n  int v__45239; \n  /* Private Memory */\n  int v__69879_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_5058 = v__69875; \n    local int v_w_id_69860; \n    if (get_local_id(0) == 0) {\n      v_w_id_69860 = atomic_inc(v_work_idx_5058); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_69860 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_5056; \n        v_work_idx_5056 = 0; \n        int v_l_id_69861 = atomic_inc(&(v_work_idx_5056)); \n        while((v_l_id_69861 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_69862 = 0; v_i_69862 < 256; v_i_69862 = (1 + v_i_69862)) {\n            int v_tmp_69942 = 0; \n            v__69877 = v_tmp_69942; \n            int v_index_69943 = v__69868[(v_l_id_69861 + (256 * v_MWidthC_1 * v_w_id_69860) + (v_MWidthC_1 * v_i_69862))]; \n            if (v_index_69943 < 0) {\n              v__69879_0 = v__69877; \n            } else {\n              if (v_index_69943 >= v_VLength_3) {\n                v__69879_0 = v__69877; \n              } else {\n                v__69879_0 = v__69870[v_index_69943]; \n              }\n            }\n            v__69881[(255 + (256 * v_MWidthC_1 * v_w_id_69860) + (-1 * v_i_69862) + (256 * v_l_id_69861))] = bool_and(v__69879_0, v__69869[(v_l_id_69861 + (256 * v_MWidthC_1 * v_w_id_69860) + (v_MWidthC_1 * v_i_69862))]); \n          }\n          /* end map_seq */\n          int v_tmp_69944 = 0; \n          v__69882 = v_tmp_69944; \n          /* reduce_seq */\n          for (int v_i_69863 = 0; v_i_69863 < 256; v_i_69863 = (1 + v_i_69863)) {\n            v__69882 = bool_or(v__69882, v__69881[(v_i_69863 + (256 * v_MWidthC_1 * v_w_id_69860) + (256 * v_l_id_69861))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_69864 = 0; \n            v__69886[v_l_id_69861] = id(v__69882); \n          }\n          /* end map_seq */\n          v_l_id_69861 = atomic_inc(&(v_work_idx_5056)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_5050; \n        v_work_idx_5050 = 0; \n        int v_l_id_69865 = atomic_inc(&(v_work_idx_5050)); \n        while((v_l_id_69865 < 1)){\n          int v_tmp_69947 = 0; \n          v__45239 = v_tmp_69947; \n          /* reduce_seq */\n          for (int v_i_69866 = 0; v_i_69866 < v_MWidthC_1; v_i_69866 = (1 + v_i_69866)) {\n            v__45239 = bool_or(v__45239, v__69886[(v_i_69866 + (v_MWidthC_1 * v_l_id_69865))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_69867 = 0; \n            v__69891[v_w_id_69860] = doubleAndOr(v__45239, v__69872, v__69871[v_w_id_69860], v__69873); \n          }\n          /* end map_seq */\n          v_l_id_69865 = atomic_inc(&(v_work_idx_5050)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_69860 = atomic_inc(v_work_idx_5058); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__69868",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__69869",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__69870",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__69871",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__69872",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__69873",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__69881",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__69875",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__69891",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__69886",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}