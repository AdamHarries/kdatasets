{
  "name" : "awrg-slcl-alcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__51897, const global int* restrict v__51898, const global int* restrict v__51899, const global int* restrict v__51900, int v__51901, int v__51902, global int* v__51920, global int* v__51910, global int* v__51904, local int* v__51915, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__51906; \n  int v__51911; \n  int v__45239; \n  /* Private Memory */\n  int v__51908_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3416 = v__51904; \n    local int v_w_id_51889; \n    if (get_local_id(0) == 0) {\n      v_w_id_51889 = atomic_inc(v_work_idx_3416); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_51889 < v_MHeight_2)){\n      for (int v_l_id_51890 = get_local_id(0); v_l_id_51890 < v_MWidthC_1; v_l_id_51890 = (v_l_id_51890 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_51891 = 0; v_i_51891 < 16; v_i_51891 = (1 + v_i_51891)) {\n          int v_tmp_51979 = 0; \n          v__51906 = v_tmp_51979; \n          int v_index_51980 = v__51897[(v_l_id_51890 + (16 * v_MWidthC_1 * v_w_id_51889) + (v_MWidthC_1 * v_i_51891))]; \n          if (v_index_51980 < 0) {\n            v__51908_0 = v__51906; \n          } else {\n            if (v_index_51980 >= v_VLength_3) {\n              v__51908_0 = v__51906; \n            } else {\n              v__51908_0 = v__51899[v_index_51980]; \n            }\n          }\n          v__51910[(15 + (16 * v_MWidthC_1 * v_w_id_51889) + (-1 * v_i_51891) + (16 * v_l_id_51890))] = bool_and(v__51908_0, v__51898[(v_l_id_51890 + (16 * v_MWidthC_1 * v_w_id_51889) + (v_MWidthC_1 * v_i_51891))]); \n        }\n        /* end map_seq */\n        int v_tmp_51981 = 0; \n        v__51911 = v_tmp_51981; \n        /* reduce_seq */\n        for (int v_i_51892 = 0; v_i_51892 < 16; v_i_51892 = (1 + v_i_51892)) {\n          v__51911 = bool_or(v__51911, v__51910[(v_i_51892 + (16 * v_MWidthC_1 * v_w_id_51889) + (16 * v_l_id_51890))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_51893 = 0; \n          v__51915[v_l_id_51890] = id(v__51911); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3409; \n        v_work_idx_3409 = 0; \n        int v_l_id_51894 = atomic_inc(&(v_work_idx_3409)); \n        while((v_l_id_51894 < 1)){\n          int v_tmp_51984 = 0; \n          v__45239 = v_tmp_51984; \n          /* reduce_seq */\n          for (int v_i_51895 = 0; v_i_51895 < v_MWidthC_1; v_i_51895 = (1 + v_i_51895)) {\n            v__45239 = bool_or(v__45239, v__51915[(v_i_51895 + (v_MWidthC_1 * v_l_id_51894))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_51896 = 0; \n            v__51920[v_w_id_51889] = doubleAndOr(v__45239, v__51901, v__51900[v_w_id_51889], v__51902); \n          }\n          /* end map_seq */\n          v_l_id_51894 = atomic_inc(&(v_work_idx_3409)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_51889 = atomic_inc(v_work_idx_3416); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__51897",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__51898",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__51899",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__51900",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__51901",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__51902",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__51910",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__51904",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__51920",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__51915",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}