{
  "name" : "awrg-alcl-alcl-edp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__65822, const global int* restrict v__65823, const global int* restrict v__65824, const global int* restrict v__65825, int v__65826, int v__65827, global int* v__65847, global int* v__65829, local int* v__65842, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__65831; \n  int v__65833; \n  int v__45239; \n  /* Private Memory */\n  int v__65835_0;\n  \n  int v__65837_0;\n  \n  int v__65841_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4696 = v__65829; \n    local int v_w_id_65815; \n    if (get_local_id(0) == 0) {\n      v_w_id_65815 = atomic_inc(v_work_idx_4696); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_65815 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4694; \n        v_work_idx_4694 = 0; \n        int v_l_id_65816 = atomic_inc(&(v_work_idx_4694)); \n        while((v_l_id_65816 < v_MWidthC_1)){\n          int v_tmp_65901 = 0; \n          v__65831 = v_tmp_65901; \n          /* reduce_while_seq */\n          for (int v_i_65817 = 0; v_i_65817 < 128; v_i_65817 = (1 + v_i_65817)) {\n            v__65841_0 = check(v__65831, v__65822[(v_l_id_65816 + (128 * v_MWidthC_1 * v_w_id_65815) + (v_MWidthC_1 * v_i_65817))]); \n            if (v__65841_0) {\n            } else {\n              break;\n            }\n            int v_tmp_65902 = 0; \n            v__65833 = v_tmp_65902; \n            int v_index_65903 = v__65822[(v_l_id_65816 + (128 * v_MWidthC_1 * v_w_id_65815) + (v_MWidthC_1 * v_i_65817))]; \n            if (v_index_65903 < 0) {\n              v__65835_0 = v__65833; \n            } else {\n              if (v_index_65903 >= v_VLength_3) {\n                v__65835_0 = v__65833; \n              } else {\n                v__65835_0 = v__65824[v_index_65903]; \n              }\n            }\n            v__65837_0 = bool_and(v__65835_0, v__65823[(v_l_id_65816 + (128 * v_MWidthC_1 * v_w_id_65815) + (v_MWidthC_1 * v_i_65817))]); \n            v__65831 = bool_or(v__65837_0, v__65831); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_65818 = 0; \n            v__65842[v_l_id_65816] = id(v__65831); \n          }\n          /* end map_seq */\n          v_l_id_65816 = atomic_inc(&(v_work_idx_4694)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4689; \n        v_work_idx_4689 = 0; \n        int v_l_id_65819 = atomic_inc(&(v_work_idx_4689)); \n        while((v_l_id_65819 < 1)){\n          int v_tmp_65906 = 0; \n          v__45239 = v_tmp_65906; \n          /* reduce_seq */\n          for (int v_i_65820 = 0; v_i_65820 < v_MWidthC_1; v_i_65820 = (1 + v_i_65820)) {\n            v__45239 = bool_or(v__45239, v__65842[(v_i_65820 + (v_MWidthC_1 * v_l_id_65819))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_65821 = 0; \n            v__65847[v_w_id_65815] = doubleAndOr(v__45239, v__65826, v__65825[v_w_id_65815], v__65827); \n          }\n          /* end map_seq */\n          v_l_id_65819 = atomic_inc(&(v_work_idx_4689)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_65815 = atomic_inc(v_work_idx_4696); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__65822",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__65823",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__65824",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__65825",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__65826",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__65827",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__65829",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__65847",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__65842",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}