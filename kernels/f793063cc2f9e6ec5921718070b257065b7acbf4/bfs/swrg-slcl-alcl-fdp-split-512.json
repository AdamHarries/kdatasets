{
  "name" : "swrg-slcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__71040, const global int* restrict v__71041, const global int* restrict v__71042, const global int* restrict v__71043, int v__71044, int v__71045, global int* v__71062, local int* v__71057, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__71048; \n  int v__71050; \n  int v__45239; \n  /* Private Memory */\n  int v__71052_0;\n  \n  int v__71054_0;\n  \n  for (int v_wg_id_71033 = get_group_id(0); v_wg_id_71033 < v_MHeight_2; v_wg_id_71033 = (v_wg_id_71033 + get_num_groups(0))) {\n    for (int v_l_id_71034 = get_local_id(0); v_l_id_71034 < v_MWidthC_1; v_l_id_71034 = (v_l_id_71034 + get_local_size(0))) {\n      int v_tmp_71123 = 0; \n      v__71048 = v_tmp_71123; \n      /* reduce_seq */\n      for (int v_i_71035 = 0; v_i_71035 < 512; v_i_71035 = (1 + v_i_71035)) {\n        int v_tmp_71124 = 0; \n        v__71050 = v_tmp_71124; \n        int v_index_71125 = v__71040[(v_l_id_71034 + (512 * v_MWidthC_1 * v_wg_id_71033) + (v_MWidthC_1 * v_i_71035))]; \n        if (v_index_71125 < 0) {\n          v__71052_0 = v__71050; \n        } else {\n          if (v_index_71125 >= v_VLength_3) {\n            v__71052_0 = v__71050; \n          } else {\n            v__71052_0 = v__71042[v_index_71125]; \n          }\n        }\n        v__71054_0 = bool_and(v__71052_0, v__71041[(v_l_id_71034 + (512 * v_MWidthC_1 * v_wg_id_71033) + (v_MWidthC_1 * v_i_71035))]); \n        v__71048 = bool_or(v__71054_0, v__71048); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_71036 = 0; \n        v__71057[v_l_id_71034] = id(v__71048); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_5150; \n      v_work_idx_5150 = 0; \n      int v_l_id_71037 = atomic_inc(&(v_work_idx_5150)); \n      while((v_l_id_71037 < 1)){\n        int v_tmp_71128 = 0; \n        v__45239 = v_tmp_71128; \n        /* reduce_seq */\n        for (int v_i_71038 = 0; v_i_71038 < v_MWidthC_1; v_i_71038 = (1 + v_i_71038)) {\n          v__45239 = bool_or(v__45239, v__71057[(v_i_71038 + (v_MWidthC_1 * v_l_id_71037))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_71039 = 0; \n          v__71062[v_wg_id_71033] = doubleAndOr(v__45239, v__71044, v__71043[v_wg_id_71033], v__71045); \n        }\n        /* end map_seq */\n        v_l_id_71037 = atomic_inc(&(v_work_idx_5150)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__71040",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__71041",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__71042",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__71043",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__71044",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__71045",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__71062",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__71057",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}