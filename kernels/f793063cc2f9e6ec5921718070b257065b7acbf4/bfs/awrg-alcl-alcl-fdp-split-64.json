{
  "name" : "awrg-alcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__61497, const global int* restrict v__61498, const global int* restrict v__61499, const global int* restrict v__61500, int v__61501, int v__61502, global int* v__61520, global int* v__61504, local int* v__61515, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__61506; \n  int v__61508; \n  int v__45239; \n  /* Private Memory */\n  int v__61510_0;\n  \n  int v__61512_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4301 = v__61504; \n    local int v_w_id_61490; \n    if (get_local_id(0) == 0) {\n      v_w_id_61490 = atomic_inc(v_work_idx_4301); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_61490 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4299; \n        v_work_idx_4299 = 0; \n        int v_l_id_61491 = atomic_inc(&(v_work_idx_4299)); \n        while((v_l_id_61491 < v_MWidthC_1)){\n          int v_tmp_61571 = 0; \n          v__61506 = v_tmp_61571; \n          /* reduce_seq */\n          for (int v_i_61492 = 0; v_i_61492 < 64; v_i_61492 = (1 + v_i_61492)) {\n            int v_tmp_61572 = 0; \n            v__61508 = v_tmp_61572; \n            int v_index_61573 = v__61497[(v_l_id_61491 + (64 * v_MWidthC_1 * v_w_id_61490) + (v_MWidthC_1 * v_i_61492))]; \n            if (v_index_61573 < 0) {\n              v__61510_0 = v__61508; \n            } else {\n              if (v_index_61573 >= v_VLength_3) {\n                v__61510_0 = v__61508; \n              } else {\n                v__61510_0 = v__61499[v_index_61573]; \n              }\n            }\n            v__61512_0 = bool_and(v__61510_0, v__61498[(v_l_id_61491 + (64 * v_MWidthC_1 * v_w_id_61490) + (v_MWidthC_1 * v_i_61492))]); \n            v__61506 = bool_or(v__61512_0, v__61506); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_61493 = 0; \n            v__61515[v_l_id_61491] = id(v__61506); \n          }\n          /* end map_seq */\n          v_l_id_61491 = atomic_inc(&(v_work_idx_4299)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4294; \n        v_work_idx_4294 = 0; \n        int v_l_id_61494 = atomic_inc(&(v_work_idx_4294)); \n        while((v_l_id_61494 < 1)){\n          int v_tmp_61576 = 0; \n          v__45239 = v_tmp_61576; \n          /* reduce_seq */\n          for (int v_i_61495 = 0; v_i_61495 < v_MWidthC_1; v_i_61495 = (1 + v_i_61495)) {\n            v__45239 = bool_or(v__45239, v__61515[(v_i_61495 + (v_MWidthC_1 * v_l_id_61494))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_61496 = 0; \n            v__61520[v_w_id_61490] = doubleAndOr(v__45239, v__61501, v__61500[v_w_id_61490], v__61502); \n          }\n          /* end map_seq */\n          v_l_id_61494 = atomic_inc(&(v_work_idx_4294)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_61490 = atomic_inc(v_work_idx_4301); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__61497",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61498",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61499",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__61500",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__61501",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__61502",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__61504",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__61520",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__61515",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}