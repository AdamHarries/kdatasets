{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__49454, const global int* restrict v__49455, const global int* restrict v__49456, const global int* restrict v__49457, int v__49458, int v__49459, global int* v__49476, global int* v__49466, local int* v__49471, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__49462; \n  int v__49467; \n  int v__45239; \n  /* Private Memory */\n  int v__49464_0;\n  \n  for (int v_wg_id_49446 = get_group_id(0); v_wg_id_49446 < v_MHeight_2; v_wg_id_49446 = (v_wg_id_49446 + get_num_groups(0))) {\n    for (int v_l_id_49447 = get_local_id(0); v_l_id_49447 < v_MWidthC_1; v_l_id_49447 = (v_l_id_49447 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_49448 = 0; v_i_49448 < 16; v_i_49448 = (1 + v_i_49448)) {\n        int v_tmp_49541 = 0; \n        v__49462 = v_tmp_49541; \n        int v_index_49542 = v__49454[(v_l_id_49447 + (16 * v_MWidthC_1 * v_wg_id_49446) + (v_MWidthC_1 * v_i_49448))]; \n        if (v_index_49542 < 0) {\n          v__49464_0 = v__49462; \n        } else {\n          if (v_index_49542 >= v_VLength_3) {\n            v__49464_0 = v__49462; \n          } else {\n            v__49464_0 = v__49456[v_index_49542]; \n          }\n        }\n        v__49466[(15 + (16 * v_MWidthC_1 * v_wg_id_49446) + (-1 * v_i_49448) + (16 * v_l_id_49447))] = bool_and(v__49464_0, v__49455[(v_l_id_49447 + (16 * v_MWidthC_1 * v_wg_id_49446) + (v_MWidthC_1 * v_i_49448))]); \n      }\n      /* end map_seq */\n      int v_tmp_49543 = 0; \n      v__49467 = v_tmp_49543; \n      /* reduce_seq */\n      for (int v_i_49449 = 0; v_i_49449 < 16; v_i_49449 = (1 + v_i_49449)) {\n        v__49467 = bool_or(v__49467, v__49466[(v_i_49449 + (16 * v_MWidthC_1 * v_wg_id_49446) + (16 * v_l_id_49447))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_49450 = 0; \n        v__49471[v_l_id_49447] = id(v__49467); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_49451 = get_local_id(0); \n      int v_tmp_49546 = 0; \n      v__45239 = v_tmp_49546; \n      /* reduce_seq */\n      for (int v_i_49452 = 0; v_i_49452 < v_MWidthC_1; v_i_49452 = (1 + v_i_49452)) {\n        v__45239 = bool_or(v__45239, v__49471[(v_i_49452 + (v_MWidthC_1 * v_l_id_49451))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_49453 = 0; \n        v__49476[v_wg_id_49446] = doubleAndOr(v__45239, v__49458, v__49457[v_wg_id_49446], v__49459); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__49454",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49455",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__49456",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__49457",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__49458",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__49459",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__49466",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__49476",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__49471",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}