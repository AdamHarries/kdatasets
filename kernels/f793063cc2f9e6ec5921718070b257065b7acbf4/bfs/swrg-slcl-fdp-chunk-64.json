{
  "name" : "swrg-slcl-fdp-chunk-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__57529, const global int* restrict v__57530, const global int* restrict v__57531, const global int* restrict v__57532, int v__57533, int v__57534, global int* v__57547, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__57537; \n  int v__57539; \n  /* Private Memory */\n  int v__57541_0;\n  \n  int v__57543_0;\n  \n  for (int v_wg_id_57525 = get_group_id(0); v_wg_id_57525 < ((v_MHeight_2)/(64)); v_wg_id_57525 = (v_wg_id_57525 + get_num_groups(0))) {\n    for (int v_l_id_57526 = get_local_id(0); v_l_id_57526 < 64; v_l_id_57526 = (v_l_id_57526 + get_local_size(0))) {\n      int v_tmp_57589 = 0; \n      v__57537 = v_tmp_57589; \n      /* reduce_seq */\n      for (int v_i_57527 = 0; v_i_57527 < v_MWidthC_1; v_i_57527 = (1 + v_i_57527)) {\n        int v_tmp_57590 = 0; \n        v__57539 = v_tmp_57590; \n        int v_index_57591 = v__57529[(v_i_57527 + (64 * v_MWidthC_1 * v_wg_id_57525) + (v_MWidthC_1 * v_l_id_57526))]; \n        if (v_index_57591 < 0) {\n          v__57541_0 = v__57539; \n        } else {\n          if (v_index_57591 >= v_VLength_3) {\n            v__57541_0 = v__57539; \n          } else {\n            v__57541_0 = v__57531[v_index_57591]; \n          }\n        }\n        v__57543_0 = bool_and(v__57541_0, v__57530[(v_i_57527 + (64 * v_MWidthC_1 * v_wg_id_57525) + (v_MWidthC_1 * v_l_id_57526))]); \n        v__57537 = bool_or(v__57543_0, v__57537); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_57528 = 0; \n        v__57547[(v_l_id_57526 + (64 * v_wg_id_57525))] = doubleAndOr(v__57537, v__57533, v__57532[(v_l_id_57526 + (64 * v_wg_id_57525))], v__57534); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "64",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__57529",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57530",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57531",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__57532",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57533",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57534",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__57547",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}