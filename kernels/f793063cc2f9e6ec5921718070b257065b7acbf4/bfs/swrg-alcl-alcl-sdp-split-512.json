{
  "name" : "swrg-alcl-alcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__71987, const global int* restrict v__71988, const global int* restrict v__71989, const global int* restrict v__71990, int v__71991, int v__71992, global int* v__72009, global int* v__71999, local int* v__72004, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__71995; \n  int v__72000; \n  int v__45239; \n  /* Private Memory */\n  int v__71997_0;\n  \n  for (int v_wg_id_71979 = get_group_id(0); v_wg_id_71979 < v_MHeight_2; v_wg_id_71979 = (v_wg_id_71979 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_5239; \n      v_work_idx_5239 = 0; \n      int v_l_id_71980 = atomic_inc(&(v_work_idx_5239)); \n      while((v_l_id_71980 < v_MWidthC_1)){\n        /* map_seq */\n        for (int v_i_71981 = 0; v_i_71981 < 512; v_i_71981 = (1 + v_i_71981)) {\n          int v_tmp_72062 = 0; \n          v__71995 = v_tmp_72062; \n          int v_index_72063 = v__71987[(v_l_id_71980 + (512 * v_MWidthC_1 * v_wg_id_71979) + (v_MWidthC_1 * v_i_71981))]; \n          if (v_index_72063 < 0) {\n            v__71997_0 = v__71995; \n          } else {\n            if (v_index_72063 >= v_VLength_3) {\n              v__71997_0 = v__71995; \n            } else {\n              v__71997_0 = v__71989[v_index_72063]; \n            }\n          }\n          v__71999[(511 + (512 * v_MWidthC_1 * v_wg_id_71979) + (-1 * v_i_71981) + (512 * v_l_id_71980))] = bool_and(v__71997_0, v__71988[(v_l_id_71980 + (512 * v_MWidthC_1 * v_wg_id_71979) + (v_MWidthC_1 * v_i_71981))]); \n        }\n        /* end map_seq */\n        int v_tmp_72064 = 0; \n        v__72000 = v_tmp_72064; \n        /* reduce_seq */\n        for (int v_i_71982 = 0; v_i_71982 < 512; v_i_71982 = (1 + v_i_71982)) {\n          v__72000 = bool_or(v__72000, v__71999[(v_i_71982 + (512 * v_MWidthC_1 * v_wg_id_71979) + (512 * v_l_id_71980))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_71983 = 0; \n          v__72004[v_l_id_71980] = id(v__72000); \n        }\n        /* end map_seq */\n        v_l_id_71980 = atomic_inc(&(v_work_idx_5239)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_5233; \n      v_work_idx_5233 = 0; \n      int v_l_id_71984 = atomic_inc(&(v_work_idx_5233)); \n      while((v_l_id_71984 < 1)){\n        int v_tmp_72067 = 0; \n        v__45239 = v_tmp_72067; \n        /* reduce_seq */\n        for (int v_i_71985 = 0; v_i_71985 < v_MWidthC_1; v_i_71985 = (1 + v_i_71985)) {\n          v__45239 = bool_or(v__45239, v__72004[(v_i_71985 + (v_MWidthC_1 * v_l_id_71984))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_71986 = 0; \n          v__72009[v_wg_id_71979] = doubleAndOr(v__45239, v__71991, v__71990[v_wg_id_71979], v__71992); \n        }\n        /* end map_seq */\n        v_l_id_71984 = atomic_inc(&(v_work_idx_5233)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__71987",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__71988",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__71989",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__71990",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__71991",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__71992",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__71999",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__72009",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__72004",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}