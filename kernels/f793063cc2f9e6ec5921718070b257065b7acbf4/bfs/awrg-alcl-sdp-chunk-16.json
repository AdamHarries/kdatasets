{
  "name" : "awrg-alcl-sdp-chunk-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__52203, const global int* restrict v__52204, const global int* restrict v__52205, const global int* restrict v__52206, int v__52207, int v__52208, global int* v__52222, global int* v__52216, global int* v__52210, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__52212; \n  int v__52217; \n  /* Private Memory */\n  int v__52214_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3444 = v__52210; \n    local int v_w_id_52198; \n    if (get_local_id(0) == 0) {\n      v_w_id_52198 = atomic_inc(v_work_idx_3444); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_52198 < ((v_MHeight_2)/(16)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3442; \n        v_work_idx_3442 = 0; \n        int v_l_id_52199 = atomic_inc(&(v_work_idx_3442)); \n        while((v_l_id_52199 < 16)){\n          /* map_seq */\n          for (int v_i_52200 = 0; v_i_52200 < v_MWidthC_1; v_i_52200 = (1 + v_i_52200)) {\n            int v_tmp_52261 = 0; \n            v__52212 = v_tmp_52261; \n            int v_index_52262 = v__52203[(v_i_52200 + (16 * v_MWidthC_1 * v_w_id_52198) + (v_MWidthC_1 * v_l_id_52199))]; \n            if (v_index_52262 < 0) {\n              v__52214_0 = v__52212; \n            } else {\n              if (v_index_52262 >= v_VLength_3) {\n                v__52214_0 = v__52212; \n              } else {\n                v__52214_0 = v__52205[v_index_52262]; \n              }\n            }\n            v__52216[(-1 + v_MWidthC_1 + (16 * v_MWidthC_1 * v_w_id_52198) + (-1 * v_i_52200) + (v_MWidthC_1 * v_l_id_52199))] = bool_and(v__52214_0, v__52204[(v_i_52200 + (16 * v_MWidthC_1 * v_w_id_52198) + (v_MWidthC_1 * v_l_id_52199))]); \n          }\n          /* end map_seq */\n          int v_tmp_52263 = 0; \n          v__52217 = v_tmp_52263; \n          /* reduce_seq */\n          for (int v_i_52201 = 0; v_i_52201 < v_MWidthC_1; v_i_52201 = (1 + v_i_52201)) {\n            v__52217 = bool_or(v__52217, v__52216[(v_i_52201 + (16 * v_MWidthC_1 * v_w_id_52198) + (v_MWidthC_1 * v_l_id_52199))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52202 = 0; \n            v__52222[(v_l_id_52199 + (16 * v_w_id_52198))] = doubleAndOr(v__52217, v__52207, v__52206[(v_l_id_52199 + (16 * v_w_id_52198))], v__52208); \n          }\n          /* end map_seq */\n          v_l_id_52199 = atomic_inc(&(v_work_idx_3442)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_52198 = atomic_inc(v_work_idx_3444); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "16",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__52203",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52204",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52205",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__52206",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__52207",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__52208",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__52216",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52210",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__52222",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}