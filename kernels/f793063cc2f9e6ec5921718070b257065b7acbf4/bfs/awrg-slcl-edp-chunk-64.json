{
  "name" : "awrg-slcl-edp-chunk-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__59724, const global int* restrict v__59725, const global int* restrict v__59726, const global int* restrict v__59727, int v__59728, int v__59729, global int* v__59745, global int* v__59731, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__59732; \n  int v__59735; \n  /* Private Memory */\n  int v__59737_0;\n  \n  int v__59739_0;\n  \n  int v__59743_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4127 = v__59731; \n    local int v_w_id_59720; \n    if (get_local_id(0) == 0) {\n      v_w_id_59720 = atomic_inc(v_work_idx_4127); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_59720 < ((v_MHeight_2)/(64)))){\n      for (int v_l_id_59721 = get_local_id(0); v_l_id_59721 < 64; v_l_id_59721 = (v_l_id_59721 + get_local_size(0))) {\n        int v_tmp_59792 = 0; \n        v__59732 = v_tmp_59792; \n        /* reduce_while_seq */\n        for (int v_i_59722 = 0; v_i_59722 < v_MWidthC_1; v_i_59722 = (1 + v_i_59722)) {\n          v__59743_0 = check(v__59732, v__59724[(v_i_59722 + (64 * v_MWidthC_1 * v_w_id_59720) + (v_MWidthC_1 * v_l_id_59721))]); \n          if (v__59743_0) {\n          } else {\n            break;\n          }\n          int v_tmp_59793 = 0; \n          v__59735 = v_tmp_59793; \n          int v_index_59794 = v__59724[(v_i_59722 + (64 * v_MWidthC_1 * v_w_id_59720) + (v_MWidthC_1 * v_l_id_59721))]; \n          if (v_index_59794 < 0) {\n            v__59737_0 = v__59735; \n          } else {\n            if (v_index_59794 >= v_VLength_3) {\n              v__59737_0 = v__59735; \n            } else {\n              v__59737_0 = v__59726[v_index_59794]; \n            }\n          }\n          v__59739_0 = bool_and(v__59737_0, v__59725[(v_i_59722 + (64 * v_MWidthC_1 * v_w_id_59720) + (v_MWidthC_1 * v_l_id_59721))]); \n          v__59732 = bool_or(v__59739_0, v__59732); \n        }\n        /* end reduce_while_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_59723 = 0; \n          v__59745[(v_l_id_59721 + (64 * v_w_id_59720))] = doubleAndOr(v__59732, v__59728, v__59727[(v_l_id_59721 + (64 * v_w_id_59720))], v__59729); \n        }\n        /* end map_seq */\n      }\n      if (get_local_id(0) == 0) {\n        v_w_id_59720 = atomic_inc(v_work_idx_4127); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "slcl",
    "chunkSize" : "64",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__59724",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__59725",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__59726",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__59727",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__59728",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__59729",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__59731",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__59745",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}