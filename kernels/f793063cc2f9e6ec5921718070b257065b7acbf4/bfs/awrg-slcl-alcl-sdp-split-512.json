{
  "name" : "awrg-slcl-alcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__73057, const global int* restrict v__73058, const global int* restrict v__73059, const global int* restrict v__73060, int v__73061, int v__73062, global int* v__73080, global int* v__73070, global int* v__73064, local int* v__73075, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__73066; \n  int v__73071; \n  int v__45239; \n  /* Private Memory */\n  int v__73068_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_5336 = v__73064; \n    local int v_w_id_73049; \n    if (get_local_id(0) == 0) {\n      v_w_id_73049 = atomic_inc(v_work_idx_5336); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_73049 < v_MHeight_2)){\n      for (int v_l_id_73050 = get_local_id(0); v_l_id_73050 < v_MWidthC_1; v_l_id_73050 = (v_l_id_73050 + get_local_size(0))) {\n        /* map_seq */\n        for (int v_i_73051 = 0; v_i_73051 < 512; v_i_73051 = (1 + v_i_73051)) {\n          int v_tmp_73139 = 0; \n          v__73066 = v_tmp_73139; \n          int v_index_73140 = v__73057[(v_l_id_73050 + (512 * v_MWidthC_1 * v_w_id_73049) + (v_MWidthC_1 * v_i_73051))]; \n          if (v_index_73140 < 0) {\n            v__73068_0 = v__73066; \n          } else {\n            if (v_index_73140 >= v_VLength_3) {\n              v__73068_0 = v__73066; \n            } else {\n              v__73068_0 = v__73059[v_index_73140]; \n            }\n          }\n          v__73070[(511 + (512 * v_MWidthC_1 * v_w_id_73049) + (-1 * v_i_73051) + (512 * v_l_id_73050))] = bool_and(v__73068_0, v__73058[(v_l_id_73050 + (512 * v_MWidthC_1 * v_w_id_73049) + (v_MWidthC_1 * v_i_73051))]); \n        }\n        /* end map_seq */\n        int v_tmp_73141 = 0; \n        v__73071 = v_tmp_73141; \n        /* reduce_seq */\n        for (int v_i_73052 = 0; v_i_73052 < 512; v_i_73052 = (1 + v_i_73052)) {\n          v__73071 = bool_or(v__73071, v__73070[(v_i_73052 + (512 * v_MWidthC_1 * v_w_id_73049) + (512 * v_l_id_73050))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_73053 = 0; \n          v__73075[v_l_id_73050] = id(v__73071); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_5329; \n        v_work_idx_5329 = 0; \n        int v_l_id_73054 = atomic_inc(&(v_work_idx_5329)); \n        while((v_l_id_73054 < 1)){\n          int v_tmp_73144 = 0; \n          v__45239 = v_tmp_73144; \n          /* reduce_seq */\n          for (int v_i_73055 = 0; v_i_73055 < v_MWidthC_1; v_i_73055 = (1 + v_i_73055)) {\n            v__45239 = bool_or(v__45239, v__73075[(v_i_73055 + (v_MWidthC_1 * v_l_id_73054))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_73056 = 0; \n            v__73080[v_w_id_73049] = doubleAndOr(v__45239, v__73061, v__73060[v_w_id_73049], v__73062); \n          }\n          /* end map_seq */\n          v_l_id_73054 = atomic_inc(&(v_work_idx_5329)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_73049 = atomic_inc(v_work_idx_5336); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__73057",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__73058",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__73059",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__73060",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__73061",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__73062",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__73070",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__73064",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__73080",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__73075",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}