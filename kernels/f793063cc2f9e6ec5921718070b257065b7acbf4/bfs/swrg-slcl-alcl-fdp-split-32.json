{
  "name" : "swrg-slcl-alcl-fdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__54112, const global int* restrict v__54113, const global int* restrict v__54114, const global int* restrict v__54115, int v__54116, int v__54117, global int* v__54134, local int* v__54129, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__54120; \n  int v__54122; \n  int v__45239; \n  /* Private Memory */\n  int v__54124_0;\n  \n  int v__54126_0;\n  \n  for (int v_wg_id_54105 = get_group_id(0); v_wg_id_54105 < v_MHeight_2; v_wg_id_54105 = (v_wg_id_54105 + get_num_groups(0))) {\n    for (int v_l_id_54106 = get_local_id(0); v_l_id_54106 < v_MWidthC_1; v_l_id_54106 = (v_l_id_54106 + get_local_size(0))) {\n      int v_tmp_54195 = 0; \n      v__54120 = v_tmp_54195; \n      /* reduce_seq */\n      for (int v_i_54107 = 0; v_i_54107 < 32; v_i_54107 = (1 + v_i_54107)) {\n        int v_tmp_54196 = 0; \n        v__54122 = v_tmp_54196; \n        int v_index_54197 = v__54112[(v_l_id_54106 + (32 * v_MWidthC_1 * v_wg_id_54105) + (v_MWidthC_1 * v_i_54107))]; \n        if (v_index_54197 < 0) {\n          v__54124_0 = v__54122; \n        } else {\n          if (v_index_54197 >= v_VLength_3) {\n            v__54124_0 = v__54122; \n          } else {\n            v__54124_0 = v__54114[v_index_54197]; \n          }\n        }\n        v__54126_0 = bool_and(v__54124_0, v__54113[(v_l_id_54106 + (32 * v_MWidthC_1 * v_wg_id_54105) + (v_MWidthC_1 * v_i_54107))]); \n        v__54120 = bool_or(v__54126_0, v__54120); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_54108 = 0; \n        v__54129[v_l_id_54106] = id(v__54120); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_3614; \n      v_work_idx_3614 = 0; \n      int v_l_id_54109 = atomic_inc(&(v_work_idx_3614)); \n      while((v_l_id_54109 < 1)){\n        int v_tmp_54200 = 0; \n        v__45239 = v_tmp_54200; \n        /* reduce_seq */\n        for (int v_i_54110 = 0; v_i_54110 < v_MWidthC_1; v_i_54110 = (1 + v_i_54110)) {\n          v__45239 = bool_or(v__45239, v__54129[(v_i_54110 + (v_MWidthC_1 * v_l_id_54109))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_54111 = 0; \n          v__54134[v_wg_id_54105] = doubleAndOr(v__45239, v__54116, v__54115[v_wg_id_54105], v__54117); \n        }\n        /* end map_seq */\n        v_l_id_54109 = atomic_inc(&(v_work_idx_3614)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__54112",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54113",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54114",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__54115",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__54116",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__54117",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__54134",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__54129",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}