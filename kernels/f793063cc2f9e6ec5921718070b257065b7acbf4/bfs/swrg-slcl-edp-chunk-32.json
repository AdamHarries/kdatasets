{
  "name" : "swrg-slcl-edp-chunk-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__53370, const global int* restrict v__53371, const global int* restrict v__53372, const global int* restrict v__53373, int v__53374, int v__53375, global int* v__53390, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53377; \n  int v__53380; \n  /* Private Memory */\n  int v__53382_0;\n  \n  int v__53384_0;\n  \n  int v__53388_0;\n  \n  for (int v_wg_id_53366 = get_group_id(0); v_wg_id_53366 < ((v_MHeight_2)/(32)); v_wg_id_53366 = (v_wg_id_53366 + get_num_groups(0))) {\n    for (int v_l_id_53367 = get_local_id(0); v_l_id_53367 < 32; v_l_id_53367 = (v_l_id_53367 + get_local_size(0))) {\n      int v_tmp_53438 = 0; \n      v__53377 = v_tmp_53438; \n      /* reduce_while_seq */\n      for (int v_i_53368 = 0; v_i_53368 < v_MWidthC_1; v_i_53368 = (1 + v_i_53368)) {\n        v__53388_0 = check(v__53377, v__53370[(v_i_53368 + (32 * v_MWidthC_1 * v_wg_id_53366) + (v_MWidthC_1 * v_l_id_53367))]); \n        if (v__53388_0) {\n        } else {\n          break;\n        }\n        int v_tmp_53439 = 0; \n        v__53380 = v_tmp_53439; \n        int v_index_53440 = v__53370[(v_i_53368 + (32 * v_MWidthC_1 * v_wg_id_53366) + (v_MWidthC_1 * v_l_id_53367))]; \n        if (v_index_53440 < 0) {\n          v__53382_0 = v__53380; \n        } else {\n          if (v_index_53440 >= v_VLength_3) {\n            v__53382_0 = v__53380; \n          } else {\n            v__53382_0 = v__53372[v_index_53440]; \n          }\n        }\n        v__53384_0 = bool_and(v__53382_0, v__53371[(v_i_53368 + (32 * v_MWidthC_1 * v_wg_id_53366) + (v_MWidthC_1 * v_l_id_53367))]); \n        v__53377 = bool_or(v__53384_0, v__53377); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53369 = 0; \n        v__53390[(v_l_id_53367 + (32 * v_wg_id_53366))] = doubleAndOr(v__53377, v__53374, v__53373[(v_l_id_53367 + (32 * v_wg_id_53366))], v__53375); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__53370",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53371",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53372",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53373",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__53374",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53375",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__53390",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}