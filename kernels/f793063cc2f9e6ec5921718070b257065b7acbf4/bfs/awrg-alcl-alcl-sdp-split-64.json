{
  "name" : "awrg-alcl-alcl-sdp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__61404, const global int* restrict v__61405, const global int* restrict v__61406, const global int* restrict v__61407, int v__61408, int v__61409, global int* v__61427, global int* v__61417, global int* v__61411, local int* v__61422, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__61413; \n  int v__61418; \n  int v__45239; \n  /* Private Memory */\n  int v__61415_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4290 = v__61411; \n    local int v_w_id_61396; \n    if (get_local_id(0) == 0) {\n      v_w_id_61396 = atomic_inc(v_work_idx_4290); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_61396 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4288; \n        v_work_idx_4288 = 0; \n        int v_l_id_61397 = atomic_inc(&(v_work_idx_4288)); \n        while((v_l_id_61397 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_61398 = 0; v_i_61398 < 64; v_i_61398 = (1 + v_i_61398)) {\n            int v_tmp_61478 = 0; \n            v__61413 = v_tmp_61478; \n            int v_index_61479 = v__61404[(v_l_id_61397 + (64 * v_MWidthC_1 * v_w_id_61396) + (v_MWidthC_1 * v_i_61398))]; \n            if (v_index_61479 < 0) {\n              v__61415_0 = v__61413; \n            } else {\n              if (v_index_61479 >= v_VLength_3) {\n                v__61415_0 = v__61413; \n              } else {\n                v__61415_0 = v__61406[v_index_61479]; \n              }\n            }\n            v__61417[(63 + (64 * v_MWidthC_1 * v_w_id_61396) + (-1 * v_i_61398) + (64 * v_l_id_61397))] = bool_and(v__61415_0, v__61405[(v_l_id_61397 + (64 * v_MWidthC_1 * v_w_id_61396) + (v_MWidthC_1 * v_i_61398))]); \n          }\n          /* end map_seq */\n          int v_tmp_61480 = 0; \n          v__61418 = v_tmp_61480; \n          /* reduce_seq */\n          for (int v_i_61399 = 0; v_i_61399 < 64; v_i_61399 = (1 + v_i_61399)) {\n            v__61418 = bool_or(v__61418, v__61417[(v_i_61399 + (64 * v_MWidthC_1 * v_w_id_61396) + (64 * v_l_id_61397))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_61400 = 0; \n            v__61422[v_l_id_61397] = id(v__61418); \n          }\n          /* end map_seq */\n          v_l_id_61397 = atomic_inc(&(v_work_idx_4288)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4282; \n        v_work_idx_4282 = 0; \n        int v_l_id_61401 = atomic_inc(&(v_work_idx_4282)); \n        while((v_l_id_61401 < 1)){\n          int v_tmp_61483 = 0; \n          v__45239 = v_tmp_61483; \n          /* reduce_seq */\n          for (int v_i_61402 = 0; v_i_61402 < v_MWidthC_1; v_i_61402 = (1 + v_i_61402)) {\n            v__45239 = bool_or(v__45239, v__61422[(v_i_61402 + (v_MWidthC_1 * v_l_id_61401))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_61403 = 0; \n            v__61427[v_w_id_61396] = doubleAndOr(v__45239, v__61408, v__61407[v_w_id_61396], v__61409); \n          }\n          /* end map_seq */\n          v_l_id_61401 = atomic_inc(&(v_work_idx_4282)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_61396 = atomic_inc(v_work_idx_4290); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__61404",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61405",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61406",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__61407",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__61408",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__61409",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__61417",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61411",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__61427",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__61422",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}