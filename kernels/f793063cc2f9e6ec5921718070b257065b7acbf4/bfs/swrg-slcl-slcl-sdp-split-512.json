{
  "name" : "swrg-slcl-slcl-sdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__70614, const global int* restrict v__70615, const global int* restrict v__70616, const global int* restrict v__70617, int v__70618, int v__70619, global int* v__70636, global int* v__70626, local int* v__70631, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__70622; \n  int v__70627; \n  int v__45239; \n  /* Private Memory */\n  int v__70624_0;\n  \n  for (int v_wg_id_70606 = get_group_id(0); v_wg_id_70606 < v_MHeight_2; v_wg_id_70606 = (v_wg_id_70606 + get_num_groups(0))) {\n    for (int v_l_id_70607 = get_local_id(0); v_l_id_70607 < v_MWidthC_1; v_l_id_70607 = (v_l_id_70607 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_70608 = 0; v_i_70608 < 512; v_i_70608 = (1 + v_i_70608)) {\n        int v_tmp_70701 = 0; \n        v__70622 = v_tmp_70701; \n        int v_index_70702 = v__70614[(v_l_id_70607 + (512 * v_MWidthC_1 * v_wg_id_70606) + (v_MWidthC_1 * v_i_70608))]; \n        if (v_index_70702 < 0) {\n          v__70624_0 = v__70622; \n        } else {\n          if (v_index_70702 >= v_VLength_3) {\n            v__70624_0 = v__70622; \n          } else {\n            v__70624_0 = v__70616[v_index_70702]; \n          }\n        }\n        v__70626[(511 + (512 * v_MWidthC_1 * v_wg_id_70606) + (-1 * v_i_70608) + (512 * v_l_id_70607))] = bool_and(v__70624_0, v__70615[(v_l_id_70607 + (512 * v_MWidthC_1 * v_wg_id_70606) + (v_MWidthC_1 * v_i_70608))]); \n      }\n      /* end map_seq */\n      int v_tmp_70703 = 0; \n      v__70627 = v_tmp_70703; \n      /* reduce_seq */\n      for (int v_i_70609 = 0; v_i_70609 < 512; v_i_70609 = (1 + v_i_70609)) {\n        v__70627 = bool_or(v__70627, v__70626[(v_i_70609 + (512 * v_MWidthC_1 * v_wg_id_70606) + (512 * v_l_id_70607))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_70610 = 0; \n        v__70631[v_l_id_70607] = id(v__70627); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_70611 = get_local_id(0); \n      int v_tmp_70706 = 0; \n      v__45239 = v_tmp_70706; \n      /* reduce_seq */\n      for (int v_i_70612 = 0; v_i_70612 < v_MWidthC_1; v_i_70612 = (1 + v_i_70612)) {\n        v__45239 = bool_or(v__45239, v__70631[(v_i_70612 + (v_MWidthC_1 * v_l_id_70611))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_70613 = 0; \n        v__70636[v_wg_id_70606] = doubleAndOr(v__45239, v__70618, v__70617[v_wg_id_70606], v__70619); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__70614",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__70615",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__70616",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__70617",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__70618",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__70619",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__70626",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__70636",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__70631",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}