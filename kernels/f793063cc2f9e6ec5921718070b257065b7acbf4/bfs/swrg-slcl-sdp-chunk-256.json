{
  "name" : "swrg-slcl-sdp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__65918, const global int* restrict v__65919, const global int* restrict v__65920, const global int* restrict v__65921, int v__65922, int v__65923, global int* v__65936, global int* v__65930, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__65926; \n  int v__65931; \n  /* Private Memory */\n  int v__65928_0;\n  \n  for (int v_wg_id_65913 = get_group_id(0); v_wg_id_65913 < ((v_MHeight_2)/(256)); v_wg_id_65913 = (v_wg_id_65913 + get_num_groups(0))) {\n    for (int v_l_id_65914 = get_local_id(0); v_l_id_65914 < 256; v_l_id_65914 = (v_l_id_65914 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_65915 = 0; v_i_65915 < v_MWidthC_1; v_i_65915 = (1 + v_i_65915)) {\n        int v_tmp_65980 = 0; \n        v__65926 = v_tmp_65980; \n        int v_index_65981 = v__65918[(v_i_65915 + (256 * v_MWidthC_1 * v_wg_id_65913) + (v_MWidthC_1 * v_l_id_65914))]; \n        if (v_index_65981 < 0) {\n          v__65928_0 = v__65926; \n        } else {\n          if (v_index_65981 >= v_VLength_3) {\n            v__65928_0 = v__65926; \n          } else {\n            v__65928_0 = v__65920[v_index_65981]; \n          }\n        }\n        v__65930[(-1 + v_MWidthC_1 + (256 * v_MWidthC_1 * v_wg_id_65913) + (-1 * v_i_65915) + (v_MWidthC_1 * v_l_id_65914))] = bool_and(v__65928_0, v__65919[(v_i_65915 + (256 * v_MWidthC_1 * v_wg_id_65913) + (v_MWidthC_1 * v_l_id_65914))]); \n      }\n      /* end map_seq */\n      int v_tmp_65982 = 0; \n      v__65931 = v_tmp_65982; \n      /* reduce_seq */\n      for (int v_i_65916 = 0; v_i_65916 < v_MWidthC_1; v_i_65916 = (1 + v_i_65916)) {\n        v__65931 = bool_or(v__65931, v__65930[(v_i_65916 + (256 * v_MWidthC_1 * v_wg_id_65913) + (v_MWidthC_1 * v_l_id_65914))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_65917 = 0; \n        v__65936[(v_l_id_65914 + (256 * v_wg_id_65913))] = doubleAndOr(v__65931, v__65922, v__65921[(v_l_id_65914 + (256 * v_wg_id_65913))], v__65923); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__65918",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__65919",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__65920",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__65921",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__65922",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__65923",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__65930",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__65936",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}