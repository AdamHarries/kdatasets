{
  "name" : "awrg-alcl-pmdp",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__44630, const global int* restrict v__44631, const global int* restrict v__44632, const global int* restrict v__44633, int v__44634, int v__44635, global int* v__44649, global int* v__44643, global int* v__44637, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__44639; \n  int v__44644; \n  /* Private Memory */\n  int v__44641_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_2772 = v__44637; \n    local int v_w_id_44626; \n    if (get_local_id(0) == 0) {\n      v_w_id_44626 = atomic_inc(v_work_idx_2772); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_44626 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_l_id_2770; \n        v_l_id_2770 = 0; \n        int v_l_id_44627 = atomic_inc(&(v_l_id_2770)); \n        while((v_l_id_44627 < v_MWidthC_1)){\n          int v_tmp_44679 = 0; \n          v__44639 = v_tmp_44679; \n          int v_index_44680 = v__44630[(v_l_id_44627 + (v_MWidthC_1 * v_w_id_44626))]; \n          if (v_index_44680 < 0) {\n            v__44641_0 = v__44639; \n          } else {\n            if (v_index_44680 >= v_VLength_3) {\n              v__44641_0 = v__44639; \n            } else {\n              v__44641_0 = v__44632[v_index_44680]; \n            }\n          }\n          v__44643[(-1 + v_MWidthC_1 + (-1 * v_l_id_44627) + (v_MWidthC_1 * v_w_id_44626))] = bool_and(v__44641_0, v__44631[(v_l_id_44627 + (v_MWidthC_1 * v_w_id_44626))]); \n          v_l_id_44627 = atomic_inc(&(v_l_id_2770)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      int v_tmp_44681 = 0; \n      v__44644 = v_tmp_44681; \n      /* reduce_seq */\n      for (int v_i_44628 = 0; v_i_44628 < v_MWidthC_1; v_i_44628 = (1 + v_i_44628)) {\n        v__44644 = bool_or(v__44644, v__44643[(v_i_44628 + (v_MWidthC_1 * v_w_id_44626))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_44629 = 0; \n        v__44649[v_w_id_44626] = doubleAndOr(v__44644, v__44634, v__44633[v_w_id_44626], v__44635); \n      }\n      /* end map_seq */\n      if (get_local_id(0) == 0) {\n        v_w_id_44626 = atomic_inc(v_work_idx_2772); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "dotProduct" : "parallel"
  },
  "inputArgs" : [ {
    "variable" : "v__44630",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__44631",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__44632",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__44633",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__44634",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__44635",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__44643",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__44637",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__44649",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}