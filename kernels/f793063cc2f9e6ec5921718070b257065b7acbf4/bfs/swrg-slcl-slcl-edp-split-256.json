{
  "name" : "swrg-slcl-slcl-edp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__66594, const global int* restrict v__66595, const global int* restrict v__66596, const global int* restrict v__66597, int v__66598, int v__66599, global int* v__66618, local int* v__66613, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__66602; \n  int v__66604; \n  int v__45239; \n  /* Private Memory */\n  int v__66606_0;\n  \n  int v__66608_0;\n  \n  int v__66612_0;\n  \n  for (int v_wg_id_66587 = get_group_id(0); v_wg_id_66587 < v_MHeight_2; v_wg_id_66587 = (v_wg_id_66587 + get_num_groups(0))) {\n    for (int v_l_id_66588 = get_local_id(0); v_l_id_66588 < v_MWidthC_1; v_l_id_66588 = (v_l_id_66588 + get_local_size(0))) {\n      int v_tmp_66686 = 0; \n      v__66602 = v_tmp_66686; \n      /* reduce_while_seq */\n      for (int v_i_66589 = 0; v_i_66589 < 256; v_i_66589 = (1 + v_i_66589)) {\n        v__66612_0 = check(v__66602, v__66594[(v_l_id_66588 + (256 * v_MWidthC_1 * v_wg_id_66587) + (v_MWidthC_1 * v_i_66589))]); \n        if (v__66612_0) {\n        } else {\n          break;\n        }\n        int v_tmp_66687 = 0; \n        v__66604 = v_tmp_66687; \n        int v_index_66688 = v__66594[(v_l_id_66588 + (256 * v_MWidthC_1 * v_wg_id_66587) + (v_MWidthC_1 * v_i_66589))]; \n        if (v_index_66688 < 0) {\n          v__66606_0 = v__66604; \n        } else {\n          if (v_index_66688 >= v_VLength_3) {\n            v__66606_0 = v__66604; \n          } else {\n            v__66606_0 = v__66596[v_index_66688]; \n          }\n        }\n        v__66608_0 = bool_and(v__66606_0, v__66595[(v_l_id_66588 + (256 * v_MWidthC_1 * v_wg_id_66587) + (v_MWidthC_1 * v_i_66589))]); \n        v__66602 = bool_or(v__66608_0, v__66602); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_66590 = 0; \n        v__66613[v_l_id_66588] = id(v__66602); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_66591 = get_local_id(0); \n      int v_tmp_66691 = 0; \n      v__45239 = v_tmp_66691; \n      /* reduce_seq */\n      for (int v_i_66592 = 0; v_i_66592 < v_MWidthC_1; v_i_66592 = (1 + v_i_66592)) {\n        v__45239 = bool_or(v__45239, v__66613[(v_i_66592 + (v_MWidthC_1 * v_l_id_66591))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_66593 = 0; \n        v__66618[v_wg_id_66587] = doubleAndOr(v__45239, v__66598, v__66597[v_wg_id_66587], v__66599); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__66594",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__66595",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__66596",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__66597",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__66598",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__66599",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__66618",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__66613",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}