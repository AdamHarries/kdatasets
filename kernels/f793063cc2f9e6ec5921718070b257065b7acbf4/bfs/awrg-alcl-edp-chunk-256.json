{
  "name" : "awrg-alcl-edp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__69271, const global int* restrict v__69272, const global int* restrict v__69273, const global int* restrict v__69274, int v__69275, int v__69276, global int* v__69292, global int* v__69278, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__69279; \n  int v__69282; \n  /* Private Memory */\n  int v__69284_0;\n  \n  int v__69286_0;\n  \n  int v__69290_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4994 = v__69278; \n    local int v_w_id_69267; \n    if (get_local_id(0) == 0) {\n      v_w_id_69267 = atomic_inc(v_work_idx_4994); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_69267 < ((v_MHeight_2)/(256)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4992; \n        v_work_idx_4992 = 0; \n        int v_l_id_69268 = atomic_inc(&(v_work_idx_4992)); \n        while((v_l_id_69268 < 256)){\n          int v_tmp_69335 = 0; \n          v__69279 = v_tmp_69335; \n          /* reduce_while_seq */\n          for (int v_i_69269 = 0; v_i_69269 < v_MWidthC_1; v_i_69269 = (1 + v_i_69269)) {\n            v__69290_0 = check(v__69279, v__69271[(v_i_69269 + (256 * v_MWidthC_1 * v_w_id_69267) + (v_MWidthC_1 * v_l_id_69268))]); \n            if (v__69290_0) {\n            } else {\n              break;\n            }\n            int v_tmp_69336 = 0; \n            v__69282 = v_tmp_69336; \n            int v_index_69337 = v__69271[(v_i_69269 + (256 * v_MWidthC_1 * v_w_id_69267) + (v_MWidthC_1 * v_l_id_69268))]; \n            if (v_index_69337 < 0) {\n              v__69284_0 = v__69282; \n            } else {\n              if (v_index_69337 >= v_VLength_3) {\n                v__69284_0 = v__69282; \n              } else {\n                v__69284_0 = v__69273[v_index_69337]; \n              }\n            }\n            v__69286_0 = bool_and(v__69284_0, v__69272[(v_i_69269 + (256 * v_MWidthC_1 * v_w_id_69267) + (v_MWidthC_1 * v_l_id_69268))]); \n            v__69279 = bool_or(v__69286_0, v__69279); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_69270 = 0; \n            v__69292[(v_l_id_69268 + (256 * v_w_id_69267))] = doubleAndOr(v__69279, v__69275, v__69274[(v_l_id_69268 + (256 * v_w_id_69267))], v__69276); \n          }\n          /* end map_seq */\n          v_l_id_69268 = atomic_inc(&(v_work_idx_4992)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_69267 = atomic_inc(v_work_idx_4994); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "256",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__69271",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__69272",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__69273",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__69274",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__69275",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__69276",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__69278",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__69292",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}