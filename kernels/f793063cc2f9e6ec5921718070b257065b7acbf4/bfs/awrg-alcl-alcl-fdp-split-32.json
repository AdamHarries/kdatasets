{
  "name" : "awrg-alcl-alcl-fdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__57265, const global int* restrict v__57266, const global int* restrict v__57267, const global int* restrict v__57268, int v__57269, int v__57270, global int* v__57288, global int* v__57272, local int* v__57283, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__57274; \n  int v__57276; \n  int v__45239; \n  /* Private Memory */\n  int v__57278_0;\n  \n  int v__57280_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3917 = v__57272; \n    local int v_w_id_57258; \n    if (get_local_id(0) == 0) {\n      v_w_id_57258 = atomic_inc(v_work_idx_3917); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_57258 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3915; \n        v_work_idx_3915 = 0; \n        int v_l_id_57259 = atomic_inc(&(v_work_idx_3915)); \n        while((v_l_id_57259 < v_MWidthC_1)){\n          int v_tmp_57339 = 0; \n          v__57274 = v_tmp_57339; \n          /* reduce_seq */\n          for (int v_i_57260 = 0; v_i_57260 < 32; v_i_57260 = (1 + v_i_57260)) {\n            int v_tmp_57340 = 0; \n            v__57276 = v_tmp_57340; \n            int v_index_57341 = v__57265[(v_l_id_57259 + (32 * v_MWidthC_1 * v_w_id_57258) + (v_MWidthC_1 * v_i_57260))]; \n            if (v_index_57341 < 0) {\n              v__57278_0 = v__57276; \n            } else {\n              if (v_index_57341 >= v_VLength_3) {\n                v__57278_0 = v__57276; \n              } else {\n                v__57278_0 = v__57267[v_index_57341]; \n              }\n            }\n            v__57280_0 = bool_and(v__57278_0, v__57266[(v_l_id_57259 + (32 * v_MWidthC_1 * v_w_id_57258) + (v_MWidthC_1 * v_i_57260))]); \n            v__57274 = bool_or(v__57280_0, v__57274); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_57261 = 0; \n            v__57283[v_l_id_57259] = id(v__57274); \n          }\n          /* end map_seq */\n          v_l_id_57259 = atomic_inc(&(v_work_idx_3915)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3910; \n        v_work_idx_3910 = 0; \n        int v_l_id_57262 = atomic_inc(&(v_work_idx_3910)); \n        while((v_l_id_57262 < 1)){\n          int v_tmp_57344 = 0; \n          v__45239 = v_tmp_57344; \n          /* reduce_seq */\n          for (int v_i_57263 = 0; v_i_57263 < v_MWidthC_1; v_i_57263 = (1 + v_i_57263)) {\n            v__45239 = bool_or(v__45239, v__57283[(v_i_57263 + (v_MWidthC_1 * v_l_id_57262))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_57264 = 0; \n            v__57288[v_w_id_57258] = doubleAndOr(v__45239, v__57269, v__57268[v_w_id_57258], v__57270); \n          }\n          /* end map_seq */\n          v_l_id_57262 = atomic_inc(&(v_work_idx_3910)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_57258 = atomic_inc(v_work_idx_3917); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__57265",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57266",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57267",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__57268",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57269",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57270",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__57272",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__57288",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__57283",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}