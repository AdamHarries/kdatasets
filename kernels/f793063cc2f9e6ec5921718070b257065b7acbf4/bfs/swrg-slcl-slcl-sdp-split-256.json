{
  "name" : "swrg-slcl-slcl-sdp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__66382, const global int* restrict v__66383, const global int* restrict v__66384, const global int* restrict v__66385, int v__66386, int v__66387, global int* v__66404, global int* v__66394, local int* v__66399, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__66390; \n  int v__66395; \n  int v__45239; \n  /* Private Memory */\n  int v__66392_0;\n  \n  for (int v_wg_id_66374 = get_group_id(0); v_wg_id_66374 < v_MHeight_2; v_wg_id_66374 = (v_wg_id_66374 + get_num_groups(0))) {\n    for (int v_l_id_66375 = get_local_id(0); v_l_id_66375 < v_MWidthC_1; v_l_id_66375 = (v_l_id_66375 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_66376 = 0; v_i_66376 < 256; v_i_66376 = (1 + v_i_66376)) {\n        int v_tmp_66469 = 0; \n        v__66390 = v_tmp_66469; \n        int v_index_66470 = v__66382[(v_l_id_66375 + (256 * v_MWidthC_1 * v_wg_id_66374) + (v_MWidthC_1 * v_i_66376))]; \n        if (v_index_66470 < 0) {\n          v__66392_0 = v__66390; \n        } else {\n          if (v_index_66470 >= v_VLength_3) {\n            v__66392_0 = v__66390; \n          } else {\n            v__66392_0 = v__66384[v_index_66470]; \n          }\n        }\n        v__66394[(255 + (256 * v_MWidthC_1 * v_wg_id_66374) + (-1 * v_i_66376) + (256 * v_l_id_66375))] = bool_and(v__66392_0, v__66383[(v_l_id_66375 + (256 * v_MWidthC_1 * v_wg_id_66374) + (v_MWidthC_1 * v_i_66376))]); \n      }\n      /* end map_seq */\n      int v_tmp_66471 = 0; \n      v__66395 = v_tmp_66471; \n      /* reduce_seq */\n      for (int v_i_66377 = 0; v_i_66377 < 256; v_i_66377 = (1 + v_i_66377)) {\n        v__66395 = bool_or(v__66395, v__66394[(v_i_66377 + (256 * v_MWidthC_1 * v_wg_id_66374) + (256 * v_l_id_66375))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_66378 = 0; \n        v__66399[v_l_id_66375] = id(v__66395); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_66379 = get_local_id(0); \n      int v_tmp_66474 = 0; \n      v__45239 = v_tmp_66474; \n      /* reduce_seq */\n      for (int v_i_66380 = 0; v_i_66380 < v_MWidthC_1; v_i_66380 = (1 + v_i_66380)) {\n        v__45239 = bool_or(v__45239, v__66399[(v_i_66380 + (v_MWidthC_1 * v_l_id_66379))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_66381 = 0; \n        v__66404[v_wg_id_66374] = doubleAndOr(v__45239, v__66386, v__66385[v_wg_id_66374], v__66387); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__66382",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__66383",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__66384",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__66385",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__66386",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__66387",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__66394",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__66404",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__66399",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}