{
  "name" : "awrg-alcl-alcl-fdp-split-512",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__74193, const global int* restrict v__74194, const global int* restrict v__74195, const global int* restrict v__74196, int v__74197, int v__74198, global int* v__74216, global int* v__74200, local int* v__74211, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__74202; \n  int v__74204; \n  int v__45239; \n  /* Private Memory */\n  int v__74206_0;\n  \n  int v__74208_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_5453 = v__74200; \n    local int v_w_id_74186; \n    if (get_local_id(0) == 0) {\n      v_w_id_74186 = atomic_inc(v_work_idx_5453); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_74186 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_5451; \n        v_work_idx_5451 = 0; \n        int v_l_id_74187 = atomic_inc(&(v_work_idx_5451)); \n        while((v_l_id_74187 < v_MWidthC_1)){\n          int v_tmp_74267 = 0; \n          v__74202 = v_tmp_74267; \n          /* reduce_seq */\n          for (int v_i_74188 = 0; v_i_74188 < 512; v_i_74188 = (1 + v_i_74188)) {\n            int v_tmp_74268 = 0; \n            v__74204 = v_tmp_74268; \n            int v_index_74269 = v__74193[(v_l_id_74187 + (512 * v_MWidthC_1 * v_w_id_74186) + (v_MWidthC_1 * v_i_74188))]; \n            if (v_index_74269 < 0) {\n              v__74206_0 = v__74204; \n            } else {\n              if (v_index_74269 >= v_VLength_3) {\n                v__74206_0 = v__74204; \n              } else {\n                v__74206_0 = v__74195[v_index_74269]; \n              }\n            }\n            v__74208_0 = bool_and(v__74206_0, v__74194[(v_l_id_74187 + (512 * v_MWidthC_1 * v_w_id_74186) + (v_MWidthC_1 * v_i_74188))]); \n            v__74202 = bool_or(v__74208_0, v__74202); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_74189 = 0; \n            v__74211[v_l_id_74187] = id(v__74202); \n          }\n          /* end map_seq */\n          v_l_id_74187 = atomic_inc(&(v_work_idx_5451)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_5446; \n        v_work_idx_5446 = 0; \n        int v_l_id_74190 = atomic_inc(&(v_work_idx_5446)); \n        while((v_l_id_74190 < 1)){\n          int v_tmp_74272 = 0; \n          v__45239 = v_tmp_74272; \n          /* reduce_seq */\n          for (int v_i_74191 = 0; v_i_74191 < v_MWidthC_1; v_i_74191 = (1 + v_i_74191)) {\n            v__45239 = bool_or(v__45239, v__74211[(v_i_74191 + (v_MWidthC_1 * v_l_id_74190))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_74192 = 0; \n            v__74216[v_w_id_74186] = doubleAndOr(v__45239, v__74197, v__74196[v_w_id_74186], v__74198); \n          }\n          /* end map_seq */\n          v_l_id_74190 = atomic_inc(&(v_work_idx_5446)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_74186 = atomic_inc(v_work_idx_5453); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__74193",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74194",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__74195",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__74196",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__74197",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__74198",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__74200",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__74216",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__74211",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}