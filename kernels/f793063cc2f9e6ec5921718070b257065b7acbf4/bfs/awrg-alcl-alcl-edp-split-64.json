{
  "name" : "awrg-alcl-alcl-edp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__61590, const global int* restrict v__61591, const global int* restrict v__61592, const global int* restrict v__61593, int v__61594, int v__61595, global int* v__61615, global int* v__61597, local int* v__61610, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__61599; \n  int v__61601; \n  int v__45239; \n  /* Private Memory */\n  int v__61603_0;\n  \n  int v__61605_0;\n  \n  int v__61609_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_4312 = v__61597; \n    local int v_w_id_61583; \n    if (get_local_id(0) == 0) {\n      v_w_id_61583 = atomic_inc(v_work_idx_4312); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_61583 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_4310; \n        v_work_idx_4310 = 0; \n        int v_l_id_61584 = atomic_inc(&(v_work_idx_4310)); \n        while((v_l_id_61584 < v_MWidthC_1)){\n          int v_tmp_61669 = 0; \n          v__61599 = v_tmp_61669; \n          /* reduce_while_seq */\n          for (int v_i_61585 = 0; v_i_61585 < 64; v_i_61585 = (1 + v_i_61585)) {\n            v__61609_0 = check(v__61599, v__61590[(v_l_id_61584 + (64 * v_MWidthC_1 * v_w_id_61583) + (v_MWidthC_1 * v_i_61585))]); \n            if (v__61609_0) {\n            } else {\n              break;\n            }\n            int v_tmp_61670 = 0; \n            v__61601 = v_tmp_61670; \n            int v_index_61671 = v__61590[(v_l_id_61584 + (64 * v_MWidthC_1 * v_w_id_61583) + (v_MWidthC_1 * v_i_61585))]; \n            if (v_index_61671 < 0) {\n              v__61603_0 = v__61601; \n            } else {\n              if (v_index_61671 >= v_VLength_3) {\n                v__61603_0 = v__61601; \n              } else {\n                v__61603_0 = v__61592[v_index_61671]; \n              }\n            }\n            v__61605_0 = bool_and(v__61603_0, v__61591[(v_l_id_61584 + (64 * v_MWidthC_1 * v_w_id_61583) + (v_MWidthC_1 * v_i_61585))]); \n            v__61599 = bool_or(v__61605_0, v__61599); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_61586 = 0; \n            v__61610[v_l_id_61584] = id(v__61599); \n          }\n          /* end map_seq */\n          v_l_id_61584 = atomic_inc(&(v_work_idx_4310)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_4305; \n        v_work_idx_4305 = 0; \n        int v_l_id_61587 = atomic_inc(&(v_work_idx_4305)); \n        while((v_l_id_61587 < 1)){\n          int v_tmp_61674 = 0; \n          v__45239 = v_tmp_61674; \n          /* reduce_seq */\n          for (int v_i_61588 = 0; v_i_61588 < v_MWidthC_1; v_i_61588 = (1 + v_i_61588)) {\n            v__45239 = bool_or(v__45239, v__61610[(v_i_61588 + (v_MWidthC_1 * v_l_id_61587))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_61589 = 0; \n            v__61615[v_w_id_61583] = doubleAndOr(v__45239, v__61594, v__61593[v_w_id_61583], v__61595); \n          }\n          /* end map_seq */\n          v_l_id_61587 = atomic_inc(&(v_work_idx_4305)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_61583 = atomic_inc(v_work_idx_4312); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__61590",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61591",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__61592",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__61593",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__61594",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__61595",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__61597",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__61615",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__61610",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}