{
  "name" : "swrg-alcl-slcl-sdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__54759, const global int* restrict v__54760, const global int* restrict v__54761, const global int* restrict v__54762, int v__54763, int v__54764, global int* v__54781, global int* v__54771, local int* v__54776, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__54767; \n  int v__54772; \n  int v__45239; \n  /* Private Memory */\n  int v__54769_0;\n  \n  for (int v_wg_id_54751 = get_group_id(0); v_wg_id_54751 < v_MHeight_2; v_wg_id_54751 = (v_wg_id_54751 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_3674; \n      v_work_idx_3674 = 0; \n      int v_l_id_54752 = atomic_inc(&(v_work_idx_3674)); \n      while((v_l_id_54752 < v_MWidthC_1)){\n        /* map_seq */\n        for (int v_i_54753 = 0; v_i_54753 < 32; v_i_54753 = (1 + v_i_54753)) {\n          int v_tmp_54838 = 0; \n          v__54767 = v_tmp_54838; \n          int v_index_54839 = v__54759[(v_l_id_54752 + (32 * v_MWidthC_1 * v_wg_id_54751) + (v_MWidthC_1 * v_i_54753))]; \n          if (v_index_54839 < 0) {\n            v__54769_0 = v__54767; \n          } else {\n            if (v_index_54839 >= v_VLength_3) {\n              v__54769_0 = v__54767; \n            } else {\n              v__54769_0 = v__54761[v_index_54839]; \n            }\n          }\n          v__54771[(31 + (32 * v_MWidthC_1 * v_wg_id_54751) + (-1 * v_i_54753) + (32 * v_l_id_54752))] = bool_and(v__54769_0, v__54760[(v_l_id_54752 + (32 * v_MWidthC_1 * v_wg_id_54751) + (v_MWidthC_1 * v_i_54753))]); \n        }\n        /* end map_seq */\n        int v_tmp_54840 = 0; \n        v__54772 = v_tmp_54840; \n        /* reduce_seq */\n        for (int v_i_54754 = 0; v_i_54754 < 32; v_i_54754 = (1 + v_i_54754)) {\n          v__54772 = bool_or(v__54772, v__54771[(v_i_54754 + (32 * v_MWidthC_1 * v_wg_id_54751) + (32 * v_l_id_54752))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_54755 = 0; \n          v__54776[v_l_id_54752] = id(v__54772); \n        }\n        /* end map_seq */\n        v_l_id_54752 = atomic_inc(&(v_work_idx_3674)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_54756 = get_local_id(0); \n      int v_tmp_54843 = 0; \n      v__45239 = v_tmp_54843; \n      /* reduce_seq */\n      for (int v_i_54757 = 0; v_i_54757 < v_MWidthC_1; v_i_54757 = (1 + v_i_54757)) {\n        v__45239 = bool_or(v__45239, v__54776[(v_i_54757 + (v_MWidthC_1 * v_l_id_54756))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_54758 = 0; \n        v__54781[v_wg_id_54751] = doubleAndOr(v__45239, v__54763, v__54762[v_wg_id_54751], v__54764); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__54759",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54760",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__54761",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__54762",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__54763",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__54764",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__54771",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__54781",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__54776",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}