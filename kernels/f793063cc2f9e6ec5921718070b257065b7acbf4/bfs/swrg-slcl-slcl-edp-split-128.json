{
  "name" : "swrg-slcl-slcl-edp-split-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__62362, const global int* restrict v__62363, const global int* restrict v__62364, const global int* restrict v__62365, int v__62366, int v__62367, global int* v__62386, local int* v__62381, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__62370; \n  int v__62372; \n  int v__45239; \n  /* Private Memory */\n  int v__62374_0;\n  \n  int v__62376_0;\n  \n  int v__62380_0;\n  \n  for (int v_wg_id_62355 = get_group_id(0); v_wg_id_62355 < v_MHeight_2; v_wg_id_62355 = (v_wg_id_62355 + get_num_groups(0))) {\n    for (int v_l_id_62356 = get_local_id(0); v_l_id_62356 < v_MWidthC_1; v_l_id_62356 = (v_l_id_62356 + get_local_size(0))) {\n      int v_tmp_62454 = 0; \n      v__62370 = v_tmp_62454; \n      /* reduce_while_seq */\n      for (int v_i_62357 = 0; v_i_62357 < 128; v_i_62357 = (1 + v_i_62357)) {\n        v__62380_0 = check(v__62370, v__62362[(v_l_id_62356 + (128 * v_MWidthC_1 * v_wg_id_62355) + (v_MWidthC_1 * v_i_62357))]); \n        if (v__62380_0) {\n        } else {\n          break;\n        }\n        int v_tmp_62455 = 0; \n        v__62372 = v_tmp_62455; \n        int v_index_62456 = v__62362[(v_l_id_62356 + (128 * v_MWidthC_1 * v_wg_id_62355) + (v_MWidthC_1 * v_i_62357))]; \n        if (v_index_62456 < 0) {\n          v__62374_0 = v__62372; \n        } else {\n          if (v_index_62456 >= v_VLength_3) {\n            v__62374_0 = v__62372; \n          } else {\n            v__62374_0 = v__62364[v_index_62456]; \n          }\n        }\n        v__62376_0 = bool_and(v__62374_0, v__62363[(v_l_id_62356 + (128 * v_MWidthC_1 * v_wg_id_62355) + (v_MWidthC_1 * v_i_62357))]); \n        v__62370 = bool_or(v__62376_0, v__62370); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_62358 = 0; \n        v__62381[v_l_id_62356] = id(v__62370); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_62359 = get_local_id(0); \n      int v_tmp_62459 = 0; \n      v__45239 = v_tmp_62459; \n      /* reduce_seq */\n      for (int v_i_62360 = 0; v_i_62360 < v_MWidthC_1; v_i_62360 = (1 + v_i_62360)) {\n        v__45239 = bool_or(v__45239, v__62381[(v_i_62360 + (v_MWidthC_1 * v_l_id_62359))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_62361 = 0; \n        v__62386[v_wg_id_62355] = doubleAndOr(v__45239, v__62366, v__62365[v_wg_id_62355], v__62367); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "128",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__62362",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__62363",
    "addressSpace" : "global",
    "size" : "(512*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__62364",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__62365",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__62366",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__62367",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__62386",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__62381",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}