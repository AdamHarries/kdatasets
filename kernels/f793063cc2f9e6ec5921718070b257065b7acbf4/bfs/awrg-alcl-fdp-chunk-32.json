{
  "name" : "awrg-alcl-fdp-chunk-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__56506, const global int* restrict v__56507, const global int* restrict v__56508, const global int* restrict v__56509, int v__56510, int v__56511, global int* v__56525, global int* v__56513, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__56515; \n  int v__56517; \n  /* Private Memory */\n  int v__56519_0;\n  \n  int v__56521_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3835 = v__56513; \n    local int v_w_id_56502; \n    if (get_local_id(0) == 0) {\n      v_w_id_56502 = atomic_inc(v_work_idx_3835); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_56502 < ((v_MHeight_2)/(32)))){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3833; \n        v_work_idx_3833 = 0; \n        int v_l_id_56503 = atomic_inc(&(v_work_idx_3833)); \n        while((v_l_id_56503 < 32)){\n          int v_tmp_56562 = 0; \n          v__56515 = v_tmp_56562; \n          /* reduce_seq */\n          for (int v_i_56504 = 0; v_i_56504 < v_MWidthC_1; v_i_56504 = (1 + v_i_56504)) {\n            int v_tmp_56563 = 0; \n            v__56517 = v_tmp_56563; \n            int v_index_56564 = v__56506[(v_i_56504 + (32 * v_MWidthC_1 * v_w_id_56502) + (v_MWidthC_1 * v_l_id_56503))]; \n            if (v_index_56564 < 0) {\n              v__56519_0 = v__56517; \n            } else {\n              if (v_index_56564 >= v_VLength_3) {\n                v__56519_0 = v__56517; \n              } else {\n                v__56519_0 = v__56508[v_index_56564]; \n              }\n            }\n            v__56521_0 = bool_and(v__56519_0, v__56507[(v_i_56504 + (32 * v_MWidthC_1 * v_w_id_56502) + (v_MWidthC_1 * v_l_id_56503))]); \n            v__56515 = bool_or(v__56521_0, v__56515); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_56505 = 0; \n            v__56525[(v_l_id_56503 + (32 * v_w_id_56502))] = doubleAndOr(v__56515, v__56510, v__56509[(v_l_id_56503 + (32 * v_w_id_56502))], v__56511); \n          }\n          /* end map_seq */\n          v_l_id_56503 = atomic_inc(&(v_work_idx_3833)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_56502 = atomic_inc(v_work_idx_3835); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "alcl",
    "chunkSize" : "32",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__56506",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56507",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__56508",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__56509",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__56510",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__56511",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__56513",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__56525",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}