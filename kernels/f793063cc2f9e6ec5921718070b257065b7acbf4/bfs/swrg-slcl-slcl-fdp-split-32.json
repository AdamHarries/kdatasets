{
  "name" : "swrg-slcl-slcl-fdp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__53792, const global int* restrict v__53793, const global int* restrict v__53794, const global int* restrict v__53795, int v__53796, int v__53797, global int* v__53814, local int* v__53809, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__53800; \n  int v__53802; \n  int v__45239; \n  /* Private Memory */\n  int v__53804_0;\n  \n  int v__53806_0;\n  \n  for (int v_wg_id_53785 = get_group_id(0); v_wg_id_53785 < v_MHeight_2; v_wg_id_53785 = (v_wg_id_53785 + get_num_groups(0))) {\n    for (int v_l_id_53786 = get_local_id(0); v_l_id_53786 < v_MWidthC_1; v_l_id_53786 = (v_l_id_53786 + get_local_size(0))) {\n      int v_tmp_53879 = 0; \n      v__53800 = v_tmp_53879; \n      /* reduce_seq */\n      for (int v_i_53787 = 0; v_i_53787 < 32; v_i_53787 = (1 + v_i_53787)) {\n        int v_tmp_53880 = 0; \n        v__53802 = v_tmp_53880; \n        int v_index_53881 = v__53792[(v_l_id_53786 + (32 * v_MWidthC_1 * v_wg_id_53785) + (v_MWidthC_1 * v_i_53787))]; \n        if (v_index_53881 < 0) {\n          v__53804_0 = v__53802; \n        } else {\n          if (v_index_53881 >= v_VLength_3) {\n            v__53804_0 = v__53802; \n          } else {\n            v__53804_0 = v__53794[v_index_53881]; \n          }\n        }\n        v__53806_0 = bool_and(v__53804_0, v__53793[(v_l_id_53786 + (32 * v_MWidthC_1 * v_wg_id_53785) + (v_MWidthC_1 * v_i_53787))]); \n        v__53800 = bool_or(v__53806_0, v__53800); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53788 = 0; \n        v__53809[v_l_id_53786] = id(v__53800); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_53789 = get_local_id(0); \n      int v_tmp_53884 = 0; \n      v__45239 = v_tmp_53884; \n      /* reduce_seq */\n      for (int v_i_53790 = 0; v_i_53790 < v_MWidthC_1; v_i_53790 = (1 + v_i_53790)) {\n        v__45239 = bool_or(v__45239, v__53809[(v_i_53790 + (v_MWidthC_1 * v_l_id_53789))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_53791 = 0; \n        v__53814[v_wg_id_53785] = doubleAndOr(v__45239, v__53796, v__53795[v_wg_id_53785], v__53797); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__53792",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53793",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__53794",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__53795",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__53796",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__53797",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__53814",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__53809",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}