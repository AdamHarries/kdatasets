{
  "name" : "swrg-slcl-alcl-fdp-split-64",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__58344, const global int* restrict v__58345, const global int* restrict v__58346, const global int* restrict v__58347, int v__58348, int v__58349, global int* v__58366, local int* v__58361, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__58352; \n  int v__58354; \n  int v__45239; \n  /* Private Memory */\n  int v__58356_0;\n  \n  int v__58358_0;\n  \n  for (int v_wg_id_58337 = get_group_id(0); v_wg_id_58337 < v_MHeight_2; v_wg_id_58337 = (v_wg_id_58337 + get_num_groups(0))) {\n    for (int v_l_id_58338 = get_local_id(0); v_l_id_58338 < v_MWidthC_1; v_l_id_58338 = (v_l_id_58338 + get_local_size(0))) {\n      int v_tmp_58427 = 0; \n      v__58352 = v_tmp_58427; \n      /* reduce_seq */\n      for (int v_i_58339 = 0; v_i_58339 < 64; v_i_58339 = (1 + v_i_58339)) {\n        int v_tmp_58428 = 0; \n        v__58354 = v_tmp_58428; \n        int v_index_58429 = v__58344[(v_l_id_58338 + (64 * v_MWidthC_1 * v_wg_id_58337) + (v_MWidthC_1 * v_i_58339))]; \n        if (v_index_58429 < 0) {\n          v__58356_0 = v__58354; \n        } else {\n          if (v_index_58429 >= v_VLength_3) {\n            v__58356_0 = v__58354; \n          } else {\n            v__58356_0 = v__58346[v_index_58429]; \n          }\n        }\n        v__58358_0 = bool_and(v__58356_0, v__58345[(v_l_id_58338 + (64 * v_MWidthC_1 * v_wg_id_58337) + (v_MWidthC_1 * v_i_58339))]); \n        v__58352 = bool_or(v__58358_0, v__58352); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_58340 = 0; \n        v__58361[v_l_id_58338] = id(v__58352); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_3998; \n      v_work_idx_3998 = 0; \n      int v_l_id_58341 = atomic_inc(&(v_work_idx_3998)); \n      while((v_l_id_58341 < 1)){\n        int v_tmp_58432 = 0; \n        v__45239 = v_tmp_58432; \n        /* reduce_seq */\n        for (int v_i_58342 = 0; v_i_58342 < v_MWidthC_1; v_i_58342 = (1 + v_i_58342)) {\n          v__45239 = bool_or(v__45239, v__58361[(v_i_58342 + (v_MWidthC_1 * v_l_id_58341))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_58343 = 0; \n          v__58366[v_wg_id_58337] = doubleAndOr(v__45239, v__58348, v__58347[v_wg_id_58337], v__58349); \n        }\n        /* end map_seq */\n        v_l_id_58341 = atomic_inc(&(v_work_idx_3998)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "64",
    "innerMap2" : "alcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__58344",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__58345",
    "addressSpace" : "global",
    "size" : "(256*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__58346",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__58347",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__58348",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__58349",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__58366",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__58361",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}