{
  "name" : "awrg-alcl-slcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint id(int x){\n  { return x; }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__57069, const global int* restrict v__57070, const global int* restrict v__57071, const global int* restrict v__57072, int v__57073, int v__57074, global int* v__57094, global int* v__57076, local int* v__57089, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__57078; \n  int v__57080; \n  int v__45239; \n  /* Private Memory */\n  int v__57082_0;\n  \n  int v__57084_0;\n  \n  int v__57088_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3894 = v__57076; \n    local int v_w_id_57062; \n    if (get_local_id(0) == 0) {\n      v_w_id_57062 = atomic_inc(v_work_idx_3894); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_57062 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3892; \n        v_work_idx_3892 = 0; \n        int v_l_id_57063 = atomic_inc(&(v_work_idx_3892)); \n        while((v_l_id_57063 < v_MWidthC_1)){\n          int v_tmp_57152 = 0; \n          v__57078 = v_tmp_57152; \n          /* reduce_while_seq */\n          for (int v_i_57064 = 0; v_i_57064 < 32; v_i_57064 = (1 + v_i_57064)) {\n            v__57088_0 = check(v__57078, v__57069[(v_l_id_57063 + (32 * v_MWidthC_1 * v_w_id_57062) + (v_MWidthC_1 * v_i_57064))]); \n            if (v__57088_0) {\n            } else {\n              break;\n            }\n            int v_tmp_57153 = 0; \n            v__57080 = v_tmp_57153; \n            int v_index_57154 = v__57069[(v_l_id_57063 + (32 * v_MWidthC_1 * v_w_id_57062) + (v_MWidthC_1 * v_i_57064))]; \n            if (v_index_57154 < 0) {\n              v__57082_0 = v__57080; \n            } else {\n              if (v_index_57154 >= v_VLength_3) {\n                v__57082_0 = v__57080; \n              } else {\n                v__57082_0 = v__57071[v_index_57154]; \n              }\n            }\n            v__57084_0 = bool_and(v__57082_0, v__57070[(v_l_id_57063 + (32 * v_MWidthC_1 * v_w_id_57062) + (v_MWidthC_1 * v_i_57064))]); \n            v__57078 = bool_or(v__57084_0, v__57078); \n          }\n          /* end reduce_while_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_57065 = 0; \n            v__57089[v_l_id_57063] = id(v__57078); \n          }\n          /* end map_seq */\n          v_l_id_57063 = atomic_inc(&(v_work_idx_3892)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* iteration count is exactly 1 or less, no loop emitted */\n      if (get_local_id(0) < 1) {\n        int v_l_id_57066 = get_local_id(0); \n        int v_tmp_57157 = 0; \n        v__45239 = v_tmp_57157; \n        /* reduce_seq */\n        for (int v_i_57067 = 0; v_i_57067 < v_MWidthC_1; v_i_57067 = (1 + v_i_57067)) {\n          v__45239 = bool_or(v__45239, v__57089[(v_i_57067 + (v_MWidthC_1 * v_l_id_57066))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_57068 = 0; \n          v__57094[v_w_id_57062] = doubleAndOr(v__45239, v__57073, v__57072[v_w_id_57062], v__57074); \n        }\n        /* end map_seq */\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_57062 = atomic_inc(v_work_idx_3894); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "slcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__57069",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57070",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__57071",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__57072",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__57073",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__57074",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__57076",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__57094",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__57089",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}