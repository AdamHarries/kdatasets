{
  "name" : "awrg-alcl-alcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__52940, const global int* restrict v__52941, const global int* restrict v__52942, const global int* restrict v__52943, int v__52944, int v__52945, global int* v__52963, global int* v__52953, global int* v__52947, local int* v__52958, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__52949; \n  int v__52954; \n  int v__45239; \n  /* Private Memory */\n  int v__52951_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3522 = v__52947; \n    local int v_w_id_52932; \n    if (get_local_id(0) == 0) {\n      v_w_id_52932 = atomic_inc(v_work_idx_3522); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_52932 < v_MHeight_2)){\n      /* atomic_local_map */\n      {\n        local int v_work_idx_3520; \n        v_work_idx_3520 = 0; \n        int v_l_id_52933 = atomic_inc(&(v_work_idx_3520)); \n        while((v_l_id_52933 < v_MWidthC_1)){\n          /* map_seq */\n          for (int v_i_52934 = 0; v_i_52934 < 16; v_i_52934 = (1 + v_i_52934)) {\n            int v_tmp_53014 = 0; \n            v__52949 = v_tmp_53014; \n            int v_index_53015 = v__52940[(v_l_id_52933 + (16 * v_MWidthC_1 * v_w_id_52932) + (v_MWidthC_1 * v_i_52934))]; \n            if (v_index_53015 < 0) {\n              v__52951_0 = v__52949; \n            } else {\n              if (v_index_53015 >= v_VLength_3) {\n                v__52951_0 = v__52949; \n              } else {\n                v__52951_0 = v__52942[v_index_53015]; \n              }\n            }\n            v__52953[(15 + (16 * v_MWidthC_1 * v_w_id_52932) + (-1 * v_i_52934) + (16 * v_l_id_52933))] = bool_and(v__52951_0, v__52941[(v_l_id_52933 + (16 * v_MWidthC_1 * v_w_id_52932) + (v_MWidthC_1 * v_i_52934))]); \n          }\n          /* end map_seq */\n          int v_tmp_53016 = 0; \n          v__52954 = v_tmp_53016; \n          /* reduce_seq */\n          for (int v_i_52935 = 0; v_i_52935 < 16; v_i_52935 = (1 + v_i_52935)) {\n            v__52954 = bool_or(v__52954, v__52953[(v_i_52935 + (16 * v_MWidthC_1 * v_w_id_52932) + (16 * v_l_id_52933))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52936 = 0; \n            v__52958[v_l_id_52933] = id(v__52954); \n          }\n          /* end map_seq */\n          v_l_id_52933 = atomic_inc(&(v_work_idx_3520)); \n        }\n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n      /* atomic_local_map */\n      {\n        local int v_work_idx_3514; \n        v_work_idx_3514 = 0; \n        int v_l_id_52937 = atomic_inc(&(v_work_idx_3514)); \n        while((v_l_id_52937 < 1)){\n          int v_tmp_53019 = 0; \n          v__45239 = v_tmp_53019; \n          /* reduce_seq */\n          for (int v_i_52938 = 0; v_i_52938 < v_MWidthC_1; v_i_52938 = (1 + v_i_52938)) {\n            v__45239 = bool_or(v__45239, v__52958[(v_i_52938 + (v_MWidthC_1 * v_l_id_52937))]); \n          }\n          /* end reduce_seq */\n          /* map_seq */\n          /* iteration count is exactly 1, no loop emitted */\n          {\n            int v_i_52939 = 0; \n            v__52963[v_w_id_52932] = doubleAndOr(v__45239, v__52944, v__52943[v_w_id_52932], v__52945); \n          }\n          /* end map_seq */\n          v_l_id_52937 = atomic_inc(&(v_work_idx_3514)); \n        }\n      }\n      barrier(CLK_GLOBAL_MEM_FENCE);\n      \n      if (get_local_id(0) == 0) {\n        v_w_id_52932 = atomic_inc(v_work_idx_3522); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "awrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__52940",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52941",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52942",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__52943",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__52944",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__52945",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__52953",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__52947",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__52963",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__52958",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}