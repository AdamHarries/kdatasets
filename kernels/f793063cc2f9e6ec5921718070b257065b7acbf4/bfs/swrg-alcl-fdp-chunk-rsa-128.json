{
  "name" : "swrg-alcl-fdp-chunk-rsa-128",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nint id(int x){\n  { return x; }\n}\nkernel void KERNEL(const global int* restrict v__63074, const global int* restrict v__63075, const global int* restrict v__63076, const global int* restrict v__63077, int v__63078, int v__63079, global int* v__63093, global int* v__63092, int v_MHeight_2, int v_MWidthC_1){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__63081; \n  int v__63084; \n  /* Private Memory */\n  int v__63086_0;\n  \n  int v__63088_0;\n  \n  for (int v_wg_id_63069 = get_group_id(0); v_wg_id_63069 < ((v_MHeight_2)/(128)); v_wg_id_63069 = (v_wg_id_63069 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_4426; \n      v_work_idx_4426 = 0; \n      int v_l_id_63070 = atomic_inc(&(v_work_idx_4426)); \n      while((v_l_id_63070 < 128)){\n        int v_tmp_63126 = 0; \n        v__63081 = v_tmp_63126; \n        /* reduce_seq */\n        int v_stop_63127 = min(v__63074[(1 + (v__63074[(v_l_id_63070 + (128 * v_wg_id_63069))] / 4))], v__63075[(1 + (v__63075[(v_l_id_63070 + (128 * v_wg_id_63069))] / 4))]); \n        for (int v_i_63071 = 0; v_i_63071 < v_stop_63127; v_i_63071 = (1 + v_i_63071)) {\n          int v_tmp_63132 = 0; \n          v__63084 = v_tmp_63132; \n          int v_index_63134 = v__63074[(2 + v_i_63071 + (v__63074[(v_l_id_63070 + (128 * v_wg_id_63069))] / 4))]; \n          if (v_index_63134 < 0) {\n            v__63086_0 = v__63084; \n          } else {\n            if (v_index_63134 >= v_MWidthC_1) {\n              v__63086_0 = v__63084; \n            } else {\n              v__63086_0 = v__63076[v_index_63134]; \n            }\n          }\n          v__63088_0 = bool_and(v__63075[(2 + v_i_63071 + (v__63075[(v_l_id_63070 + (128 * v_wg_id_63069))] / 4))], v__63086_0); \n          v__63081 = bool_or(v__63081, v__63088_0); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_63072 = 0; \n          v__63092[(v_l_id_63070 + (128 * v_wg_id_63069))] = doubleAndOr(v__63081, v__63078, v__63077[(v_l_id_63070 + (128 * v_wg_id_63069))], v__63079); \n        }\n        /* end map_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_63073 = 0; \n          v__63093[(v_l_id_63070 + (128 * v_wg_id_63069))] = id(v__63092[(v_l_id_63070 + (128 * v_wg_id_63069))]); \n        }\n        /* end map_seq */\n        v_l_id_63070 = atomic_inc(&(v_work_idx_4426)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "chunkSize" : "128",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "arrayType" : "ragged",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__63074",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__63075",
    "addressSpace" : "global",
    "size" : "?"
  }, {
    "variable" : "v__63076",
    "addressSpace" : "global",
    "size" : "(4*v_MWidthC_1)"
  }, {
    "variable" : "v__63077",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__63078",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__63079",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__63092",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  } ],
  "outputArg" : {
    "variable" : "v__63093",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC" ],
  "outputSize" : "(4*v_MHeight_2)"
}