{
  "name" : "awrg-slcl-edp-chunk-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__55492, const global int* restrict v__55493, const global int* restrict v__55494, const global int* restrict v__55495, int v__55496, int v__55497, global int* v__55513, global int* v__55499, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__55500; \n  int v__55503; \n  /* Private Memory */\n  int v__55505_0;\n  \n  int v__55507_0;\n  \n  int v__55511_0;\n  \n  /* atomic_workgroup_map */\n  {\n    global int* v_work_idx_3743 = v__55499; \n    local int v_w_id_55488; \n    if (get_local_id(0) == 0) {\n      v_w_id_55488 = atomic_inc(v_work_idx_3743); \n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    while((v_w_id_55488 < ((v_MHeight_2)/(32)))){\n      for (int v_l_id_55489 = get_local_id(0); v_l_id_55489 < 32; v_l_id_55489 = (v_l_id_55489 + get_local_size(0))) {\n        int v_tmp_55560 = 0; \n        v__55500 = v_tmp_55560; \n        /* reduce_while_seq */\n        for (int v_i_55490 = 0; v_i_55490 < v_MWidthC_1; v_i_55490 = (1 + v_i_55490)) {\n          v__55511_0 = check(v__55500, v__55492[(v_i_55490 + (32 * v_MWidthC_1 * v_w_id_55488) + (v_MWidthC_1 * v_l_id_55489))]); \n          if (v__55511_0) {\n          } else {\n            break;\n          }\n          int v_tmp_55561 = 0; \n          v__55503 = v_tmp_55561; \n          int v_index_55562 = v__55492[(v_i_55490 + (32 * v_MWidthC_1 * v_w_id_55488) + (v_MWidthC_1 * v_l_id_55489))]; \n          if (v_index_55562 < 0) {\n            v__55505_0 = v__55503; \n          } else {\n            if (v_index_55562 >= v_VLength_3) {\n              v__55505_0 = v__55503; \n            } else {\n              v__55505_0 = v__55494[v_index_55562]; \n            }\n          }\n          v__55507_0 = bool_and(v__55505_0, v__55493[(v_i_55490 + (32 * v_MWidthC_1 * v_w_id_55488) + (v_MWidthC_1 * v_l_id_55489))]); \n          v__55500 = bool_or(v__55507_0, v__55500); \n        }\n        /* end reduce_while_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_55491 = 0; \n          v__55513[(v_l_id_55489 + (32 * v_w_id_55488))] = doubleAndOr(v__55500, v__55496, v__55495[(v_l_id_55489 + (32 * v_w_id_55488))], v__55497); \n        }\n        /* end map_seq */\n      }\n      if (get_local_id(0) == 0) {\n        v_w_id_55488 = atomic_inc(v_work_idx_3743); \n      }\n      barrier(CLK_LOCAL_MEM_FENCE);\n      \n    }\n  }\n  barrier(CLK_GLOBAL_MEM_FENCE);\n  \n}}\n\n",
  "properties" : {
    "outerMap" : "awrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__55492",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55493",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__55494",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__55495",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__55496",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__55497",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__55499",
    "addressSpace" : "global",
    "size" : "4"
  } ],
  "outputArg" : {
    "variable" : "v__55513",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}