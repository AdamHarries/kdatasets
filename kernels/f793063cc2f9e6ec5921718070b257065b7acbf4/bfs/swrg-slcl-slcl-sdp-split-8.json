{
  "name" : "swrg-slcl-slcl-sdp-split-8",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint bool_and(int a, int b){\n  { if((a != 0) && (b != 0 )){ return 1; }else{ return 0; } }\n}\nint bool_or(int a, int b){\n  { if((a != 0) || (b != 0 )){ return 1; }else{ return 0; } }\n}\nint id(int x){\n  { return x; }\n}\nint doubleAndOr(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n int OrRes1;\n if((dpRes != 0) && (alpha !=0)) {\n   OrRes1 = 1;\n } else {\n   OrRes1 = 0;\n }\n int OrRes2;\n if((rowIdxPair2 != 0) && (beta !=0)) {\n   OrRes2 = 1;\n } else {\n   OrRes2 = 0;\n }\n return (OrRes1 || OrRes2);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__45221, const global int* restrict v__45222, const global int* restrict v__45223, const global int* restrict v__45224, int v__45225, int v__45226, global int* v__45244, global int* v__45233, local int* v__45238, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__45229; \n  int v__45234; \n  int v__45239; \n  /* Private Memory */\n  int v__45231_0;\n  \n  for (int v_wg_id_45213 = get_group_id(0); v_wg_id_45213 < v_MHeight_2; v_wg_id_45213 = (v_wg_id_45213 + get_num_groups(0))) {\n    for (int v_l_id_45214 = get_local_id(0); v_l_id_45214 < v_MWidthC_1; v_l_id_45214 = (v_l_id_45214 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_45215 = 0; v_i_45215 < 8; v_i_45215 = (1 + v_i_45215)) {\n        int v_tmp_45309 = 0; \n        v__45229 = v_tmp_45309; \n        int v_index_45310 = v__45221[(v_l_id_45214 + (8 * v_MWidthC_1 * v_wg_id_45213) + (v_MWidthC_1 * v_i_45215))]; \n        if (v_index_45310 < 0) {\n          v__45231_0 = v__45229; \n        } else {\n          if (v_index_45310 >= v_VLength_3) {\n            v__45231_0 = v__45229; \n          } else {\n            v__45231_0 = v__45223[v_index_45310]; \n          }\n        }\n        v__45233[(7 + (8 * v_MWidthC_1 * v_wg_id_45213) + (-1 * v_i_45215) + (8 * v_l_id_45214))] = bool_and(v__45231_0, v__45222[(v_l_id_45214 + (8 * v_MWidthC_1 * v_wg_id_45213) + (v_MWidthC_1 * v_i_45215))]); \n      }\n      /* end map_seq */\n      int v_tmp_45311 = 0; \n      v__45234 = v_tmp_45311; \n      /* reduce_seq */\n      for (int v_i_45216 = 0; v_i_45216 < 8; v_i_45216 = (1 + v_i_45216)) {\n        v__45234 = bool_or(v__45234, v__45233[(v_i_45216 + (8 * v_MWidthC_1 * v_wg_id_45213) + (8 * v_l_id_45214))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_45217 = 0; \n        v__45238[v_l_id_45214] = id(v__45234); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_45218 = get_local_id(0); \n      int v_tmp_45314 = 0; \n      v__45239 = v_tmp_45314; \n      /* reduce_seq */\n      for (int v_i_45219 = 0; v_i_45219 < v_MWidthC_1; v_i_45219 = (1 + v_i_45219)) {\n        v__45239 = bool_or(v__45239, v__45238[(v_i_45219 + (v_MWidthC_1 * v_l_id_45218))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_45220 = 0; \n        v__45244[v_wg_id_45213] = doubleAndOr(v__45239, v__45225, v__45224[v_wg_id_45213], v__45226); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "8",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__45221",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45222",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__45223",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__45224",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__45225",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__45226",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__45233",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__45244",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__45238",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}