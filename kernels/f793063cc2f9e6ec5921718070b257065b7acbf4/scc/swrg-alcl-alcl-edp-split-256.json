{
  "name" : "swrg-alcl-alcl-edp-split-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint id(int x){\n  { return x; }\n}\nint int_min(int a, int b){\n  \n{\n int result = min(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint doubleMinMax(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n //int min1 = (dpRes < alpha) ? dpRes : alpha;\n //int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n int min1 = min(dpRes, alpha);\n int min2 = min(rowIdxPair2, beta);\n int result = max(min1, min2);\n\n //printf(\"Input: dpres: %d, alpha: %d, yvecelem: %d, beta: %d, min1: %d, min2: %d, result: %d\\n\", dpRes, alpha, rowIdxPair2, beta, min1, min2, result);\n\n return result;\n}\n    \n}\nint int_max(int a, int b){\n  \n{\n int result = max(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nkernel void KERNEL(const global int* restrict v__159222, const global int* restrict v__159223, const global int* restrict v__159224, const global int* restrict v__159225, int v__159226, int v__159227, global int* v__159246, local int* v__159241, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__159230; \n  int v__159232; \n  int v__136518; \n  /* Private Memory */\n  int v__159234_0;\n  \n  int v__159236_0;\n  \n  int v__159240_0;\n  \n  for (int v_wg_id_159215 = get_group_id(0); v_wg_id_159215 < v_MHeight_2; v_wg_id_159215 = (v_wg_id_159215 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_13068; \n      v_work_idx_13068 = 0; \n      int v_l_id_159216 = atomic_inc(&(v_work_idx_13068)); \n      while((v_l_id_159216 < v_MWidthC_1)){\n        int v_tmp_159302 = -2147483648; \n        v__159230 = v_tmp_159302; \n        /* reduce_while_seq */\n        for (int v_i_159217 = 0; v_i_159217 < 256; v_i_159217 = (1 + v_i_159217)) {\n          v__159240_0 = check(v__159230, v__159222[(v_l_id_159216 + (256 * v_MWidthC_1 * v_wg_id_159215) + (v_MWidthC_1 * v_i_159217))]); \n          if (v__159240_0) {\n          } else {\n            break;\n          }\n          int v_tmp_159303 = -2147483648; \n          v__159232 = v_tmp_159303; \n          int v_index_159304 = v__159222[(v_l_id_159216 + (256 * v_MWidthC_1 * v_wg_id_159215) + (v_MWidthC_1 * v_i_159217))]; \n          if (v_index_159304 < 0) {\n            v__159234_0 = v__159232; \n          } else {\n            if (v_index_159304 >= v_VLength_3) {\n              v__159234_0 = v__159232; \n            } else {\n              v__159234_0 = v__159224[v_index_159304]; \n            }\n          }\n          v__159236_0 = int_min(v__159234_0, v__159223[(v_l_id_159216 + (256 * v_MWidthC_1 * v_wg_id_159215) + (v_MWidthC_1 * v_i_159217))]); \n          v__159230 = int_max(v__159236_0, v__159230); \n        }\n        /* end reduce_while_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_159218 = 0; \n          v__159241[v_l_id_159216] = id(v__159230); \n        }\n        /* end map_seq */\n        v_l_id_159216 = atomic_inc(&(v_work_idx_13068)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_13063; \n      v_work_idx_13063 = 0; \n      int v_l_id_159219 = atomic_inc(&(v_work_idx_13063)); \n      while((v_l_id_159219 < 1)){\n        int v_tmp_159307 = -2147483648; \n        v__136518 = v_tmp_159307; \n        /* reduce_seq */\n        for (int v_i_159220 = 0; v_i_159220 < v_MWidthC_1; v_i_159220 = (1 + v_i_159220)) {\n          v__136518 = int_max(v__136518, v__159241[(v_i_159220 + (v_MWidthC_1 * v_l_id_159219))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_159221 = 0; \n          v__159246[v_wg_id_159215] = doubleMinMax(v__136518, v__159226, v__159225[v_wg_id_159215], v__159227); \n        }\n        /* end map_seq */\n        v_l_id_159219 = atomic_inc(&(v_work_idx_13063)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "256",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__159222",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__159223",
    "addressSpace" : "global",
    "size" : "(1024*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__159224",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__159225",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__159226",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__159227",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__159246",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__159241",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}