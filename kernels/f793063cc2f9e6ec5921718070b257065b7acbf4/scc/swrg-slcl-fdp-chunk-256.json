{
  "name" : "swrg-slcl-fdp-chunk-256",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint int_max(int a, int b){\n  \n{\n int result = max(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint int_min(int a, int b){\n  \n{\n int result = min(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint doubleMinMax(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n //int min1 = (dpRes < alpha) ? dpRes : alpha;\n //int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n int min1 = min(dpRes, alpha);\n int min2 = min(rowIdxPair2, beta);\n int result = max(min1, min2);\n\n //printf(\"Input: dpres: %d, alpha: %d, yvecelem: %d, beta: %d, min1: %d, min2: %d, result: %d\\n\", dpRes, alpha, rowIdxPair2, beta, min1, min2, result);\n\n return result;\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__157272, const global int* restrict v__157273, const global int* restrict v__157274, const global int* restrict v__157275, int v__157276, int v__157277, global int* v__157290, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__157280; \n  int v__157282; \n  /* Private Memory */\n  int v__157284_0;\n  \n  int v__157286_0;\n  \n  for (int v_wg_id_157268 = get_group_id(0); v_wg_id_157268 < ((v_MHeight_2)/(256)); v_wg_id_157268 = (v_wg_id_157268 + get_num_groups(0))) {\n    for (int v_l_id_157269 = get_local_id(0); v_l_id_157269 < 256; v_l_id_157269 = (v_l_id_157269 + get_local_size(0))) {\n      int v_tmp_157332 = -2147483648; \n      v__157280 = v_tmp_157332; \n      /* reduce_seq */\n      for (int v_i_157270 = 0; v_i_157270 < v_MWidthC_1; v_i_157270 = (1 + v_i_157270)) {\n        int v_tmp_157333 = -2147483648; \n        v__157282 = v_tmp_157333; \n        int v_index_157334 = v__157272[(v_i_157270 + (256 * v_MWidthC_1 * v_wg_id_157268) + (v_MWidthC_1 * v_l_id_157269))]; \n        if (v_index_157334 < 0) {\n          v__157284_0 = v__157282; \n        } else {\n          if (v_index_157334 >= v_VLength_3) {\n            v__157284_0 = v__157282; \n          } else {\n            v__157284_0 = v__157274[v_index_157334]; \n          }\n        }\n        v__157286_0 = int_min(v__157284_0, v__157273[(v_i_157270 + (256 * v_MWidthC_1 * v_wg_id_157268) + (v_MWidthC_1 * v_l_id_157269))]); \n        v__157280 = int_max(v__157286_0, v__157280); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_157271 = 0; \n        v__157290[(v_l_id_157269 + (256 * v_wg_id_157268))] = doubleMinMax(v__157280, v__157276, v__157275[(v_l_id_157269 + (256 * v_wg_id_157268))], v__157277); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "256",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__157272",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__157273",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__157274",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__157275",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__157276",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__157277",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__157290",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}