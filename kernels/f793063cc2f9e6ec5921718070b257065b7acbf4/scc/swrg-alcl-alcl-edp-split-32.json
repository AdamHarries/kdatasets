{
  "name" : "swrg-alcl-alcl-edp-split-32",
  "source" : "#ifndef Tuple2_int_int_DEFINED\n#define Tuple2_int_int_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  int _1;\n} Tuple2_int_int;\n#endif\n\nint check(int acc, int v){\n  { return (v == -1); }\n}\nint id(int x){\n  { return x; }\n}\nint int_min(int a, int b){\n  \n{\n int result = min(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nint doubleMinMax(int dpRes, int alpha, int rowIdxPair2, int beta){\n  \n{\n //int min1 = (dpRes < alpha) ? dpRes : alpha;\n //int min2 = (rowIdxPair2 < beta) ? rowIdxPair2 : beta;\n\n int min1 = min(dpRes, alpha);\n int min2 = min(rowIdxPair2, beta);\n int result = max(min1, min2);\n\n //printf(\"Input: dpres: %d, alpha: %d, yvecelem: %d, beta: %d, min1: %d, min2: %d, result: %d\\n\", dpRes, alpha, rowIdxPair2, beta, min1, min2, result);\n\n return result;\n}\n    \n}\nint int_max(int a, int b){\n  \n{\n int result = max(a, b);\n //printf(\"Input: %d, %d, result: %d\\n\", a, b, result);\n return result;\n }\n \n}\nkernel void KERNEL(const global int* restrict v__146526, const global int* restrict v__146527, const global int* restrict v__146528, const global int* restrict v__146529, int v__146530, int v__146531, global int* v__146550, local int* v__146545, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  int v__146534; \n  int v__146536; \n  int v__136518; \n  /* Private Memory */\n  int v__146538_0;\n  \n  int v__146540_0;\n  \n  int v__146544_0;\n  \n  for (int v_wg_id_146519 = get_group_id(0); v_wg_id_146519 < v_MHeight_2; v_wg_id_146519 = (v_wg_id_146519 + get_num_groups(0))) {\n    /* atomic_local_map */\n    {\n      local int v_work_idx_11916; \n      v_work_idx_11916 = 0; \n      int v_l_id_146520 = atomic_inc(&(v_work_idx_11916)); \n      while((v_l_id_146520 < v_MWidthC_1)){\n        int v_tmp_146606 = -2147483648; \n        v__146534 = v_tmp_146606; \n        /* reduce_while_seq */\n        for (int v_i_146521 = 0; v_i_146521 < 32; v_i_146521 = (1 + v_i_146521)) {\n          v__146544_0 = check(v__146534, v__146526[(v_l_id_146520 + (32 * v_MWidthC_1 * v_wg_id_146519) + (v_MWidthC_1 * v_i_146521))]); \n          if (v__146544_0) {\n          } else {\n            break;\n          }\n          int v_tmp_146607 = -2147483648; \n          v__146536 = v_tmp_146607; \n          int v_index_146608 = v__146526[(v_l_id_146520 + (32 * v_MWidthC_1 * v_wg_id_146519) + (v_MWidthC_1 * v_i_146521))]; \n          if (v_index_146608 < 0) {\n            v__146538_0 = v__146536; \n          } else {\n            if (v_index_146608 >= v_VLength_3) {\n              v__146538_0 = v__146536; \n            } else {\n              v__146538_0 = v__146528[v_index_146608]; \n            }\n          }\n          v__146540_0 = int_min(v__146538_0, v__146527[(v_l_id_146520 + (32 * v_MWidthC_1 * v_wg_id_146519) + (v_MWidthC_1 * v_i_146521))]); \n          v__146534 = int_max(v__146540_0, v__146534); \n        }\n        /* end reduce_while_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_146522 = 0; \n          v__146545[v_l_id_146520] = id(v__146534); \n        }\n        /* end map_seq */\n        v_l_id_146520 = atomic_inc(&(v_work_idx_11916)); \n      }\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* atomic_local_map */\n    {\n      local int v_work_idx_11911; \n      v_work_idx_11911 = 0; \n      int v_l_id_146523 = atomic_inc(&(v_work_idx_11911)); \n      while((v_l_id_146523 < 1)){\n        int v_tmp_146611 = -2147483648; \n        v__136518 = v_tmp_146611; \n        /* reduce_seq */\n        for (int v_i_146524 = 0; v_i_146524 < v_MWidthC_1; v_i_146524 = (1 + v_i_146524)) {\n          v__136518 = int_max(v__136518, v__146545[(v_i_146524 + (v_MWidthC_1 * v_l_id_146523))]); \n        }\n        /* end reduce_seq */\n        /* map_seq */\n        /* iteration count is exactly 1, no loop emitted */\n        {\n          int v_i_146525 = 0; \n          v__146550[v_wg_id_146519] = doubleMinMax(v__136518, v__146530, v__146529[v_wg_id_146519], v__146531); \n        }\n        /* end map_seq */\n        v_l_id_146523 = atomic_inc(&(v_work_idx_11911)); \n      }\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "32",
    "innerMap2" : "alcl",
    "innerMap" : "alcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__146526",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__146527",
    "addressSpace" : "global",
    "size" : "(128*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__146528",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__146529",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__146530",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__146531",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__146550",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__146545",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}