{
  "name" : "swrg-slcl-fdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__22618, const global float* restrict v__22619, const global float* restrict v__22620, const global float* restrict v__22621, float v__22622, float v__22623, global float* v__22636, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__22626; \n  float v__22628; \n  /* Private Memory */\n  float v__22630_0;\n  \n  float v__22632_0;\n  \n  for (int v_wg_id_22614 = get_group_id(0); v_wg_id_22614 < ((v_MHeight_2)/(512)); v_wg_id_22614 = (v_wg_id_22614 + get_num_groups(0))) {\n    for (int v_l_id_22615 = get_local_id(0); v_l_id_22615 < 512; v_l_id_22615 = (v_l_id_22615 + get_local_size(0))) {\n      float v_tmp_22678 = 0.0f; \n      v__22626 = v_tmp_22678; \n      /* reduce_seq */\n      for (int v_i_22616 = 0; v_i_22616 < v_MWidthC_1; v_i_22616 = (1 + v_i_22616)) {\n        float v_tmp_22679 = 0.0f; \n        v__22628 = v_tmp_22679; \n        int v_index_22680 = v__22618[(v_i_22616 + (512 * v_MWidthC_1 * v_wg_id_22614) + (v_MWidthC_1 * v_l_id_22615))]; \n        if (v_index_22680 < 0) {\n          v__22630_0 = v__22628; \n        } else {\n          if (v_index_22680 >= v_VLength_3) {\n            v__22630_0 = v__22628; \n          } else {\n            v__22630_0 = v__22620[v_index_22680]; \n          }\n        }\n        v__22632_0 = mult(v__22630_0, v__22619[(v_i_22616 + (512 * v_MWidthC_1 * v_wg_id_22614) + (v_MWidthC_1 * v_l_id_22615))]); \n        v__22626 = add(v__22632_0, v__22626); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22617 = 0; \n        v__22636[(v_l_id_22615 + (512 * v_wg_id_22614))] = doubleMultiplyAdd(v__22626, v__22622, v__22621[(v_l_id_22615 + (512 * v_wg_id_22614))], v__22623); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__22618",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22619",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22620",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__22621",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__22622",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__22623",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__22636",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}