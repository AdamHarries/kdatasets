{
  "name" : "swrg-slcl-fdp-chunk-32",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__9434, const global float* restrict v__9435, const global float* restrict v__9436, const global float* restrict v__9437, float v__9438, float v__9439, global float* v__9452, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__9442; \n  float v__9444; \n  /* Private Memory */\n  float v__9446_0;\n  \n  float v__9448_0;\n  \n  for (int v_wg_id_9430 = get_group_id(0); v_wg_id_9430 < ((v_MHeight_2)/(32)); v_wg_id_9430 = (v_wg_id_9430 + get_num_groups(0))) {\n    for (int v_l_id_9431 = get_local_id(0); v_l_id_9431 < 32; v_l_id_9431 = (v_l_id_9431 + get_local_size(0))) {\n      float v_tmp_9494 = 0.0f; \n      v__9442 = v_tmp_9494; \n      /* reduce_seq */\n      for (int v_i_9432 = 0; v_i_9432 < v_MWidthC_1; v_i_9432 = (1 + v_i_9432)) {\n        float v_tmp_9495 = 0.0f; \n        v__9444 = v_tmp_9495; \n        int v_index_9496 = v__9434[(v_i_9432 + (32 * v_MWidthC_1 * v_wg_id_9430) + (v_MWidthC_1 * v_l_id_9431))]; \n        if (v_index_9496 < 0) {\n          v__9446_0 = v__9444; \n        } else {\n          if (v_index_9496 >= v_VLength_3) {\n            v__9446_0 = v__9444; \n          } else {\n            v__9446_0 = v__9436[v_index_9496]; \n          }\n        }\n        v__9448_0 = mult(v__9446_0, v__9435[(v_i_9432 + (32 * v_MWidthC_1 * v_wg_id_9430) + (v_MWidthC_1 * v_l_id_9431))]); \n        v__9442 = add(v__9448_0, v__9442); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_9433 = 0; \n        v__9452[(v_l_id_9431 + (32 * v_wg_id_9430))] = doubleMultiplyAdd(v__9442, v__9438, v__9437[(v_l_id_9431 + (32 * v_wg_id_9430))], v__9439); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "32",
    "dotProduct" : "fused"
  },
  "inputArgs" : [ {
    "variable" : "v__9434",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__9435",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__9436",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__9437",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__9438",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__9439",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__9452",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}