{
  "name" : "swrg-slcl-slcl-edp-split-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat id(float x){\n  { return x; }\n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nkernel void KERNEL(const global int* restrict v__22982, const global float* restrict v__22983, const global float* restrict v__22984, const global float* restrict v__22985, float v__22986, float v__22987, global float* v__23006, local float* v__23001, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__22990; \n  float v__22992; \n  float v__3017; \n  /* Private Memory */\n  float v__22994_0;\n  \n  float v__22996_0;\n  \n  int v__23000_0;\n  \n  for (int v_wg_id_22975 = get_group_id(0); v_wg_id_22975 < v_MHeight_2; v_wg_id_22975 = (v_wg_id_22975 + get_num_groups(0))) {\n    for (int v_l_id_22976 = get_local_id(0); v_l_id_22976 < v_MWidthC_1; v_l_id_22976 = (v_l_id_22976 + get_local_size(0))) {\n      float v_tmp_23071 = 0.0f; \n      v__22990 = v_tmp_23071; \n      /* reduce_while_seq */\n      for (int v_i_22977 = 0; v_i_22977 < 512; v_i_22977 = (1 + v_i_22977)) {\n        v__23000_0 = check(v__22990, v__22982[(v_l_id_22976 + (512 * v_MWidthC_1 * v_wg_id_22975) + (v_MWidthC_1 * v_i_22977))]); \n        if (v__23000_0) {\n        } else {\n          break;\n        }\n        float v_tmp_23072 = 0.0f; \n        v__22992 = v_tmp_23072; \n        int v_index_23073 = v__22982[(v_l_id_22976 + (512 * v_MWidthC_1 * v_wg_id_22975) + (v_MWidthC_1 * v_i_22977))]; \n        if (v_index_23073 < 0) {\n          v__22994_0 = v__22992; \n        } else {\n          if (v_index_23073 >= v_VLength_3) {\n            v__22994_0 = v__22992; \n          } else {\n            v__22994_0 = v__22984[v_index_23073]; \n          }\n        }\n        v__22996_0 = mult(v__22994_0, v__22983[(v_l_id_22976 + (512 * v_MWidthC_1 * v_wg_id_22975) + (v_MWidthC_1 * v_i_22977))]); \n        v__22990 = add(v__22996_0, v__22990); \n      }\n      /* end reduce_while_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22978 = 0; \n        v__23001[v_l_id_22976] = id(v__22990); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_22979 = get_local_id(0); \n      float v_tmp_23076 = 0.0f; \n      v__3017 = v_tmp_23076; \n      /* reduce_seq */\n      for (int v_i_22980 = 0; v_i_22980 < v_MWidthC_1; v_i_22980 = (1 + v_i_22980)) {\n        v__3017 = add(v__3017, v__23001[(v_i_22980 + (v_MWidthC_1 * v_l_id_22979))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22981 = 0; \n        v__23006[v_wg_id_22975] = doubleMultiplyAdd(v__3017, v__22986, v__22985[v_wg_id_22975], v__22987); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "512",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__22982",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22983",
    "addressSpace" : "global",
    "size" : "(2048*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22984",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__22985",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__22986",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__22987",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__23006",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__23001",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}