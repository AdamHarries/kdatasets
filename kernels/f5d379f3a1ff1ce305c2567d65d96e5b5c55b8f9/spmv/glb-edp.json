{
  "name" : "glb-edp",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nint check(float acc, int v){\n  { return (v != -1);}\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__2366, const global float* restrict v__2367, const global float* restrict v__2368, const global float* restrict v__2369, float v__2370, float v__2371, global float* v__2386, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__2373; \n  float v__2376; \n  /* Private Memory */\n  float v__2378; \n  float v__2380; \n  int v__2384; \n  for (int v_gl_id_2363 = get_global_id(0); v_gl_id_2363 < v_MHeight_2; v_gl_id_2363 = (v_gl_id_2363 + get_global_size(0))) {\n    float v_tmp_2420 = 0.0f; \n    v__2373 = v_tmp_2420; \n    /* reduce_while_seq */\n    for (int v_i_2364 = 0; v_i_2364 < v_MWidthC_1; v_i_2364 = (1 + v_i_2364)) {\n      v__2384 = check(v__2373, v__2366[(v_i_2364 + (v_MWidthC_1 * v_gl_id_2363))]); \n      if (v__2384) {\n      } else {\n        break;\n      }\n      float v_tmp_2421 = 0.0f; \n      v__2376 = v_tmp_2421; \n      int v_index_2422 = v__2366[(v_i_2364 + (v_MWidthC_1 * v_gl_id_2363))]; \n      if (v_index_2422 < 0) {\n        v__2378 = v__2376; \n      } else {\n        if (v_index_2422 >= v_VLength_3) {\n          v__2378 = v__2376; \n        } else {\n          v__2378 = v__2368[v_index_2422]; \n        }\n      }\n      v__2380 = mult(v__2378, v__2367[(v_i_2364 + (v_MWidthC_1 * v_gl_id_2363))]); \n      v__2373 = add(v__2380, v__2373); \n    }\n    /* end reduce_while_seq */\n    /* map_seq */\n    /* iteration count is exactly 1, no loop emitted */\n    {\n      int v_i_2365 = 0; \n      v__2386[v_gl_id_2363] = doubleMultiplyAdd(v__2373, v__2370, v__2369[v_gl_id_2363], v__2371); \n    }\n    /* end map_seq */\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "sglb",
    "dotProduct" : "earlyexit"
  },
  "inputArgs" : [ {
    "variable" : "v__2366",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__2367",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__2368",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__2369",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__2370",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__2371",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ ],
  "outputArg" : {
    "variable" : "v__2386",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}