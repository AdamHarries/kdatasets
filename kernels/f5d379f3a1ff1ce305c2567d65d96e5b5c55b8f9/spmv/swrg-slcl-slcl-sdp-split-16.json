{
  "name" : "swrg-slcl-slcl-sdp-split-16",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__6296, const global float* restrict v__6297, const global float* restrict v__6298, const global float* restrict v__6299, float v__6300, float v__6301, global float* v__6318, global float* v__6308, local float* v__6313, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__6304; \n  float v__6309; \n  float v__3017; \n  /* Private Memory */\n  float v__6306_0;\n  \n  for (int v_wg_id_6288 = get_group_id(0); v_wg_id_6288 < v_MHeight_2; v_wg_id_6288 = (v_wg_id_6288 + get_num_groups(0))) {\n    for (int v_l_id_6289 = get_local_id(0); v_l_id_6289 < v_MWidthC_1; v_l_id_6289 = (v_l_id_6289 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_6290 = 0; v_i_6290 < 16; v_i_6290 = (1 + v_i_6290)) {\n        float v_tmp_6380 = 0.0f; \n        v__6304 = v_tmp_6380; \n        int v_index_6381 = v__6296[(v_l_id_6289 + (16 * v_MWidthC_1 * v_wg_id_6288) + (v_MWidthC_1 * v_i_6290))]; \n        if (v_index_6381 < 0) {\n          v__6306_0 = v__6304; \n        } else {\n          if (v_index_6381 >= v_VLength_3) {\n            v__6306_0 = v__6304; \n          } else {\n            v__6306_0 = v__6298[v_index_6381]; \n          }\n        }\n        v__6308[(15 + (16 * v_MWidthC_1 * v_wg_id_6288) + (-1 * v_i_6290) + (16 * v_l_id_6289))] = mult(v__6306_0, v__6297[(v_l_id_6289 + (16 * v_MWidthC_1 * v_wg_id_6288) + (v_MWidthC_1 * v_i_6290))]); \n      }\n      /* end map_seq */\n      float v_tmp_6382 = 0.0f; \n      v__6309 = v_tmp_6382; \n      /* reduce_seq */\n      for (int v_i_6291 = 0; v_i_6291 < 16; v_i_6291 = (1 + v_i_6291)) {\n        v__6309 = add(v__6309, v__6308[(v_i_6291 + (16 * v_MWidthC_1 * v_wg_id_6288) + (16 * v_l_id_6289))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_6292 = 0; \n        v__6313[v_l_id_6289] = id(v__6309); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_6293 = get_local_id(0); \n      float v_tmp_6385 = 0.0f; \n      v__3017 = v_tmp_6385; \n      /* reduce_seq */\n      for (int v_i_6294 = 0; v_i_6294 < v_MWidthC_1; v_i_6294 = (1 + v_i_6294)) {\n        v__3017 = add(v__3017, v__6313[(v_i_6294 + (v_MWidthC_1 * v_l_id_6293))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_6295 = 0; \n        v__6318[v_wg_id_6288] = doubleMultiplyAdd(v__3017, v__6300, v__6299[v_wg_id_6288], v__6301); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "16",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__6296",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__6297",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__6298",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__6299",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__6300",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__6301",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__6308",
    "addressSpace" : "global",
    "size" : "(64*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__6318",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__6313",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}