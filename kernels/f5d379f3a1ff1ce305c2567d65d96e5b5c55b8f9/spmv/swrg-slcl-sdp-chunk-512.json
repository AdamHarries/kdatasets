{
  "name" : "swrg-slcl-sdp-chunk-512",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__22543, const global float* restrict v__22544, const global float* restrict v__22545, const global float* restrict v__22546, float v__22547, float v__22548, global float* v__22561, global float* v__22555, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__22551; \n  float v__22556; \n  /* Private Memory */\n  float v__22553_0;\n  \n  for (int v_wg_id_22538 = get_group_id(0); v_wg_id_22538 < ((v_MHeight_2)/(512)); v_wg_id_22538 = (v_wg_id_22538 + get_num_groups(0))) {\n    for (int v_l_id_22539 = get_local_id(0); v_l_id_22539 < 512; v_l_id_22539 = (v_l_id_22539 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_22540 = 0; v_i_22540 < v_MWidthC_1; v_i_22540 = (1 + v_i_22540)) {\n        float v_tmp_22605 = 0.0f; \n        v__22551 = v_tmp_22605; \n        int v_index_22606 = v__22543[(v_i_22540 + (512 * v_MWidthC_1 * v_wg_id_22538) + (v_MWidthC_1 * v_l_id_22539))]; \n        if (v_index_22606 < 0) {\n          v__22553_0 = v__22551; \n        } else {\n          if (v_index_22606 >= v_VLength_3) {\n            v__22553_0 = v__22551; \n          } else {\n            v__22553_0 = v__22545[v_index_22606]; \n          }\n        }\n        v__22555[(-1 + v_MWidthC_1 + (512 * v_MWidthC_1 * v_wg_id_22538) + (-1 * v_i_22540) + (v_MWidthC_1 * v_l_id_22539))] = mult(v__22553_0, v__22544[(v_i_22540 + (512 * v_MWidthC_1 * v_wg_id_22538) + (v_MWidthC_1 * v_l_id_22539))]); \n      }\n      /* end map_seq */\n      float v_tmp_22607 = 0.0f; \n      v__22556 = v_tmp_22607; \n      /* reduce_seq */\n      for (int v_i_22541 = 0; v_i_22541 < v_MWidthC_1; v_i_22541 = (1 + v_i_22541)) {\n        v__22556 = add(v__22556, v__22555[(v_i_22541 + (512 * v_MWidthC_1 * v_wg_id_22538) + (v_MWidthC_1 * v_l_id_22539))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_22542 = 0; \n        v__22561[(v_l_id_22539 + (512 * v_wg_id_22538))] = doubleMultiplyAdd(v__22556, v__22547, v__22546[(v_l_id_22539 + (512 * v_wg_id_22538))], v__22548); \n      }\n      /* end map_seq */\n    }\n  }\n}}\n\n",
  "properties" : {
    "outerMap" : "swrg",
    "innerMap" : "slcl",
    "chunkSize" : "512",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__22543",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22544",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__22545",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__22546",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__22547",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__22548",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__22555",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__22561",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}