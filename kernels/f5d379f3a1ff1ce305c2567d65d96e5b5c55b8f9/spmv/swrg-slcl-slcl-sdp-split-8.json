{
  "name" : "swrg-slcl-slcl-sdp-split-8",
  "source" : "#ifndef Tuple2_int_float_DEFINED\n#define Tuple2_int_float_DEFINED\ntypedef struct __attribute__((aligned(4))) {\n  int _0;\n  float _1;\n} Tuple2_int_float;\n#endif\n\nfloat mult(float l, float r){\n  \n//printf(\"l (vect): %f, r (matrix): %f\\n\", l, r);\nreturn l*r;\n    \n}\nfloat add(float x, float y){\n  \n//printf(\"x: %f, y: %f\\n\", x, y);\nreturn x+y;\n    \n}\nfloat id(float x){\n  { return x; }\n}\nfloat doubleMultiplyAdd(float dpRes, float alpha, float rowIdxPair2, float beta){\n  \n{\n //printf(\"dpRes: %f, alpha: %f, rowIdxPair2: %f, beta: %f\\n\", dpRes,alpha,rowIdxPair2, beta);\n return (dpRes*alpha)+(rowIdxPair2*beta);\n}\n    \n}\nkernel void KERNEL(const global int* restrict v__2999, const global float* restrict v__3000, const global float* restrict v__3001, const global float* restrict v__3002, float v__3003, float v__3004, global float* v__3022, global float* v__3011, local float* v__3016, int v_MHeight_2, int v_MWidthC_1, int v_VLength_3){ \n#ifndef WORKGROUP_GUARD\n#define WORKGROUP_GUARD\n#endif\nWORKGROUP_GUARD\n{\n  /* Static local memory */\n  /* Typed Value memory */\n  float v__3007; \n  float v__3012; \n  float v__3017; \n  /* Private Memory */\n  float v__3009_0;\n  \n  for (int v_wg_id_2991 = get_group_id(0); v_wg_id_2991 < v_MHeight_2; v_wg_id_2991 = (v_wg_id_2991 + get_num_groups(0))) {\n    for (int v_l_id_2992 = get_local_id(0); v_l_id_2992 < v_MWidthC_1; v_l_id_2992 = (v_l_id_2992 + get_local_size(0))) {\n      /* map_seq */\n      for (int v_i_2993 = 0; v_i_2993 < 8; v_i_2993 = (1 + v_i_2993)) {\n        float v_tmp_3084 = 0.0f; \n        v__3007 = v_tmp_3084; \n        int v_index_3085 = v__2999[(v_l_id_2992 + (8 * v_MWidthC_1 * v_wg_id_2991) + (v_MWidthC_1 * v_i_2993))]; \n        if (v_index_3085 < 0) {\n          v__3009_0 = v__3007; \n        } else {\n          if (v_index_3085 >= v_VLength_3) {\n            v__3009_0 = v__3007; \n          } else {\n            v__3009_0 = v__3001[v_index_3085]; \n          }\n        }\n        v__3011[(7 + (8 * v_MWidthC_1 * v_wg_id_2991) + (-1 * v_i_2993) + (8 * v_l_id_2992))] = mult(v__3009_0, v__3000[(v_l_id_2992 + (8 * v_MWidthC_1 * v_wg_id_2991) + (v_MWidthC_1 * v_i_2993))]); \n      }\n      /* end map_seq */\n      float v_tmp_3086 = 0.0f; \n      v__3012 = v_tmp_3086; \n      /* reduce_seq */\n      for (int v_i_2994 = 0; v_i_2994 < 8; v_i_2994 = (1 + v_i_2994)) {\n        v__3012 = add(v__3012, v__3011[(v_i_2994 + (8 * v_MWidthC_1 * v_wg_id_2991) + (8 * v_l_id_2992))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_2995 = 0; \n        v__3016[v_l_id_2992] = id(v__3012); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_LOCAL_MEM_FENCE);\n    \n    /* iteration count is exactly 1 or less, no loop emitted */\n    if (get_local_id(0) < 1) {\n      int v_l_id_2996 = get_local_id(0); \n      float v_tmp_3089 = 0.0f; \n      v__3017 = v_tmp_3089; \n      /* reduce_seq */\n      for (int v_i_2997 = 0; v_i_2997 < v_MWidthC_1; v_i_2997 = (1 + v_i_2997)) {\n        v__3017 = add(v__3017, v__3016[(v_i_2997 + (v_MWidthC_1 * v_l_id_2996))]); \n      }\n      /* end reduce_seq */\n      /* map_seq */\n      /* iteration count is exactly 1, no loop emitted */\n      {\n        int v_i_2998 = 0; \n        v__3022[v_wg_id_2991] = doubleMultiplyAdd(v__3017, v__3003, v__3002[v_wg_id_2991], v__3004); \n      }\n      /* end map_seq */\n    }\n    barrier(CLK_GLOBAL_MEM_FENCE);\n    \n  }\n}}\n\n",
  "properties" : {
    "splitSize" : "8",
    "innerMap2" : "slcl",
    "innerMap" : "slcl",
    "outerMap" : "swrg",
    "dotProduct" : "seq"
  },
  "inputArgs" : [ {
    "variable" : "v__2999",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__3000",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  }, {
    "variable" : "v__3001",
    "addressSpace" : "global",
    "size" : "(4*v_VLength_3)"
  }, {
    "variable" : "v__3002",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  }, {
    "variable" : "v__3003",
    "addressSpace" : "private",
    "size" : "4"
  }, {
    "variable" : "v__3004",
    "addressSpace" : "private",
    "size" : "4"
  } ],
  "tempGlobals" : [ {
    "variable" : "v__3011",
    "addressSpace" : "global",
    "size" : "(32*v_MHeight_2*v_MWidthC_1)"
  } ],
  "outputArg" : {
    "variable" : "v__3022",
    "addressSpace" : "global",
    "size" : "(4*v_MHeight_2)"
  },
  "tempLocals" : [ {
    "variable" : "v__3016",
    "addressSpace" : "local",
    "size" : "(4*v_MWidthC_1)"
  } ],
  "paramVars" : [ "MHeight", "MWidthC", "VLength" ],
  "outputSize" : "(4*v_MHeight_2)"
}